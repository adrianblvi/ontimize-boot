{"version":3,"file":"permissions.js","sourceRoot":"","sources":["../../../tmp/ontimize/util/permissions.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,IAAI,EAAE,MAAM,QAAQ,CAAC;AAE9B;IAAA;IAkDA,CAAC;IArCQ,uCAAsB,GAA7B,UAA8B,UAAwB;QACpD,IAAI,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,UAAU,CAAC,OAAO,KAAK,KAAK,EAAE;YAC9D,OAAO,CAAC,IAAI,CAAC,2CAA2C,CAAC,CAAC;YAC1D,OAAO,KAAK,CAAC;SACd;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAEM,6CAA4B,GAAnC,UAAoC,aAAkB,EAAE,IAAU;QAChE,IAAM,QAAQ,GAAa,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,gBAAgB,CAAC,qBAAqB,CAAC;QAC1G,IAAM,gBAAgB,GAAY,IAAI,IAAI,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;QAC/E,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,EAAE;YAClC,OAAO,SAAS,CAAC;SAClB;QAED,IAAM,gBAAgB,GAAG,IAAI,gBAAgB,CAAC,UAAC,SAA2B;YACxE,IAAM,QAAQ,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;YAC9B,IAAI,QAAQ,CAAC,IAAI,KAAK,YAAY,IAAI,QAAQ,CAAC,aAAa,KAAK,UAAU,EAAE;gBAC3E,IAAM,SAAS,GAAI,QAAQ,CAAC,MAAc,CAAC,UAAU,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;gBAC/E,IAAI,SAAS,KAAK,IAAI,IAAI,CAAC,gBAAgB,IAAI,SAAS,CAAC,KAAK,KAAK,MAAM,CAAC,EAAE;oBAC1E,QAAQ,CAAC,QAAQ,CAAC,CAAC;iBACpB;aACF;QACH,CAAC,CAAC,CAAC;QAEH,gBAAgB,CAAC,OAAO,CAAC,aAAa,EAAE;YACtC,UAAU,EAAE,IAAI;YAChB,eAAe,EAAE,CAAC,UAAU,CAAC;SAC9B,CAAC,CAAC;QAEH,OAAO,gBAAgB,CAAC;IAC1B,CAAC;IAEM,sCAAqB,GAA5B,UAA6B,QAAwB;QACnD,IAAI,OAAO,GAAqB,QAAQ,CAAC,MAAM,CAAC;QAChD,OAAO,CAAC,YAAY,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;IAC3C,CAAC;IAhDa,+BAAc,GAAG,SAAS,CAAC;IAC3B,8BAAa,GAAG,QAAQ,CAAC;IACzB,8BAAa,GAAG,QAAQ,CAAC;IACzB,8BAAa,GAAG,QAAQ,CAAC;IAEzB,iCAAgB,GAAG;QAC/B,gBAAgB,CAAC,cAAc;QAC/B,gBAAgB,CAAC,aAAa;QAC9B,gBAAgB,CAAC,aAAa;QAC9B,gBAAgB,CAAC,aAAa;KAC/B,CAAC;IAuCJ,uBAAC;CAAA,AAlDD,IAkDC;SAlDY,gBAAgB","sourcesContent":["import { OPermissions } from '../services/permissions/permissions.service';\nimport { Util } from './util';\n\nexport class PermissionsUtils {\n  public static ACTION_REFRESH = 'refresh';\n  public static ACTION_INSERT = 'insert';\n  public static ACTION_UPDATE = 'update';\n  public static ACTION_DELETE = 'delete';\n\n  public static STANDARD_ACTIONS = [\n    PermissionsUtils.ACTION_REFRESH,\n    PermissionsUtils.ACTION_INSERT,\n    PermissionsUtils.ACTION_UPDATE,\n    PermissionsUtils.ACTION_DELETE\n  ];\n\n  static checkEnabledPermission(permission: OPermissions): boolean {\n    if (Util.isDefined(permission) && permission.enabled === false) {\n      console.warn('MESSAGES.OPERATION_NOT_ALLOWED_PERMISSION');\n      return false;\n    }\n    return true;\n  }\n\n  static registerDisabledChangesInDom(nativeElement: any, args?: any): MutationObserver {\n    const callback: Function = args && args.callback ? args.callback : PermissionsUtils.setDisabledDOMElement;\n    const checkStringValue: boolean = args && args.checkStringValue ? true : false;\n    if (!Util.isDefined(nativeElement)) {\n      return undefined;\n    }\n\n    const mutationObserver = new MutationObserver((mutations: MutationRecord[]) => {\n      const mutation = mutations[0];\n      if (mutation.type === 'attributes' && mutation.attributeName === 'disabled') {\n        const attribute = (mutation.target as any).attributes.getNamedItem('disabled');\n        if (attribute === null || (checkStringValue && attribute.value !== 'true')) {\n          callback(mutation);\n        }\n      }\n    });\n\n    mutationObserver.observe(nativeElement, {\n      attributes: true,\n      attributeFilter: ['disabled']\n    });\n\n    return mutationObserver;\n  }\n\n  static setDisabledDOMElement(mutation: MutationRecord) {\n    let element = <HTMLInputElement>mutation.target;\n    element.setAttribute('disabled', 'true');\n  }\n}\n"]}
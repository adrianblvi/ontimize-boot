{"version":3,"file":"util.js","sourceRoot":"","sources":["../../../tmp/ontimize/util/util.ts"],"names":[],"mappings":"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","sourcesContent":["import { Observable } from 'rxjs';\nimport { IFormDataComponent } from '../components/o-form-data-component.class';\nimport { Base64 } from './base64';\nimport { Codes } from './codes';\n\n\nexport interface IDataService {\n  getDefaultServiceConfiguration(serviceName?: string): Object;\n  configureService(config: any): void;\n  query(kv?: Object, av?: Array<string>, entity?: string, sqltypes?: Object): Observable<any>;\n  advancedQuery(kv?: Object, av?: Array<string>, entity?: string, sqltypes?: Object, offset?: number, pagesize?: number, orderby?: Array<Object>): Observable<any>;\n  insert(av: Object, entity?: string, sqltypes?: Object): Observable<any>;\n  update(kv: Object, av: Object, entity?: string, sqltypes?: Object): Observable<any>;\n  'delete'(kv: Object, entity?: string, sqltypes?: Object): Observable<any>;\n}\n\nexport interface IPermissionsService {\n  loadPermissions();\n}\n\nexport interface IAuthService {\n  startsession(user: string, password: string): Observable<any>;\n  endsession(user: string, sessionId: number): Observable<any>;\n  redirectLogin?(sessionExpired?: boolean);\n}\n\nexport class Util {\n\n  static isObject(val: any): boolean {\n    const valType = typeof val;\n    return valType === 'object';\n  }\n\n  static isArray(val: any): boolean {\n    return val instanceof Array;\n  }\n\n  static parseBoolean(value: string, defaultValue?: boolean): boolean {\n    if ((typeof value === 'string') && (value.toUpperCase() === 'TRUE' || value.toUpperCase() === 'YES')) {\n      return true;\n    } else if ((typeof value === 'string') && (value.toUpperCase() === 'FALSE' || value.toUpperCase() === 'NO')) {\n      return false;\n    } else if (Util.isDefined(defaultValue)) {\n      return defaultValue;\n    }\n    return false;\n  }\n\n  static parseArray(value: string, excludeRepeated: boolean = false): string[] {\n    let result = [];\n    if (value) {\n      result = value.split(Codes.ARRAY_INPUT_SEPARATOR);\n    }\n    if (excludeRepeated && result.length > 0) {\n      result = Array.from(new Set(result));\n    }\n    return result;\n  }\n\n  /**\n   * Returns an object with parent keys equivalences.\n   * @param  pKeysArray Array of strings. Accepted format: key | key:alias\n   * @returns Object\n   */\n  static parseParentKeysEquivalences(pKeysArray: Array<string>, separator: string = ':'): Object {\n    const equivalences = {};\n    if (pKeysArray && pKeysArray.length > 0) {\n      pKeysArray.forEach(item => {\n        const aux = item.split(separator);\n        if (aux && aux.length === 2) {\n          if (/.+\\[.+\\]/.test(aux[1])) {\n            const equivKey = aux[1].substring(0, aux[1].indexOf('['));\n            const equivValue = aux[1].substring(aux[1].indexOf('[') + 1, aux[1].indexOf(']'));\n            const equiv = {};\n            equiv[equivKey] = equivValue;\n            equivalences[aux[0]] = equiv;\n          } else {\n            equivalences[aux[0]] = aux[1];\n          }\n        } else if (aux && aux.length === 1) {\n          equivalences[item] = item;\n        }\n      });\n    }\n    return equivalences;\n  }\n\n  static encodeParentKeys(parentKeys: Object): string {\n    let encoded: string = '';\n    if (parentKeys) {\n      encoded = Base64.encode(JSON.stringify(parentKeys));\n    }\n    return encoded;\n  }\n\n  static decodeParentKeys(parentKeys: string): Object {\n    let decoded = {};\n    if (parentKeys && parentKeys.length > 0) {\n      const d = Base64.decode(parentKeys);\n      decoded = JSON.parse(d);\n    }\n    return decoded;\n  }\n\n  static isArrayEmpty(array: any[]): boolean {\n    if (array && array.length === 0) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Checks wether specified service as argument implements 'IDataService' interface\n   * @param arg The service instance for checking.\n   * @returns boolean\n   */\n  static isDataService(arg: any): arg is IDataService {\n    if (arg === undefined || arg === null) {\n      return false;\n    }\n    return ((arg as IDataService).getDefaultServiceConfiguration !== undefined &&\n      (arg as IDataService).configureService !== undefined);\n  }\n\n  /**\n   * Checks wether specified service as argument implements 'IDataService' interface\n   * @param arg The service instance for checking.\n   * @returns boolean\n   */\n  static isPermissionsService(arg: any): arg is IPermissionsService {\n    if (arg === undefined || arg === null) {\n      return false;\n    }\n    return ((arg as IPermissionsService).loadPermissions !== undefined);\n  }\n\n  /**\n   * Checks wether specified component as argument implements 'IFormDataComponent' interface\n   * @param arg The component instance for checking.\n   * @returns boolean\n   */\n  static isFormDataComponent(arg: any): arg is IFormDataComponent {\n    if (arg === undefined || arg === null) {\n      return false;\n    }\n    return ((arg as IFormDataComponent).isAutomaticBinding !== undefined);\n  }\n\n  /**\n   * Compare is equal two objects\n   * @param a Object 1\n   * @param b Object 2\n   *\n   */\n  static isEquivalent(a, b) {\n    // Create arrays of property names\n    const aProps = Object.getOwnPropertyNames(a);\n    const bProps = Object.getOwnPropertyNames(b);\n\n    // If number of properties is different, objects are not equivalent\n    if (aProps.length !== bProps.length) {\n      return false;\n    }\n\n    for (var i = 0; i < aProps.length; i++) {\n      const propName = aProps[i];\n      // If values of same property are not equal, objects are not equivalent\n      let bValue = b[propName];\n      if (typeof a[propName] === 'number') {\n        const intB = parseInt(bValue);\n        bValue = isNaN(intB) ? bValue : intB;\n      }\n      if (a[propName] !== bValue) {\n        return false;\n      }\n    }\n\n    // If we made it this far, objects are considered equivalent\n    return true;\n  }\n\n  static equals(o1: any, o2: any): boolean {\n    if (o1 === o2) {\n      return true;\n    }\n    if (o1 === null || o2 === null) {\n      return false;\n    }\n    if (o1 !== o1 && o2 !== o2) {\n      // NaN === NaN\n      return true;\n    }\n    const t1 = typeof o1;\n    const t2 = typeof o2;\n    let length: number;\n    let key: any;\n    let keySet: any;\n    if (t1 === t2 && t1 === 'object') {\n      if (Array.isArray(o1)) {\n        if (!Array.isArray(o2)) {\n          return false;\n        }\n        length = o1.length;\n        if (length === o2.length) {\n          for (key = 0; key < length; key++) {\n            if (!Util.equals(o1[key], o2[key])) {\n              return false;\n            }\n          }\n          return true;\n        }\n      } else {\n        if (Array.isArray(o2)) {\n          return false;\n        }\n        keySet = Object.create(null);\n        for (key in o1) {\n          if (!Util.equals(o1[key], o2[key])) {\n            return false;\n          }\n          keySet[key] = true;\n        }\n        for (key in o2) {\n          if (!(key in keySet) && typeof o2[key] !== 'undefined') {\n            return false;\n          }\n        }\n        return true;\n      }\n    }\n    return false;\n  }\n\n  static isDefined(value: any): boolean {\n    return typeof value !== 'undefined' && value !== null;\n  }\n\n  /**\n   * Returns the provided string in lowercase and without accent marks.\n   * @param value the text to normalize\n   */\n  static normalizeString(value: string, toLowerCase: boolean = true): string {\n    if (value && value.length) {\n      let result = value.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n      if (toLowerCase) {\n        result = result.toLowerCase();\n      }\n      return result;\n    }\n    return '';\n  }\n\n  /**\n   * Returns the provided array flattend.\n   * @param array the array to flat\n   */\n  static flatten(array: Array<any>): Array<any> {\n    return [].concat(...array);\n  }\n\n  /**\n   * Returns a list with all the values from the provided object.\n   * @param obj the object\n   */\n  static getValuesFromObject(obj: Object = {}): Array<any> {\n    const array: Array<any> = [];\n    Object.keys(obj).forEach(key => {\n      if (typeof obj[key] === 'object') {\n        array.push(Util.getValuesFromObject(obj[key]));\n      }\n      array.push(obj[key]);\n    });\n    return Util.flatten(array);\n  }\n\n  static parseIconPosition(value: string, defaultValue?: string): string {\n    let result = defaultValue || Codes.ICON_POSITION_LEFT;\n    const availablePositions = [Codes.ICON_POSITION_LEFT, Codes.ICON_POSITION_RIGHT];\n    if (value && value.length) {\n      result = value.toLowerCase();\n    }\n    if (availablePositions.indexOf(result) === -1) {\n      result = defaultValue || Codes.ICON_POSITION_LEFT;\n    }\n    return result;\n  }\n\n  static copyToClipboard(data: string) {\n    document.addEventListener('copy', (e: ClipboardEvent) => {\n      e.clipboardData.setData('text/plain', data);\n      e.preventDefault();\n      document.removeEventListener('copy', null);\n    });\n    document.execCommand('copy');\n  }\n\n  static checkPixelsValueString(value: string): boolean {\n    return typeof value === 'string' ? value.toLowerCase().endsWith('px') : false;\n  }\n\n  static extractPixelsValue(value: any, defaultValue: number = undefined): number {\n    let result: number = typeof value === 'number' ? value : undefined;\n    if (Util.checkPixelsValueString(value)) {\n      let parsed = parseFloat(value.substr(0, value.length - 'px'.length));\n      result = isNaN(parsed) ? defaultValue : parsed;\n    }\n    return Util.isDefined(result) ? result : defaultValue;\n  }\n  /**\n   * Added class 'accent' in <mat-form-field> and set the color  accent in the icons\n   * @param elRef\n   * @param oInputsOptions\n   */\n\n  static parseOInputsOptions(elRef, oInputsOptions) {\n\n    if (oInputsOptions.iconColor === Codes.O_INPUTS_OPTIONS_COLOR_ACCENT) {\n      const matFormFieldEL = elRef.nativeElement.getElementsByTagName('mat-form-field')[0];\n      if (Util.isDefined(matFormFieldEL)) {\n        matFormFieldEL.classList.add('accent');\n      }\n    }\n  }\n\n\n  /**\n   *  Return string with escaped special character\n   * */\n  static escapeSpecialCharacter(S: string): string {\n\n    let str = String(S);\n\n    let cpList = Array.from(str[Symbol.iterator]());\n\n    let cuList = [];\n    for (let c of cpList) {\n      // i. If c is a SpecialCharacter then do:\n      if ('^$\\\\.*+?()[]{}|'.indexOf(c) !== -1) {\n        // a. Append \"\\\" to cuList.\n        cuList.push('\\\\');\n      }\n      // Append c to cpList.\n      cuList.push(c);\n    }\n    let L = cuList.join('');\n    return L;\n\n  }\n\n  static differenceArrays(array1: Array<any>, array2: Array<any>): Array<any> {\n    const difference = array1.filter(obj => {\n      return !array2.some(obj2 => {\n        return this.equals(obj, obj2);\n      });\n    });\n    return difference;\n  }\n}\n"]}
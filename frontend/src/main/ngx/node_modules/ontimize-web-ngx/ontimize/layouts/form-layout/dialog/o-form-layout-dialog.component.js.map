{"version":3,"file":"o-form-layout-dialog.component.js","sourceRoot":"","sources":["../../../../../tmp/ontimize/layouts/form-layout/dialog/o-form-layout-dialog.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, Inject, ViewEncapsulation, AfterViewInit, ComponentFactoryResolver, ViewChild, ComponentFactory, Injector } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { OFormLayoutManagerContentDirective } from '../directives/o-form-layout-manager-content.directive';\nimport { OFormLayoutManagerComponent } from '../../../layouts/form-layout/o-form-layout-manager.component';\n\n@Component({\n  moduleId: module.id,\n  selector: 'o-form-layout-dialog',\n  template: `\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" class=\"title-container\">\n      <span fxFlex fxLayoutAlign=\"center center\" mat-dialog-title> {{ (title || 'LAYOUT_MANANGER.DIALOG_TITLE') | oTranslate }}{{ label }} </span>\n      <mat-icon (click)=\"closeDialog()\" svgIcon=\"ontimize:close\"></mat-icon>\n    </div>\n\n    <div mat-dialog-content class=\"form-layout-dialog-container\">\n      <ng-template o-form-layout-manager-content></ng-template>\n    </div>\n  `,\n  styles: [`\n    .o-form-layout-dialog-overlay{width:65%;height:90%}.o-form-layout-dialog-overlay .title-container{cursor:default;height:64px;padding:0 16px}.o-form-layout-dialog-overlay .title-container .mat-dialog-title{width:100%;padding-left:24px;text-align:center;margin:0}.o-form-layout-dialog-overlay .title-container .mat-icon{cursor:pointer}.o-form-layout-dialog-overlay .mat-dialog-container{padding:0 !important;overflow:hidden}.o-form-layout-dialog-overlay .mat-dialog-container .mat-dialog-content.form-layout-dialog-container{display:block;padding-top:16px;margin:0;max-height:calc(100% - 78px);height:100%}.o-form-layout-dialog-overlay .mat-dialog-container .o-form-layout-dialog o-form-toolbar .mat-toolbar{padding:0}.o-form-layout-dialog-overlay .mat-dialog-container .o-form-layout-dialog .o-form form.inner-form{position:relative;margin-top:0}\n  `],\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    '[class.o-form-layout-dialog]': 'true'\n  }\n})\nexport class OFormLayoutDialogComponent implements AfterViewInit {\n  formLayoutManager: OFormLayoutManagerComponent;\n  queryParams: any;\n  params: Object;\n  urlSegments: any[];\n  label: string;\n  title: string;\n  data: any;\n\n  protected componentFactory: ComponentFactory<any>;\n\n  @ViewChild(OFormLayoutManagerContentDirective) contentDirective: OFormLayoutManagerContentDirective;\n\n  constructor(\n    public dialogRef: MatDialogRef<OFormLayoutDialogComponent>,\n    protected injector: Injector,\n    protected componentFactoryResolver: ComponentFactoryResolver,\n    @Inject(MAT_DIALOG_DATA) data: any\n  ) {\n    if (data.title) {\n      this.title = data.title;\n    }\n    if (data.data) {\n      this.data = data.data;\n      const component = data.data.component;\n      this.componentFactory = this.componentFactoryResolver.resolveComponentFactory(component);\n      this.params = data.data.params;\n      this.queryParams = data.data.queryParams;\n      this.urlSegments = data.data.urlSegments;\n    }\n    if (data.layoutManagerComponent) {\n      this.formLayoutManager = data.layoutManagerComponent;\n    }\n  }\n\n  ngAfterViewInit() {\n    if (this.contentDirective && this.componentFactory) {\n      let viewContainerRef = this.contentDirective.viewContainerRef;\n      viewContainerRef.clear();\n      viewContainerRef.createComponent(this.componentFactory);\n    }\n  }\n\n  updateNavigation(data: any, id: string) {\n    let label = this.formLayoutManager.getLabelFromData(data);\n    label = label.length ? label : this.formLayoutManager.getLabelFromUrlParams(this.params);\n    if (label && label.length) {\n      label = ': ' + label;\n    }\n    this.label = label;\n  }\n\n  updateActiveData(data: any) {\n    this.data = Object.assign(this.data, data);\n  }\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n\n  getRouteOfActiveItem(): any[] {\n    const parentRoute = this.formLayoutManager.parentFormLayoutManager.getRouteOfActiveItem();\n    const segments = (this.urlSegments || []);\n    let route = [];\n    segments.forEach((segment, index) => {\n      if (parentRoute[index] !== segment.path) {\n        route.push(segment.path);\n      }\n    });\n    return route;\n  }\n\n  getParams(): any {\n    return this.params;\n  }\n\n}\n"]}
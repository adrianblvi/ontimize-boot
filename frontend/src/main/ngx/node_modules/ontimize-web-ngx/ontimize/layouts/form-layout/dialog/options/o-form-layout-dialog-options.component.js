var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Component, forwardRef, Inject, ViewEncapsulation } from '@angular/core';
import { InputConverter } from '../../../../decorators/input-converter';
import { OFormLayoutManagerComponent } from '../../o-form-layout-manager.component';
export var DEFAULT_INPUTS_O_FORM_LAYOUT_DIALOG_OPTIONS = [
    'width',
    'minWidth: min-width',
    'maxWidth: max-width',
    'height',
    'minHeight: min-height',
    'maxHeight max-height',
    'class',
    'position',
    'backdropClass: backdrop-class',
    'closeOnNavigation: close-on-navigation',
    'disableClose:disable-close'
];
var OFormLayoutDialogOptionsComponent = (function () {
    function OFormLayoutDialogOptionsComponent(oFormLayoutManager) {
        this.oFormLayoutManager = oFormLayoutManager;
        this.width = '';
        this.height = '';
        this.class = '';
        this.closeOnNavigation = true;
        this.disableClose = true;
    }
    OFormLayoutDialogOptionsComponent.decorators = [
        { type: Component, args: [{
                    moduleId: module.id,
                    selector: 'o-form-layout-dialog-options',
                    template: ' ',
                    inputs: DEFAULT_INPUTS_O_FORM_LAYOUT_DIALOG_OPTIONS,
                    encapsulation: ViewEncapsulation.None,
                    host: {
                        '[class.o-form-layout-dialog-options]': 'true'
                    }
                },] },
    ];
    OFormLayoutDialogOptionsComponent.ctorParameters = function () { return [
        { type: OFormLayoutManagerComponent, decorators: [{ type: Inject, args: [forwardRef(function () { return OFormLayoutManagerComponent; }),] }] }
    ]; };
    __decorate([
        InputConverter(),
        __metadata("design:type", Boolean)
    ], OFormLayoutDialogOptionsComponent.prototype, "closeOnNavigation", void 0);
    __decorate([
        InputConverter(),
        __metadata("design:type", Boolean)
    ], OFormLayoutDialogOptionsComponent.prototype, "disableClose", void 0);
    return OFormLayoutDialogOptionsComponent;
}());
export { OFormLayoutDialogOptionsComponent };
//# sourceMappingURL=o-form-layout-dialog-options.component.js.map
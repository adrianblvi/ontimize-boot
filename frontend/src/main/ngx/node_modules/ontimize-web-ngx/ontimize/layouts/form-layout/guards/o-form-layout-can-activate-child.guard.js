import { Injectable, Injector } from '@angular/core';
import { Util } from '../../../utils';
import { OFormLayoutManagerService } from '../../../services/o-form-layout-manager.service';
import { ShareCanActivateChildService } from '../../../services/share-can-activate-child.service';
var CanActivateFormLayoutChildGuard = (function () {
    function CanActivateFormLayoutChildGuard(injector) {
        this.injector = injector;
        this.shareCanActivateChildService = this.injector.get(ShareCanActivateChildService);
        try {
            this.oFormLayoutService = this.injector.get(OFormLayoutManagerService);
        }
        catch (e) {
            console.error(e);
        }
    }
    CanActivateFormLayoutChildGuard.prototype.canActivateChild = function (childRoute, state) {
        var formLayoutManager = this.oFormLayoutService.activeFormLayoutManager;
        this.oFormLayoutService.activeFormLayoutManager = undefined;
        if (formLayoutManager) {
            var oPermission = childRoute.data ? childRoute.data['oPermission'] : undefined;
            var permissionId = (oPermission || {})['permissionId'];
            if (Util.isDefined(permissionId)) {
                var restricted = !this.shareCanActivateChildService.canActivateChildUsingPermissions(childRoute, state);
                if (restricted) {
                    return false;
                }
            }
            formLayoutManager.addDetailComponent(childRoute, state.url.substring(0, state.url.indexOf('?')));
            return false;
        }
        return true;
    };
    CanActivateFormLayoutChildGuard.decorators = [
        { type: Injectable },
    ];
    CanActivateFormLayoutChildGuard.ctorParameters = function () { return [
        { type: Injector }
    ]; };
    return CanActivateFormLayoutChildGuard;
}());
export { CanActivateFormLayoutChildGuard };
//# sourceMappingURL=o-form-layout-can-activate-child.guard.js.map
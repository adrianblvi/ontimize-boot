{"version":3,"file":"o-context-menu-content.component.js","sourceRoot":"","sources":["../../../../../tmp/ontimize/components/contextmenu/context-menu/o-context-menu-content.component.ts"],"names":[],"mappings":"AACA,OAAO,EAAiB,SAAS,EAAE,eAAe,EAAE,YAAY,EAAE,YAAY,EAAE,QAAQ,EAAU,SAAS,EAAE,SAAS,EAAE,MAAM,eAAe,CAAC;AAC9I,OAAO,EAAE,cAAc,EAAE,MAAM,mBAAmB,CAAC;AAEnD,OAAO,EAAE,mBAAmB,EAAE,MAAM,yBAAyB,CAAC;AAE9D,OAAO,EAAE,mBAAmB,EAAE,MAAM,2BAA2B,CAAC;AAChE,OAAO,EAAE,4BAA4B,EAAE,MAAM,2DAA2D,CAAC;AAEzG,MAAM,CAAC,IAAM,mCAAmC,GAAG;IACjD,WAAW;IACX,SAAS;IACT,MAAM;IACN,WAAW;CACZ,CAAC;AAEF,MAAM,CAAC,IAAM,oCAAoC,GAAG;IAClD,SAAS;IACT,OAAO;CACR,CAAC;AAEF;IA4BE,sCACY,QAAkB,EAClB,WAAgC;QADhC,aAAQ,GAAR,QAAQ,CAAU;QAClB,gBAAW,GAAX,WAAW,CAAqB;QAfrC,cAAS,GAAU,EAAE,CAAC;QAItB,YAAO,GAAmF,IAAI,YAAY,EAAE,CAAC;IAYhH,CAAC;IAGE,4CAAK,GADZ;QAEE,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAEM,+CAAQ,GAAf;QACE,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAEM,sDAAe,GAAtB;QACE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;IAC1B,CAAC;IAEM,iDAAU,GAAjB;QACE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAC/B,CAAC;IAEM,8CAAO,GAAd,UAAe,KAAK;QAApB,iBASC;QARC,KAAK,CAAC,OAAO,CAAC,UAAA,QAAQ;YACpB,IAAI,KAAI,CAAC,IAAI,EAAE;gBACb,QAAQ,CAAC,IAAI,GAAG,KAAI,CAAC,IAAI,CAAC;gBAC1B,IAAI,QAAQ,CAAC,QAAQ,IAAI,QAAQ,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;oBACrD,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;iBACjC;aACF;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,mDAAY,GAAnB,UAAoB,CAAQ;QAC1B,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAEM,4CAAK,GAAZ;QACE,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC;QACzB,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,IAAI,EAAE,CAAC;IAC3C,CAAC;;gBApEF,SAAS,SAAC;oBACT,QAAQ,EAAE,MAAM,CAAC,EAAE;oBACnB,QAAQ,EAAE,wBAAwB;oBAClC,QAAQ,EAAE,+NAGT;oBACD,MAAM,EAAE,mCAAmC;oBAC3C,OAAO,EAAE,oCAAoC;oBAC7C,IAAI,EAAE;wBACJ,gCAAgC,EAAE,MAAM;qBACzC;iBACF;;;gBAhC+E,QAAQ;gBAK/E,mBAAmB;;;oCAoCzB,eAAe,SAAC,mBAAmB;0BAEnC,SAAS,SAAC,cAAc;uBAExB,SAAS,SAAC,4BAA4B;wBAQtC,YAAY,SAAC,gBAAgB;;IAqChC,mCAAC;CAAA,AAtED,IAsEC;SAzDY,4BAA4B","sourcesContent":["import { OverlayRef } from '@angular/cdk/overlay';\nimport { AfterViewInit, Component, ContentChildren, EventEmitter, HostListener, Injector, OnInit, QueryList, ViewChild } from '@angular/core';\nimport { MatMenuTrigger } from '@angular/material';\n\nimport { OComponentMenuItems } from '../o-content-menu.class';\nimport { OContextMenuItemComponent } from '../o-context-menu-components';\nimport { OContextMenuService } from '../o-context-menu.service';\nimport { OWrapperContentMenuComponent } from './o-wrapper-content-menu/o-wrapper-content-menu.component';\n\nexport const DEFAULT_CONTEXT_MENU_CONTENT_INPUTS = [\n  'menuItems',\n  'overlay',\n  'data',\n  'menuClass'\n];\n\nexport const DEFAULT_CONTEXT_MENU_CONTENT_OUTPUTS = [\n  'execute',\n  'close'\n];\n\n@Component({\n  moduleId: module.id,\n  selector: 'o-context-menu-content',\n  template: `\n    <button mat-button [matMenuTriggerFor]=\"menu.childMenu\" (menuClosed)=\"onMenuClosed($event)\"></button>\n    <o-wrapper-content-menu #menu [items]=\"menuItems\" [class]=\"menuClass\"> </o-wrapper-content-menu>\n  `,\n  inputs: DEFAULT_CONTEXT_MENU_CONTENT_INPUTS,\n  outputs: DEFAULT_CONTEXT_MENU_CONTENT_OUTPUTS,\n  host: {\n    '[class.o-context-menu-content]': 'true'\n  }\n})\nexport class OContextMenuContentComponent implements AfterViewInit, OnInit {\n\n  public menuItems: any[] = [];\n  public overlay: OverlayRef;\n  public data: any;\n  public menuClass: string;\n  public execute: EventEmitter<{ event: Event, data: any, menuItem: OContextMenuItemComponent }> = new EventEmitter();\n\n  @ContentChildren(OComponentMenuItems)\n  public oContextMenuItems: QueryList<OComponentMenuItems>;\n  @ViewChild(MatMenuTrigger)\n  public trigger: MatMenuTrigger;\n  @ViewChild(OWrapperContentMenuComponent)\n  public menu: OWrapperContentMenuComponent;\n\n  constructor(\n    protected injector: Injector,\n    protected menuService: OContextMenuService\n  ) { }\n\n  @HostListener('document:click')\n  public click(): void {\n    this.close();\n  }\n\n  public ngOnInit(): void {\n    this.initialize();\n  }\n\n  public ngAfterViewInit(): void {\n    this.trigger.openMenu();\n  }\n\n  public initialize(): void {\n    this.setData(this.menuItems);\n  }\n\n  public setData(items): void {\n    items.forEach(menuItem => {\n      if (this.data) {\n        menuItem.data = this.data;\n        if (menuItem.children && menuItem.children.length > 0) {\n          this.setData(menuItem.children);\n        }\n      }\n    });\n  }\n\n  public onMenuClosed(e: Event): void {\n    this.close();\n  }\n\n  public close(): void {\n    this.trigger.closeMenu();\n    this.menuService.closeContextMenu.next();\n  }\n\n}\n"]}
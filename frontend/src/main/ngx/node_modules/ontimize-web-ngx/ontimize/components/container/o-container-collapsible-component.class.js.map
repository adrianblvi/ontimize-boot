{"version":3,"file":"o-container-collapsible-component.class.js","sourceRoot":"","sources":["../../../../tmp/ontimize/components/container/o-container-collapsible-component.class.ts"],"names":[],"mappings":"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","sourcesContent":["import { ElementRef, forwardRef, Inject, Injector, Optional, ViewChild } from '@angular/core';\nimport { MatExpansionPanel, MAT_FORM_FIELD_DEFAULT_OPTIONS } from '@angular/material';\nimport { InputConverter } from '../../decorators/input-converter';\nimport { OFormComponent } from '../form/form-components';\nimport { OContainerComponent } from './o-container-component.class';\n\n\nexport const DEFAULT_INPUTS_O_CONTAINER_COLLAPSIBLE = [\n  ...OContainerComponent.DEFAULT_INPUTS_O_CONTAINER,\n  'expanded',\n  'description',\n  'collapsedHeight:collapsed-height',\n  'expandedHeight:expanded-height'\n];\n\nexport class OContainerCollapsibleComponent extends OContainerComponent {\n\n  public static DEFAULT_INPUTS_O_CONTAINER_COLLAPSIBLE = DEFAULT_INPUTS_O_CONTAINER_COLLAPSIBLE;\n\n  @InputConverter()\n  public expanded: boolean = true;\n  public collapsedHeight = '37px';\n  public expandedHeight = '37px';\n  public description: string;\n\n  protected contentObserver = new MutationObserver(() => this.updateHeightExpansionPanelContent());\n  @ViewChild('expPanel') expPanel: MatExpansionPanel;\n  protected _containerCollapsibleRef: ElementRef<HTMLElement>;\n\n\n  constructor(\n    @Optional() @Inject(forwardRef(() => OFormComponent)) protected form: OFormComponent,\n    protected elRef: ElementRef,\n    protected injector: Injector,\n    @Optional() @Inject(MAT_FORM_FIELD_DEFAULT_OPTIONS) protected matFormDefaultOption\n  ) {\n    super(form, elRef, injector, matFormDefaultOption);\n  }\n\n  ngAfterViewInit(): void {\n    if (this.expPanel) {\n      this._containerCollapsibleRef = this.expPanel._body;\n      this.registerContentObserver();\n    } else {\n      this.unregisterContentObserver();\n    }\n  }\n  protected updateOutlineGap(): void {\n    if (this.isAppearanceOutline()) {\n      const exPanelHeader = this._titleEl ? (this._titleEl as any)._element.nativeElement : null;\n\n      if (!this._containerRef) {\n        return;\n      }\n      const containerOutline = this._containerRef.nativeElement;\n      const containerOutlineRect = containerOutline.getBoundingClientRect();\n      if (containerOutlineRect.width === 0 && containerOutlineRect.height === 0) {\n        return;\n      }\n\n      const titleEl = exPanelHeader.querySelector('.o-container-title.mat-expansion-panel-header-title');\n      const descrEl = exPanelHeader.querySelector('.mat-expansion-panel-header-description');\n\n      const containerStart = containerOutlineRect.left;\n      const descrStart = descrEl.getBoundingClientRect().left;\n\n      let titleWidth = 0;\n      if (this.hasHeader()) {\n        titleWidth += this.icon ? titleEl.querySelector('mat-icon').offsetWidth : 0; // icon\n        titleWidth += this.title ? titleEl.querySelector('span').offsetWidth : 0; // title\n        titleWidth = titleWidth === 0 ? 0 : titleWidth + 4;\n      }\n\n      const descrWidth = this.description ? descrEl.querySelector('span').offsetWidth + 8 : 0;\n      const empty1Width = descrStart - containerStart - 14 - titleWidth - 4;\n\n      const gapTitleEls = containerOutline.querySelectorAll('.o-container-outline-gap-title');\n      const gapEmpty1Els = containerOutline.querySelectorAll('.o-container-outline-gap-empty1');\n      const gapDescrEls = containerOutline.querySelectorAll('.o-container-outline-gap-description');\n\n      gapTitleEls[0].style.width = `${titleWidth}px`;\n      gapEmpty1Els[0].style.width = `${empty1Width}px`;\n      gapDescrEls[0].style.width = `${descrWidth}px`;\n    }\n  }\n\n  protected registerObserver(): void {\n    if (this._titleEl) {\n      this.titleObserver.observe((this._titleEl as any)._element.nativeElement, {\n        childList: true,\n        characterData: true,\n        subtree: true\n      });\n    }\n  }\n\n  protected updateHeightExpansionPanelContent(): void {\n    const exPanelHeader = this._titleEl ? (this._titleEl as any)._element.nativeElement : null;\n    const exPanelContent: HTMLElement = this._containerCollapsibleRef ? this._containerCollapsibleRef.nativeElement.querySelector('.o-container-scroll') : null;\n    const parentHeight = exPanelHeader.parentNode ? exPanelHeader.parentNode.offsetHeight : null;\n\n    const height = (OContainerComponent.APPEARANCE_OUTLINE === this.appearance) ? parentHeight : (parentHeight - exPanelHeader.offsetHeight);\n    if (height > 0) {\n      exPanelContent.style.height = height + 'px';\n    }\n  }\n\n  protected unregisterContentObserver(): any {\n    if (this.contentObserver) {\n      this.contentObserver.disconnect();\n    }\n  }\n\n  protected registerContentObserver(): any {\n    if (this._containerCollapsibleRef) {\n      this.contentObserver.observe(this._containerCollapsibleRef.nativeElement, {\n        childList: true,\n        attributes: true,\n        attributeFilter: ['style']\n      });\n    }\n  }\n\n}\n"]}
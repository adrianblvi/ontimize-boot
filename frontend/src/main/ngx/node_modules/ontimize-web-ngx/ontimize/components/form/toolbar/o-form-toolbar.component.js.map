{"version":3,"file":"o-form-toolbar.component.js","sourceRoot":"","sources":["../../../../../tmp/ontimize/components/form/toolbar/o-form-toolbar.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { CommonModule } from '@angular/common';\nimport { Component, ElementRef, forwardRef, Inject, Injector, NgModule, OnDestroy, OnInit, ViewChild, ViewContainerRef, ViewEncapsulation } from '@angular/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\nimport { InputConverter } from '../../../decorators';\nimport { DialogService, NavigationService, OPermissions, SnackBarService } from '../../../services';\nimport { OSharedModule } from '../../../shared';\nimport { PermissionsUtils } from '../../../util/permissions';\nimport { Util } from '../../../util/util';\nimport { OFormNavigationComponent } from '../navigation/o-form-navigation.component';\nimport { OFormComponent } from '../o-form.component';\n\n\nexport const DEFAULT_INPUTS_O_FORM_TOOLBAR = [\n  'labelHeader: label-header',\n  'labelHeaderAlign: label-header-align',\n  'headeractions: header-actions',\n  'showHeaderActionsText: show-header-actions-text',\n  // show-header-navigation [string][yes|no|true|false]: Include navigations buttons in form-toolbar. Default: true;\n  'showHeaderNavigation:show-header-navigation'\n];\n\n@Component({\n  moduleId: module.id,\n  selector: 'o-form-toolbar',\n  template: `\n    <mat-toolbar class=\"o-form-toolbar-header\" [class.breadcrumb]=\"includeBreadcrumb\" fxLayout=\"column\"\n      fxLayoutAlign=\"center center\">\n\n      <ng-template *ngIf=\"includeBreadcrumb\" #breadcrumb></ng-template>\n\n      <div class=\"mat-toolbar-tools\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n        <button type=\"button\" mat-icon-button (click)=\"onCloseDetail()\" *ngIf=\"isDetail\" class=\"o-form-toolbar-button o-form-toolbar-back\">\n          <mat-icon svgIcon=\"ontimize:arrow_back\"></mat-icon>\n        </button>\n\n        <o-form-navigation #formNavigation *ngIf=\"showNavigation\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n        </o-form-navigation>\n\n        <span *ngIf=\"getLabelHeaderAlign() === 'center' || getLabelHeaderAlign() === 'end'\" class=\"fill-remaining\"></span>\n        <div *ngIf=\"labelHeader!=''\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n          <span>{{ labelHeader | oTranslate }}</span>\n        </div>\n        <span *ngIf=\"getLabelHeaderAlign() === 'start' || getLabelHeaderAlign() === 'center'\" class=\"fill-remaining\"></span>\n\n        <ng-content select=\"[o-custom-form-toolbar-buttons-wrapper]\"></ng-content>\n\n        <ng-template [ngIf]=\"showHeaderActionsText\" [ngIfElse]=\"undoBtnWithoutText\">\n          <button type=\"button\" class=\"o-form-toolbar-button o-form-toolbar-button-undo\" mat-stroked-button (click)=\"onUndoLastChange()\"\n            [disabled]=\"isChangesStackEmpty\" *ngIf=\"showUndoButton\">\n            <mat-icon svgIcon=\"ontimize:undo\"></mat-icon>\n            <span>{{ 'UNDO' | oTranslate }}</span>\n          </button>\n        </ng-template>\n        <ng-template #undoBtnWithoutText>\n          <button type=\"button\" class=\"o-form-toolbar-button o-form-toolbar-button-undo\" mat-icon-button (click)=\"onUndoLastChange()\"\n            [disabled]=\"isChangesStackEmpty\" *ngIf=\"showUndoButton\">\n            <mat-icon svgIcon=\"ontimize:undo\"></mat-icon>\n          </button>\n        </ng-template>\n\n        <ng-container *ngIf=\"initialMode\">\n          <ng-template [ngIf]=\"showHeaderActionsText\" [ngIfElse]=\"buttonsWithouText\">\n            <button type=\"button\" class=\"o-form-toolbar-button o-form-toolbar-button-refresh\" mat-stroked-button (click)=\"onReload($event)\"\n              *ngIf=\"isRefreshBtnEnabled\" attr=\"refresh\">\n              <mat-icon svgIcon=\"ontimize:autorenew\"></mat-icon>\n              <span>{{ 'REFRESH' | oTranslate }}</span>\n            </button>\n            <button type=\"button\" class=\"o-form-toolbar-button o-form-toolbar-button-insert\" mat-stroked-button (click)=\"onInsert($event)\"\n              *ngIf=\"isInsertBtnEnabled\" attr=\"insert\">\n              <mat-icon svgIcon=\"ontimize:add\"></mat-icon>\n              <span>{{ 'ADD' | oTranslate }}</span>\n            </button>\n            <button type=\"button\" class=\"o-form-toolbar-button o-form-toolbar-button-edit\" mat-stroked-button (click)=\"onEdit($event)\"\n              *ngIf=\"isEditBtnEnabled | async\" attr=\"edit\">\n              <mat-icon svgIcon=\"ontimize:edit\"></mat-icon>\n              <span>{{ 'EDIT' | oTranslate }}</span>\n            </button>\n            <button type=\"button\" class=\"o-form-toolbar-button o-form-toolbar-button-delete\" mat-stroked-button (click)=\"onDelete($event)\"\n              *ngIf=\"isDeleteBtnEnabled\" attr=\"delete\">\n              <mat-icon svgIcon=\"ontimize:delete\"></mat-icon>\n              <span>{{ 'DELETE' | oTranslate }}</span>\n            </button>\n            <button type=\"button\" class=\"o-form-toolbar-button o-form-toolbar-button-save\" mat-stroked-button (click)=\"onSave($event)\"\n              [disabled]=\"!(existsChangesToSave | async)\" *ngIf=\"isSaveBtnEnabled | async\" attr=\"update\">\n              <mat-icon svgIcon=\"ontimize:save\"></mat-icon>\n              <span>{{ 'SAVE' | oTranslate }}</span>\n            </button>\n          </ng-template>\n          <ng-template #buttonsWithouText>\n            <button type=\"button\" class=\"o-form-toolbar-button o-form-toolbar-button-refresh\" mat-icon-button (click)=\"onReload($event)\"\n              *ngIf=\"isRefreshBtnEnabled\" attr=\"refresh\">\n              <mat-icon svgIcon=\"ontimize:autorenew\"></mat-icon>\n            </button>\n            <button type=\"button\" class=\"o-form-toolbar-button o-form-toolbar-button-insert\" mat-icon-button (click)=\"onInsert($event)\"\n              *ngIf=\"isInsertBtnEnabled\" attr=\"insert\">\n              <mat-icon svgIcon=\"ontimize:add\"></mat-icon>\n            </button>\n            <button type=\"button\" class=\"o-form-toolbar-button-o-form-toolbar-button-edit\" mat-icon-button (click)=\"onEdit($event)\"\n              *ngIf=\"isEditBtnEnabled | async\" attr=\"edit\">\n              <mat-icon svgIcon=\"ontimize:edit\"></mat-icon>\n            </button>\n            <button type=\"button\" class=\"o-form-toolbar-button o-form-toolbar-button-delete\" mat-icon-button (click)=\"onDelete($event)\"\n              *ngIf=\"isDeleteBtnEnabled\" attr=\"delete\">\n              <mat-icon svgIcon=\"ontimize:delete\"></mat-icon>\n            </button>\n            <button type=\"button\" class=\"o-form-toolbar-button o-form-toolbar-button-save\" mat-icon-button (click)=\"onSave($event)\"\n              [disabled]=\"!existsChangesToSave\" *ngIf=\"isSaveBtnEnabled | async\" attr=\"update\">\n              <mat-icon svgIcon=\"ontimize:save\"></mat-icon>\n            </button>\n          </ng-template>\n        </ng-container>\n\n        <ng-container *ngIf=\"editMode || insertMode\">\n          <button type=\"button\" class=\"o-form-toolbar-button o-form-toolbar-button-cancel\" mat-stroked-button (click)=\"cancelOperation($event)\">\n            <mat-icon svgIcon=\"ontimize:clear\"></mat-icon>\n            <span *ngIf=\"showHeaderActionsText\">{{ 'CANCEL' | oTranslate }}</span>\n          </button>\n          <button type=\"button\" class=\"o-form-toolbar-button o-form-toolbar-button-insert\" mat-stroked-button color=\"primary\"\n            (click)=\"acceptOperation($event)\">\n            <mat-icon svgIcon=\"ontimize:done\"></mat-icon>\n            <span *ngIf=\"showHeaderActionsText\">{{ 'INSERT' | oTranslate }}</span>\n          </button>\n        </ng-container>\n      </div>\n\n    </mat-toolbar>\n  `,\n  styles: [`\n    .o-form-toolbar{flex:none;display:block}.o-form-toolbar .o-form-toolbar-header{min-height:50px;max-height:50px;padding:0 16px 0 4px}.o-form-toolbar .o-form-toolbar-header.breadcrumb{padding:16px;min-height:84px;max-height:84px}.o-form-toolbar .o-form-toolbar-header .mat-toolbar-tools{width:100%}.o-form-toolbar .o-form-toolbar-header .mat-toolbar-tools button.o-form-toolbar-button[disabled]{cursor:default}.o-form-toolbar .o-form-toolbar-header .mat-toolbar-tools button.o-form-toolbar-button:not(.mat-icon-button) .mat-button-wrapper{display:flex;align-items:center}.o-form-toolbar .o-form-toolbar-header .mat-toolbar-tools button.o-form-toolbar-button:not(.mat-icon-button) .mat-button-wrapper span{flex:1}.o-form-toolbar .o-form-toolbar-header .mat-toolbar-tools button:not(.mat-icon-button){padding:0 6px}.o-form-toolbar .o-form-toolbar-header .mat-toolbar-tools button.mat-icon-button{padding:0;margin:0}.o-form-toolbar .o-form-toolbar-header .mat-toolbar-tools button.mat-stroked-button{min-width:100px;margin:0 6px}.o-form-toolbar .o-form-toolbar-header .o-breadcrumb{width:100%;height:32px;min-height:initial}.o-form-toolbar .o-form-toolbar-header .o-breadcrumb .mat-toolbar{padding:0;min-height:initial;max-height:initial;height:100%}\n  `],\n  inputs: DEFAULT_INPUTS_O_FORM_TOOLBAR,\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    '[class.o-form-toolbar]': 'true'\n  }\n})\nexport class OFormToolbarComponent implements OnInit, OnDestroy {\n\n  public static DEFAULT_INPUTS_O_FORM_TOOLBAR = DEFAULT_INPUTS_O_FORM_TOOLBAR;\n\n  /* Bindings */\n  public labelHeader: string = '';\n  public headeractions: string = '';\n  public labelHeaderAlign: string = 'center';\n\n  @InputConverter()\n  public showHeaderActionsText: boolean = true;\n  @InputConverter()\n  public showHeaderNavigation: boolean = true;\n\n  public formActions: string[];\n  public isDetail: boolean = true;\n\n  public editMode: boolean = false;\n  public insertMode: boolean = false;\n  public initialMode: boolean = true;\n  public refreshBtnEnabled: boolean = false;\n  public insertBtnEnabled: boolean = false;\n  public deleteBtnEnabled: boolean = false;\n\n  @ViewChild('breadcrumb', { read: ViewContainerRef })\n  public breadContainer: ViewContainerRef;\n\n  public isSaveBtnEnabled: Observable<boolean>;\n  public isEditBtnEnabled: Observable<boolean>;\n  public existsChangesToSave: Observable<boolean>;\n\n  get changesToSave(): boolean {\n    return this._changesToSave;\n\n  }\n\n  set changesToSave(val: boolean) {\n    this._changesToSave = val;\n    const attr = this._form.isEditableDetail() ? PermissionsUtils.ACTION_UPDATE : PermissionsUtils.ACTION_INSERT;\n    const permissions: OPermissions = (this.actionsPermissions || []).find(p => p.attr === attr);\n    if (Util.isDefined(permissions) && permissions.enabled === false) {\n      return;\n    }\n\n    this._existsChangesToSaveSubject.next(val);\n\n  }\n\n  protected _changesToSave: boolean = false;\n\n\n  get editBtnEnabled(): boolean {\n    return this._editBtnEnabled;\n  }\n  set editBtnEnabled(value: boolean) {\n    this._editBtnEnabled = value;\n    this._isEditBtnEnabledSubject.next(this._editBtnEnabled);\n  }\n  protected _editBtnEnabled: boolean = false;\n\n  get saveBtnEnabled(): boolean {\n    return this._saveBtnEnabled;\n  }\n  set saveBtnEnabled(value: boolean) {\n    this._saveBtnEnabled = value;\n    this._isSaveBtnEnabledSubject.next(this._saveBtnEnabled);\n  }\n  protected _saveBtnEnabled: boolean = false;\n\n\n  protected _dialogService: DialogService;\n  protected _navigationService: NavigationService;\n  protected mutationObservers: MutationObserver[] = [];\n\n  protected formCacheSubscription: Subscription;\n  protected actionsPermissions: OPermissions[];\n  protected snackBarService: SnackBarService;\n\n  protected _includeBreadcrumb: boolean;\n\n  protected _isSaveBtnEnabledSubject = new BehaviorSubject<boolean>(false);\n  protected _isEditBtnEnabledSubject = new BehaviorSubject<boolean>(false);\n  protected _existsChangesToSaveSubject = new BehaviorSubject<boolean>(false);\n\n  constructor(\n    @Inject(forwardRef(() => OFormComponent)) private _form: OFormComponent,\n    public element: ElementRef,\n    protected injector: Injector\n  ) {\n    this.isSaveBtnEnabled = this._isSaveBtnEnabledSubject.asObservable();\n    this.isEditBtnEnabled = this._isEditBtnEnabledSubject.asObservable();\n    this.existsChangesToSave = this._existsChangesToSaveSubject.asObservable();\n\n    this._form.registerToolbar(this);\n    this._dialogService = this.injector.get(DialogService);\n    this._navigationService = this.injector.get(NavigationService);\n    this.snackBarService = this.injector.get(SnackBarService);\n  }\n\n  public ngOnInit(): void {\n    this.formActions = Util.parseArray(this.headeractions);\n    if (this.formActions && this.formActions.length > 0) {\n      this.refreshBtnEnabled = this.formActions.indexOf('R') !== -1;\n      this.insertBtnEnabled = this.formActions.indexOf('I') !== -1;\n      this.editBtnEnabled = this.formActions.indexOf('U') !== -1;\n      this.deleteBtnEnabled = !this.insertMode && this.formActions.indexOf('D') !== -1;\n    }\n    if (this._navigationService) {\n      const self = this;\n      this._navigationService.onTitleChange(title => {\n        self.labelHeader = title;\n      });\n    }\n    this.includeBreadcrumb = this._form.includeBreadcrumb && this._form.formContainer.breadcrumb;\n    if (this.includeBreadcrumb) {\n      this._form.formContainer.breadcrumb = false;\n    }\n  }\n\n  public ngOnDestroy(): void {\n    if (this.formCacheSubscription) {\n      this.formCacheSubscription.unsubscribe();\n    }\n    if (this.mutationObservers) {\n      this.mutationObservers.forEach((m: MutationObserver) => {\n        m.disconnect();\n      });\n    }\n  }\n\n  public ngAfterViewInit(): void {\n    this.parsePermissions();\n    if (this.includeBreadcrumb) {\n      this._form.formContainer.createBreadcrumb(this.breadContainer);\n    }\n  }\n\n  public setInitialMode(): void {\n    this.manageEditableDetail();\n    this.initialMode = true;\n    this.insertMode = false;\n    this.editMode = false;\n  }\n\n  public setInsertMode(): void {\n    this.initialMode = false;\n    this.insertMode = true;\n    this.editMode = false;\n  }\n\n  public setEditMode(): void {\n    this.initialMode = false;\n    this.insertMode = false;\n    this.editMode = true;\n  }\n\n  public onCloseDetail(): void {\n    this._form.executeToolbarAction(OFormComponent.CLOSE_DETAIL_ACTION, {\n      changeToolbarMode: true\n    });\n  }\n\n  public onBack(): void {\n    this._form.executeToolbarAction(OFormComponent.BACK_ACTION);\n  }\n\n  public onReload(): void {\n    if (!this.checkEnabledPermission(PermissionsUtils.ACTION_REFRESH)) {\n      return;\n    }\n    const self = this;\n    this._form.showConfirmDiscardChanges().then(val => {\n      if (val) {\n        self._form.executeToolbarAction(OFormComponent.RELOAD_ACTION);\n      }\n    });\n  }\n\n  public onInsert(): void {\n    if (!this.checkEnabledPermission(PermissionsUtils.ACTION_INSERT)) {\n      return;\n    }\n\n    this._form.executeToolbarAction(OFormComponent.GO_INSERT_ACTION, {\n      changeToolbarMode: true\n    });\n  }\n\n  public onEdit(): void {\n    if (!this.checkEnabledPermission(PermissionsUtils.ACTION_UPDATE)) {\n      return;\n    }\n\n    this._form.executeToolbarAction(OFormComponent.GO_EDIT_ACTION, {\n      changeToolbarMode: true\n    });\n  }\n\n  public onDelete(evt: any): void {\n    if (!this.checkEnabledPermission(PermissionsUtils.ACTION_DELETE)) {\n      return;\n    }\n\n    this.showConfirmDelete(evt);\n  }\n\n  public onSave(evt: any): void {\n    if (!this.checkEnabledPermission(PermissionsUtils.ACTION_UPDATE)) {\n      return;\n    }\n\n    this.handleAcceptEditOperation();\n  }\n\n\n  public cancelOperation(): void {\n    if (this.isDetail) {\n      this.onCloseDetail();\n    } else if (!this.isDetail && this.insertMode) {\n      this.onCloseDetail();\n    } else {\n      this.onReload();\n      this._form.setInitialMode();\n    }\n  }\n\n  public acceptOperation(): void {\n    if (this.editMode) {\n      if (!this.checkEnabledPermission(PermissionsUtils.ACTION_UPDATE)) {\n        return;\n      }\n      this.handleAcceptEditOperation();\n    } else if (this.insertMode) {\n      if (!this.checkEnabledPermission(PermissionsUtils.ACTION_INSERT)) {\n        return;\n      }\n      this.handleAcceptInsertOperation();\n    }\n  }\n\n  public handleAcceptInsertOperation(): void {\n    this._form.executeToolbarAction(OFormComponent.INSERT_ACTION);\n  }\n\n  public handleAcceptEditOperation(): void {\n    this._form.executeToolbarAction(OFormComponent.EDIT_ACTION);\n  }\n\n  public showConfirmDelete(evt: any): void {\n    this._dialogService.confirm('CONFIRM', 'MESSAGES.CONFIRM_DELETE').then(res => {\n      if (res === true) {\n        this._form.executeToolbarAction(OFormComponent.DELETE_ACTION).subscribe(resp => {\n          this._form.onDelete.emit(resp);\n          this.onCloseDetail();\n        }, err => {\n          console.error('OFormToolbar.delete error', err);\n        });\n      }\n    }\n    );\n  }\n\n  get showNavigation(): boolean {\n    return this.showHeaderNavigation && !(this._form.getFormManager() && this._form.getFormManager().isTabMode());\n  }\n\n  public getLabelHeaderAlign(): string {\n    return this.labelHeaderAlign;\n  }\n\n  get showUndoButton(): boolean {\n    return this._form.undoButton && (!this.initialMode || this._form.isEditableDetail());\n  }\n\n  get isChangesStackEmpty(): boolean {\n    return this._form.isCacheStackEmpty;\n  }\n\n  public onUndoLastChange(): void {\n    this._form.executeToolbarAction(OFormComponent.UNDO_LAST_CHANGE_ACTION);\n  }\n\n  get isRefreshBtnEnabled(): boolean {\n    return this.refreshBtnEnabled;\n  }\n\n  get isInsertBtnEnabled(): boolean {\n    return this.insertBtnEnabled;\n  }\n\n  get isDeleteBtnEnabled(): boolean {\n    return this.deleteBtnEnabled;\n  }\n\n  public hasEnabledPermission(permission: OPermissions): boolean {\n    return permission ? permission.enabled : true;\n  }\n\n  get includeBreadcrumb(): boolean {\n    return this._includeBreadcrumb;\n  }\n\n  set includeBreadcrumb(arg: boolean) {\n    this._includeBreadcrumb = arg;\n  }\n\n  protected manageEditableDetail(): void {\n    const isEditableDetail = this._form.isEditableDetail();\n\n    const updatePermissions: OPermissions = (this.actionsPermissions || []).find(p => p.attr === PermissionsUtils.ACTION_UPDATE);\n    if (this.hasEnabledPermission(updatePermissions)) {\n      this.saveBtnEnabled = isEditableDetail;\n    }\n\n    this.refreshBtnEnabled = this.refreshBtnEnabled && isEditableDetail;\n    this.insertBtnEnabled = this.insertBtnEnabled && isEditableDetail;\n    this.editBtnEnabled = this.editBtnEnabled && !isEditableDetail;\n\n    const self = this;\n    this._form.getFormCache().onCacheStateChanges.asObservable().subscribe((value: any) => {\n      if (self._form.isEditableDetail()) {\n        self.changesToSave = self._form.isInitialStateChanged();\n      }\n    });\n  }\n\n  protected parsePermissions(): void {\n    if (this._form.oattr) {\n      this.actionsPermissions = this._form.getActionsPermissions();\n\n      if (!Util.isDefined(this.actionsPermissions)) {\n        return;\n      }\n      const self = this;\n      this.actionsPermissions.forEach((permission: OPermissions) => {\n        // others actions\n        self.permissionManagement(permission);\n\n        if (PermissionsUtils.STANDARD_ACTIONS.indexOf(permission.attr) > -1) {\n          // actions R;I;U;D\n          if (permission.attr === PermissionsUtils.ACTION_UPDATE) {\n            self.permissionManagement(permission, 'edit');\n          }\n        }\n      });\n    }\n  }\n\n  private permissionManagement(permission: OPermissions, attr?: string): void {\n    const attrAction = Util.isDefined(attr) ? attr : permission.attr;\n    const elementByAction = this.element.nativeElement.querySelector('[attr=\"' + attrAction + '\"]');\n\n    if (Util.isDefined(elementByAction)) {\n      if (!permission.visible) {\n        elementByAction.remove();\n      } else {\n        if (!permission.enabled) {\n          elementByAction.disabled = true;\n          const mutationObserver = PermissionsUtils.registerDisabledChangesInDom(elementByAction);\n          this.mutationObservers.push(mutationObserver);\n        }\n      }\n    }\n  }\n\n  private checkEnabledPermission(attr): boolean {\n    const permissions: OPermissions = (this.actionsPermissions || []).find(p => p.attr === attr);\n    const enabledPermision = PermissionsUtils.checkEnabledPermission(permissions);\n    if (!enabledPermision) {\n      this.snackBarService.open('MESSAGES.OPERATION_NOT_ALLOWED_PERMISSION');\n    }\n    return enabledPermision;\n  }\n\n}\n\n@NgModule({\n  declarations: [OFormNavigationComponent, OFormToolbarComponent],\n  imports: [CommonModule, OSharedModule],\n  exports: [OFormNavigationComponent, OFormToolbarComponent]\n})\nexport class OFormToolbarModule { }\n"]}
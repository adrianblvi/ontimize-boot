import { SelectionModel } from '@angular/cdk/collections';
import { AfterContentInit, AfterViewInit, ElementRef, EventEmitter, Injector, OnChanges, OnDestroy, OnInit, QueryList, SimpleChange } from '@angular/core';
import { Subscription } from 'rxjs';
import { OFormComponent } from '../form/o-form.component';
import { OServiceComponent } from '../o-service-component.class';
import { ISQLOrder, OQueryDataArgs } from '../service.utils';
import { OListItemComponent } from './list-item/o-list-item.component';
import { OListItemDirective } from './list-item/o-list-item.directive';
export interface IList {
    detailMode: string;
    registerListItemDirective(item: OListItemDirective): void;
    getKeys(): string[];
    setSelected(item: any): void;
    isItemSelected(item: any): boolean;
}
export declare const DEFAULT_INPUTS_O_LIST: string[];
export declare const DEFAULT_OUTPUTS_O_LIST: string[];
export interface OListInitializationOptions {
    entity?: string;
    service?: string;
    columns?: string;
    quickFilterColumns?: string;
    keys?: string;
    parentKeys?: string;
}
export declare class OListComponent extends OServiceComponent implements AfterContentInit, AfterViewInit, IList, OnDestroy, OnInit, OnChanges {
    static DEFAULT_INPUTS_O_LIST: string[];
    static DEFAULT_OUTPUTS_O_LIST: string[];
    listItemComponents: QueryList<OListItemComponent>;
    listItemDirectives: QueryList<OListItemDirective>;
    refreshButton: boolean;
    selectable: boolean;
    odense: boolean;
    deleteButton: boolean;
    insertButtonFloatable: boolean;
    quickFilterColumns: string;
    route: string;
    sortColumns: string;
    sortColArray: ISQLOrder[];
    onClick: EventEmitter<any>;
    onDoubleClick: EventEmitter<any>;
    onInsertButtonClick: EventEmitter<any>;
    onItemDeleted: EventEmitter<any>;
    onDataLoaded: EventEmitter<any>;
    onPaginatedDataLoaded: EventEmitter<any>;
    selection: SelectionModel<Element>;
    enabledDeleteButton: boolean;
    insertButtonPosition: 'top' | 'bottom';
    protected dataResponseArray: any[];
    protected storePaginationState: boolean;
    protected subscription: Subscription;
    constructor(injector: Injector, elRef: ElementRef, form: OFormComponent);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngAfterContentInit(): void;
    ngOnDestroy(): void;
    ngOnChanges(changes: {
        [propName: string]: SimpleChange;
    }): void;
    getComponentKey(): string;
    initialize(): void;
    reinitialize(options: OListInitializationOptions): void;
    registerListItemDirective(item: OListItemDirective): void;
    getDense(): boolean;
    onListItemClicked(onNext: (item: OListItemDirective) => void): Object;
    onItemDetailClick(item: OListItemDirective | OListItemComponent): void;
    onItemDetailDoubleClick(item: OListItemDirective | OListItemComponent): void;
    getDataToStore(): Object;
    reloadData(): void;
    reloadPaginatedDataFromStart(): void;
    filterData(value: string, loadMore?: boolean): void;
    isItemSelected(item: any): boolean;
    updateSelectedState(item: Object, isSelected: boolean): void;
    onScroll(e: Event): void;
    remove(clearSelectedItems?: boolean): void;
    add(e?: Event): void;
    parseSortColumns(): void;
    getQueryArguments(filter: Object, ovrrArgs?: OQueryDataArgs): any[];
    protected setListItemsData(): void;
    protected setListItemDirectivesData(): void;
    protected saveDataNavigationInLocalStorage(): void;
    protected setData(data: any, sqlTypes?: any, replace?: boolean): void;
}
export declare class OListModule {
}

{"version":3,"file":"o-table-column.component.js","sourceRoot":"","sources":["../../../../../tmp/ontimize/components/table/column/o-table-column.component.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAiB,uBAAuB,EAAE,SAAS,EAAoB,wBAAwB,EAAE,YAAY,EAAE,UAAU,EAAE,MAAM,EAAE,QAAQ,EAAqB,SAAS,EAAE,gBAAgB,EAAE,MAAM,eAAe,CAAC;AAC1N,OAAO,EAAE,YAAY,EAAE,MAAM,MAAM,CAAC;AAEpC,OAAO,EAAE,cAAc,EAAE,MAAM,qBAAqB,CAAC;AACrD,OAAO,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AAC5C,OAAO,EAAE,QAAQ,EAAE,MAAM,wBAAwB,CAAC;AAClD,OAAO,EAAE,IAAI,EAAE,MAAM,oBAAoB,CAAC;AAC1C,OAAO,EAAE,eAAe,EAAE,MAAM,sBAAsB,CAAC;AACvD,OAAO,EAAE,gCAAgC,EAAE,6BAA6B,EAAE,gCAAgC,EAAE,6BAA6B,EAAE,6BAA6B,EAAE,6BAA6B,EAAE,MAAM,2BAA2B,CAAC;AAC3O,OAAO,EAAE,iCAAiC,EAAE,kCAAkC,EAAE,mCAAmC,EAAE,+BAA+B,EAAE,gCAAgC,EAAE,kCAAkC,EAAE,qCAAqC,EAAE,+BAA+B,EAAE,kCAAkC,EAAE,+BAA+B,EAAE,MAAM,+BAA+B,CAAC;AAC/Y,OAAO,EAAE,oCAAoC,EAAE,MAAM,qEAAqE,CAAC;AAQ3H,MAAM,CAAC,IAAM,6BAA6B;IAGxC,MAAM;IAGN,OAAO;IAGP,yBAAyB;IAGzB,6BAA6B;IAG7B,WAAW;IAGX,YAAY;IAGZ,MAAM;IAGN,UAAU;IAEV,OAAO;IAGP,qBAAqB;IAGrB,qBAAqB;IAGrB,wBAAwB;IAGxB,mBAAmB;IAEnB,SAAS;IAET,6BAA6B;IAE7B,mCAAmC;IAEnC,WAAW;IAEX,WAAW;SAER,kCAAkC,CAAC,4CAA4C,EAC/E,mCAAmC,CAAC,6CAA6C,EACjF,+BAA+B,CAAC,yCAAyC,EACzE,gCAAgC,CAAC,0CAA0C,EAC3E,iCAAiC,CAAC,2CAA2C,EAC7E,kCAAkC,CAAC,4CAA4C,EAC/E,oCAAoC,CAAC,6CAA6C,EAElF,gCAAgC,CAAC,0CAA0C,EAC3E,6BAA6B,CAAC,uCAAuC,EACrE,6BAA6B,CAAC,uCAAuC,EACrE,6BAA6B,CAAC,uCAAuC,EACrE,6BAA6B,CAAC,uCAAuC,CAEzE,CAAC;AAEF,MAAM,CAAC,IAAM,8BAA8B,GACtC,iCAAiC,CAAC,4CAA4C,QAC9E,6BAA6B,CAAC,wCAAwC,CAC1E,CAAC;AAEF;IAmLE,+BACoD,KAAsB,EAC9D,QAAkC,EAClC,QAAkB;QAFsB,UAAK,GAAL,KAAK,CAAiB;QAC9D,aAAQ,GAAR,QAAQ,CAA0B;QAClC,aAAQ,GAAR,QAAQ,CAAU;QAhIpB,uBAAkB,GAAW,OAAO,CAAC;QAGrC,gBAAW,GAAY,IAAI,CAAC;QAE/B,aAAQ,GAAY,KAAK,CAAC;QAK1B,YAAO,GAAY,KAAK,CAAC;QAWtB,eAAU,GAAY,KAAK,CAAC;QAI5B,aAAQ,GAAQ,IAAI,CAAC;QACrB,sBAAiB,GAAW,GAAG,CAAC;QAEhC,qBAAgB,GAAW,GAAG,CAAC;QAW/B,eAAU,GAAW,QAAQ,CAAC;QAC9B,gBAAW,GAAW,SAAS,CAAC;QAmBhC,gBAAW,GAAW,KAAK,CAAC,YAAY,CAAC;QAMnD,gBAAW,GAAG,GAAG,CAAC;QAClB,gBAAW,GAAG,EAAE,CAAC;QAIP,cAAS,GAAY,KAAK,CAAC;QAErC,oBAAe,GAAY,KAAK,CAAC;QAGjC,uBAAkB,GAAY,IAAI,CAAC;QAEnC,oBAAe,GAAY,KAAK,CAAC;QAIvB,eAAU,GAAqB,OAAO,CAAC;QAIvC,aAAQ,GAAY,KAAK,CAAC;QAG1B,kBAAa,GAAmB,WAAW,CAAC;QAUtD,qBAAgB,GAAW,CAAC,CAAC;QAE7B,qBAAgB,GAAW,CAAC,CAAC;QAI7B,wBAAmB,GAAY,KAAK,CAAC;QAKrC,YAAO,GAAyB,IAAI,YAAY,EAAU,CAAC;QAG3D,mBAAc,GAAyB,IAAI,YAAY,EAAU,CAAC;QAClE,qBAAgB,GAAyB,IAAI,YAAY,EAAU,CAAC;QACpE,qBAAgB,GAAyB,IAAI,YAAY,EAAU,CAAC;QACpE,uBAAkB,GAAyB,IAAI,YAAY,EAAU,CAAC;QAGtE,cAAS,GAAY,KAAK,CAAC;QAKnB,kBAAa,GAAG,IAAI,YAAY,EAAE,CAAC;QAOzC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;IArHD,sBAAI,4CAAS;aAIb;YACE,OAAO,IAAI,CAAC,UAAU,CAAC;QACzB,CAAC;aAND,UAAc,GAAY;YACxB,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;YACrC,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;QACxB,CAAC;;;OAAA;IAoHD,wCAAQ,GAAR;QAAA,iBAKC;QAJC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;QACvD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;QACzC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QAChC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,SAAS,CAAC,cAAM,OAAA,KAAI,CAAC,KAAK,CAAC,cAAc,CAAC,KAAI,CAAC,EAA/B,CAA+B,CAAC,CAAC,CAAC;IACrG,CAAC;IAED,+CAAe,GAAf;QACE,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAED,2CAAW,GAAX;QACE,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;IACnC,CAAC;IAED,+CAAe,GAAf;QACE,IAAI,KAAK,GAAG,CAAC,IAAI,CAAC,UAAU,IAAI,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC;QAClD,OAAO,KAAK,CAAC,6BAA6B,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC;IACvF,CAAC;IAED,sBAAI,gDAAa;aAAjB;YACE,IAAI,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC;YAC/B,IAAM,KAAK,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAClD,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;gBACzB,aAAa,GAAG,KAAK,GAAG,EAAE,CAAC;aAE5B;YACD,OAAO,aAAa,CAAC;QACvB,CAAC;;;OAAA;IAES,8CAAc,GAAxB;QACE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;YAC/D,IAAM,YAAY,GAAG,qBAAqB,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACvE,IAAI,YAAY,KAAK,SAAS,EAAE;gBAC9B,IAAM,OAAO,GAA0B,IAAI,CAAC,QAAQ,CAAC,uBAAuB,CAAC,YAAY,CAAC,CAAC;gBAC3F,IAAI,OAAO,EAAE;oBACX,IAAM,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;oBACpD,IAAM,WAAW,GAAG,GAAG,CAAC,QAAQ,CAAC;oBACjC,QAAQ,IAAI,CAAC,IAAI,EAAE;wBACjB,KAAK,UAAU;4BACb,WAAW,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;4BACjD,WAAW,CAAC,sBAAsB,GAAG,IAAI,CAAC,sBAAsB,CAAC;4BACjE,WAAW,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;4BACrD,WAAW,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;4BACrD,WAAW,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;4BACrD,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;4BACrC,WAAW,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC;4BACvD,MAAM;wBACR,KAAK,MAAM;4BACT,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;4BACjC,MAAM;wBACR,KAAK,MAAM;4BACT,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;4BACjC,MAAM;wBACR,KAAK,SAAS;4BACZ,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;4BACrC,WAAW,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC;4BACvD,MAAM;wBACR,KAAK,SAAS;4BACZ,WAAW,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;4BACvC,WAAW,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;4BACzC,WAAW,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;4BACnD,WAAW,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;4BACrD,WAAW,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;4BACzC,WAAW,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;4BAC3C,MAAM;wBACR,KAAK,MAAM,CAAC;wBACZ,KAAK,YAAY;4BACf,WAAW,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;4BACrD,WAAW,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;4BACrD,WAAW,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;4BACrD,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;4BACrC,WAAW,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC;4BACvD,MAAM;wBACR,KAAK,OAAO;4BACV,WAAW,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;4BACvC,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;4BACjC,WAAW,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;4BACzC,MAAM;wBACR,KAAK,QAAQ;4BACX,WAAW,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;4BAC7B,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;4BACjC,WAAW,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;4BAC7B,WAAW,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;4BAC7C,WAAW,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;4BACnC,MAAM;wBACR,KAAK,SAAS;4BACZ,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;4BACjC,WAAW,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;4BACnC,WAAW,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;4BACnC,WAAW,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;4BAC3C,WAAW,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;4BACzC,WAAW,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;4BAC3C,WAAW,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;4BAC3C,MAAM;wBACR,KAAK,WAAW;4BACd,WAAW,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;4BACnD,MAAM;qBACT;oBACD,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC;iBACpC;aACF;SACF;IACH,CAAC;IAED,+CAAe,GAAf,UAAgB,IAAY,EAAE,QAAkC,EAAE,SAA2B,EAAE,WAAgB;QAC7G,IAAI,MAAM,GAAG,SAAS,CAAC;QACvB,IAAM,YAAY,GAAG,qBAAqB,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,qBAAqB,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;QAChH,IAAI,YAAY,KAAK,SAAS,EAAE;YAC9B,OAAO,MAAM,CAAC;SACf;QACD,IAAI,OAAO,GAA0B,QAAQ,CAAC,uBAAuB,CAAC,YAAY,CAAC,CAAC;QACpF,IAAI,OAAO,EAAE;YACX,IAAI,GAAG,GAAG,SAAS,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;YAC7C,MAAM,GAAG,GAAG,CAAC,QAAQ,CAAC;YACtB,IAAI,WAAW,KAAK,SAAS,EAAE;gBAC7B,QAAQ,IAAI,EAAE;oBACZ,KAAK,MAAM;wBACT,MAAM,CAAC,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC;wBACnC,MAAM,CAAC,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC;wBACnC,MAAM,CAAC,UAAU,GAAG,WAAW,CAAC,UAAU,CAAC;wBAC3C,MAAM,CAAC,QAAQ,GAAG,WAAW,CAAC,QAAQ,CAAC;wBACvC,MAAM,CAAC,QAAQ,GAAG,WAAW,CAAC,QAAQ,CAAC;wBACvC,MAAM,CAAC,QAAQ,GAAG,WAAW,CAAC,QAAQ,CAAC;wBACvC,MAAM,CAAC,QAAQ,GAAG,WAAW,CAAC,QAAQ,CAAC;wBACvC,MAAM,CAAC,UAAU,GAAG,WAAW,CAAC,UAAU,CAAC;wBAC3C,MAAM,CAAC,aAAa,GAAG,WAAW,CAAC,aAAa,CAAC;wBACjD,MAAM;oBACR,KAAK,MAAM;wBACT,MAAM,CAAC,WAAW,GAAG,WAAW,CAAC,WAAW,CAAC;wBAC7C,MAAM,CAAC,WAAW,GAAG,WAAW,CAAC,WAAW,CAAC;wBAC7C,MAAM,CAAC,WAAW,GAAG,WAAW,CAAC,WAAW,CAAC;wBAC7C,MAAM,CAAC,QAAQ,GAAG,WAAW,CAAC,QAAQ,CAAC;wBACvC,MAAM,CAAC,QAAQ,GAAG,WAAW,CAAC,QAAQ,CAAC;wBAEvC,MAAM,CAAC,QAAQ,GAAG,WAAW,CAAC,QAAQ,CAAC;wBACvC,MAAM,CAAC,YAAY,GAAG,WAAW,CAAC,YAAY,CAAC;wBAC/C,MAAM,CAAC,qBAAqB,GAAG,WAAW,CAAC,qBAAqB,CAAC;wBAEjE,MAAM,CAAC,QAAQ,GAAG,WAAW,CAAC,QAAQ,CAAC;wBACvC,MAAM,CAAC,QAAQ,GAAG,WAAW,CAAC,QAAQ,CAAC;wBACvC,MAAM,CAAC,qBAAqB,GAAG,WAAW,CAAC,qBAAqB,CAAC;wBACjE,MAAM,CAAC,gBAAgB,GAAG,WAAW,CAAC,gBAAgB,CAAC;wBACvD,MAAM,CAAC,gBAAgB,GAAG,WAAW,CAAC,gBAAgB,CAAC;wBACvD,MAAM;oBACR,KAAK,SAAS;wBACZ,MAAM,CAAC,WAAW,GAAG,WAAW,CAAC,WAAW,CAAC;wBAC7C,MAAM,CAAC,mBAAmB,GAAG,WAAW,CAAC,mBAAmB,CAAC;wBAC7D,MAAM,CAAC,UAAU,GAAG,WAAW,CAAC,UAAU,CAAC;wBAC3C,MAAM,CAAC,SAAS,GAAG,WAAW,CAAC,SAAS,CAAC;wBACzC,MAAM,CAAC,UAAU,GAAG,WAAW,CAAC,UAAU,CAAC;wBAC3C,MAAM;oBACR,KAAK,SAAS,CAAC;oBACf,KAAK,YAAY,CAAC;oBAClB,KAAK,UAAU,CAAC;oBAChB,KAAK,MAAM;wBACT,MAAM,CAAC,GAAG,GAAG,WAAW,CAAC,GAAG,CAAC;wBAC7B,MAAM,CAAC,GAAG,GAAG,WAAW,CAAC,GAAG,CAAC;wBAC7B,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC;wBAChF,MAAM;oBACR,KAAK,OAAO;wBACV,MAAM;oBACR;wBACE,MAAM;iBACT;gBACD,MAAM,CAAC,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC;gBACnC,MAAM,CAAC,IAAI,GAAG,WAAW,CAAC,IAAI,CAAC;aAChC;SACF;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAES,4CAAY,GAAtB;QACE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjD,IAAI,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;YACrF,IAAI,SAAS,EAAE;gBACb,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;gBACrC,SAAS,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;gBACjD,SAAS,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC;gBACvD,SAAS,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;gBACjD,SAAS,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;gBAC/C,SAAS,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;gBACnD,SAAS,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;gBACnD,SAAS,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC;gBACvD,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;aAChC;SACF;IACH,CAAC;IAEM,gDAAgB,GAAvB,UAAwB,QAAa;QACnC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC9C,IAAI,IAAI,KAAK,SAAS,EAAE;YACtB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;SAC/B;QACD,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE;YAC1B,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;SAC1B;IACH,CAAC;IAEM,8CAAc,GAArB,UAAsB,MAAW;QAC/B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC9C,IAAI,IAAI,KAAK,SAAS,EAAE;YACtB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;SAC3B;QACD,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE;YACxB,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;SACxB;IACH,CAAC;IAEM,+BAAS,GAAhB,UAAiB,IAAY,EAAE,oBAAyB;QACtD,IAAI,CAAC,qBAAqB,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,oBAAoB,CAAC,EAAE;YACtG,qBAAqB,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,oBAAoB,CAAC;SACnE;IACH,CAAC;IAED,sBAAI,4CAAS;aAQb;YACE,OAAO,IAAI,CAAC,UAAU,CAAC;QACzB,CAAC;aAVD,UAAc,GAAQ;YACpB,IAAI,CAAC,UAAU,GAAG,OAAO,GAAG,KAAK,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;YAChF,IAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC9C,IAAI,IAAI,EAAE;gBACR,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC;aAClC;QACH,CAAC;;;OAAA;IAMD,sBAAI,4CAAS;aAQb;YACE,OAAO,IAAI,CAAC,UAAU,CAAC;QACzB,CAAC;aAVD,UAAc,GAAQ;YACpB,IAAI,CAAC,UAAU,GAAG,OAAO,GAAG,KAAK,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;YAChF,IAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC9C,IAAI,IAAI,EAAE;gBACR,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC;aAClC;QACH,CAAC;;;OAAA;IAMD,sBAAI,6CAAU;aAQd;YACE,OAAO,IAAI,CAAC,WAAW,CAAC;QAC1B,CAAC;aAVD,UAAe,GAAQ;YACrB,IAAI,CAAC,WAAW,GAAG,OAAO,GAAG,KAAK,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;YACjF,IAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC9C,IAAI,IAAI,EAAE;gBACR,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC;aACpC;QACH,CAAC;;;OAAA;IAMD,0CAAU,GAAV;QACE,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE;YAC9C,QAAQ,IAAI,CAAC,IAAI,EAAE;gBACjB,KAAK,MAAM;oBACT,IAAI,CAAC,OAAO,GAAG,WAAW,CAAC;oBAC3B,MAAM;gBACR,KAAK,SAAS;oBACZ,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;oBACzB,MAAM;gBACR,KAAK,SAAS;oBACZ,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;oBACzB,MAAM;gBACR,KAAK,MAAM,CAAC;gBACZ,KAAK,YAAY,CAAC;gBAClB,KAAK,UAAU;oBACb,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC;oBACxB,MAAM;aACT;SACF;QACD,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC;QAC5F,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QAC/C,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IA/ba,mDAA6B,GAAG,6BAA6B,CAAC;IAC9D,oDAA8B,GAAG,8BAA8B,CAAC;IAE7D,sCAAgB,GAAG;QAClC,MAAM,EAAE,iCAAiC;QACzC,OAAO,EAAE,kCAAkC;QAC3C,QAAQ,EAAE,mCAAmC;QAC7C,IAAI,EAAE,+BAA+B;QACrC,KAAK,EAAE,gCAAgC;QACvC,OAAO,EAAE,kCAAkC;QAC3C,UAAU,EAAE,qCAAqC;QACjD,IAAI,EAAE,+BAA+B;QACrC,OAAO,EAAE,kCAAkC;QAC3C,SAAS,EAAE,oCAAoC;QAC/C,IAAI,EAAE,+BAA+B;KACtC,CAAC;IAEe,oCAAc,GAAG;QAChC,OAAO,EAAE,gCAAgC;QACzC,IAAI,EAAE,6BAA6B;QACnC,OAAO,EAAE,gCAAgC;QACzC,IAAI,EAAE,6BAA6B;QACnC,UAAU,EAAE,6BAA6B;QACzC,QAAQ,EAAE,6BAA6B;QACvC,IAAI,EAAE,6BAA6B;QACnC,IAAI,EAAE,6BAA6B;KACpC,CAAC;;gBA1CH,SAAS,SAAC;oBACT,QAAQ,EAAE,MAAM,CAAC,EAAE;oBACnB,QAAQ,EAAE,gBAAgB;oBAC1B,QAAQ,EAAE,0CAGT;oBACD,MAAM,EAAE,CAAC,QAER,CAAC;oBACF,eAAe,EAAE,uBAAuB,CAAC,MAAM;oBAC/C,MAAM,EAAE,6BAA6B;oBACrC,OAAO,EAAE,8BAA8B;iBACxC;;;gBA/FQ,eAAe,uBAsQnB,MAAM,SAAC,UAAU,CAAC,cAAM,OAAA,eAAe,EAAf,CAAe,CAAC;gBA7QiC,wBAAwB;gBAAoC,QAAQ;;;4BAuQ/I,SAAS,SAAC,WAAW,EAAE,EAAE,IAAI,EAAE,gBAAgB,EAAE;;IAnHlD;QADC,cAAc,EAAE;;2DACgB;IAKjC;QADC,cAAc,EAAE;;0DACe;IA4DhC;QADC,cAAc,EAAE;;4DACoB;IAErC;QADC,cAAc,EAAE;;kEACgB;IAGjC;QADC,cAAc,EAAE;;qEACkB;IAEnC;QADC,cAAc,EAAE;;kEACgB;IAQjC;QADC,cAAc,EAAE;;2DACmB;IAOpC;QADC,cAAc,EAAE;;sDACL;IAEZ;QADC,cAAc,EAAE;;sDACL;IAEZ;QADC,cAAc,EAAE;;uDACJ;IAEb;QADC,cAAc,EAAE;;mEACY;IAE7B;QADC,cAAc,EAAE;;mEACY;IAI7B;QADC,cAAc,EAAE;;sEACoB;IAErC;QADC,cAAc,EAAE;;6DACG;IAYpB;QADC,cAAc,EAAE;;4DACU;IAqS7B,4BAAC;CAAA,AAjdD,IAidC;SAncY,qBAAqB","sourcesContent":["import { AfterViewInit, ChangeDetectionStrategy, Component, ComponentFactory, ComponentFactoryResolver, EventEmitter, forwardRef, Inject, Injector, OnDestroy, OnInit, ViewChild, ViewContainerRef } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { DateFilterFunction, ODateValueType } from '../../../components/input/date-input/o-date-input.component';\nimport { InputConverter } from '../../../decorators';\nimport { Codes } from '../../../util/codes';\nimport { SQLTypes } from '../../../util/sqltypes';\nimport { Util } from '../../../util/util';\nimport { OTableComponent } from '../o-table.component';\nimport { OTableCellEditorBooleanComponent, OTableCellEditorDateComponent, OTableCellEditorIntegerComponent, OTableCellEditorRealComponent, OTableCellEditorTextComponent, OTableCellEditorTimeComponent } from './cell-editor/cell-editor';\nimport { OTableCellRendererActionComponent, OTableCellRendererBooleanComponent, OTableCellRendererCurrencyComponent, OTableCellRendererDateComponent, OTableCellRendererImageComponent, OTableCellRendererIntegerComponent, OTableCellRendererPercentageComponent, OTableCellRendererRealComponent, OTableCellRendererServiceComponent, OTableCellRendererTimeComponent } from './cell-renderer/cell-renderer';\nimport { OTableCellRendererTranslateComponent } from './cell-renderer/translate/o-table-cell-renderer-translate.component';\n\n\nexport interface OColumnTooltip {\n  value?: string;\n  function?: Function;\n}\n\nexport const DEFAULT_INPUTS_O_TABLE_COLUMN = [\n\n  // attr [string]: column name.\n  'attr',\n\n  // title [string]: column title. Default: no value.\n  'title',\n\n  // title-align [start | center | end]: column title alignment. Default: center.\n  'titleAlign: title-align',\n\n  // content-align [start | center | end]: column content alignment.\n  'contentAlign: content-align',\n\n  // orderable [no|yes]: column can be sorted. Default: yes.\n  'orderable',\n\n  // searchable [no|yes]: searchings are performed into column content. Default: yes.\n  'searchable',\n\n  // type [boolean|integer|real|currency|date|image]: column type. Default: no value (string).\n  'type',\n\n  // editable [no|yes]: column can be edited directly over the table. Default: no.\n  'editable',\n\n  'width',\n\n  // only in pixels\n  'minWidth: min-width',\n\n  // only in pixels\n  'maxWidth: max-width',\n\n  // async-load [no|yes|true|false]: asynchronous query. Default: no\n  'asyncLoad : async-load',\n\n  // sqltype[string]: Data type according to Java standard. See SQLType class. Default: 'OTHER'\n  'sqlType: sql-type',\n\n  'tooltip',\n\n  'tooltipValue: tooltip-value',\n\n  'tooltipFunction: tooltip-function',\n\n  'multiline',\n\n  'resizable',\n\n  ...OTableCellRendererBooleanComponent.DEFAULT_INPUTS_O_TABLE_CELL_RENDERER_BOOLEAN,\n  ...OTableCellRendererCurrencyComponent.DEFAULT_INPUTS_O_TABLE_CELL_RENDERER_CURRENCY, // includes Integer and Real\n  ...OTableCellRendererDateComponent.DEFAULT_INPUTS_O_TABLE_CELL_RENDERER_DATE,\n  ...OTableCellRendererImageComponent.DEFAULT_INPUTS_O_TABLE_CELL_RENDERER_IMAGE,\n  ...OTableCellRendererActionComponent.DEFAULT_INPUTS_O_TABLE_CELL_RENDERER_ACTION,\n  ...OTableCellRendererServiceComponent.DEFAULT_INPUTS_O_TABLE_CELL_RENDERER_SERVICE,\n  ...OTableCellRendererTranslateComponent.DEFAULT_IPUTS_O_TABLE_CELL_RENDERER_TRANSLATE,\n\n  ...OTableCellEditorBooleanComponent.DEFAULT_INPUTS_O_TABLE_CELL_EDITOR_BOOLEAN,\n  ...OTableCellEditorDateComponent.DEFAULT_INPUTS_O_TABLE_CELL_EDITOR_DATE,\n  ...OTableCellEditorRealComponent.DEFAULT_INPUTS_O_TABLE_CELL_EDITOR_REAL, // includes Integer\n  ...OTableCellEditorTextComponent.DEFAULT_INPUTS_O_TABLE_CELL_EDITOR_TEXT,\n  ...OTableCellEditorTimeComponent.DEFAULT_INPUTS_O_TABLE_CELL_EDITOR_TIME,\n\n];\n\nexport const DEFAULT_OUTPUTS_O_TABLE_COLUMN = [\n  ...OTableCellRendererActionComponent.DEFAULT_OUTPUTS_O_TABLE_CELL_RENDERER_ACTION,\n  ...OTableCellEditorTextComponent.DEFAULT_OUTPUTS_O_TABLE_CELL_EDITOR_TEXT\n];\n\n@Component({\n  moduleId: module.id,\n  selector: 'o-table-column',\n  template: `\n    <span #container>\n    </span>\n  `,\n  styles: [`\n\n  `],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: DEFAULT_INPUTS_O_TABLE_COLUMN,\n  outputs: DEFAULT_OUTPUTS_O_TABLE_COLUMN\n})\nexport class OTableColumnComponent implements OnDestroy, OnInit, AfterViewInit {\n\n  public static DEFAULT_INPUTS_O_TABLE_COLUMN = DEFAULT_INPUTS_O_TABLE_COLUMN;\n  public static DEFAULT_OUTPUTS_O_TABLE_COLUMN = DEFAULT_OUTPUTS_O_TABLE_COLUMN;\n\n  protected static renderersMapping = {\n    action: OTableCellRendererActionComponent,\n    boolean: OTableCellRendererBooleanComponent,\n    currency: OTableCellRendererCurrencyComponent,\n    date: OTableCellRendererDateComponent,\n    image: OTableCellRendererImageComponent,\n    integer: OTableCellRendererIntegerComponent,\n    percentage: OTableCellRendererPercentageComponent,\n    real: OTableCellRendererRealComponent,\n    service: OTableCellRendererServiceComponent,\n    translate: OTableCellRendererTranslateComponent,\n    time: OTableCellRendererTimeComponent\n  };\n\n  protected static editorsMapping = {\n    boolean: OTableCellEditorBooleanComponent,\n    date: OTableCellEditorDateComponent,\n    integer: OTableCellEditorIntegerComponent,\n    real: OTableCellEditorRealComponent,\n    percentage: OTableCellEditorRealComponent,\n    currency: OTableCellEditorRealComponent,\n    text: OTableCellEditorTextComponent,\n    time: OTableCellEditorTimeComponent\n  };\n\n  public renderer: any;\n  public editor: any;\n\n  public type: string;\n  public attr: string;\n  public title: string;\n  public titleAlign: string;\n  public contentAlign: 'start' | 'center' | 'end';\n  public sqlType: string;\n  protected _SQLType: number;\n  protected _defaultSQLTypeKey: string = 'OTHER';\n  protected _orderable: boolean;\n  protected _resizable: boolean;\n  protected _searchable: boolean = true;\n  @InputConverter()\n  public editable: boolean = false;\n  public width: string;\n  public minWidth: string;\n  public maxWidth: string;\n  @InputConverter()\n  public tooltip: boolean = false;\n  tooltipValue: string;\n  tooltipFunction: Function;\n\n  set multiline(val: boolean) {\n    val = Util.parseBoolean(String(val));\n    this._multiline = val;\n  }\n  get multiline(): boolean {\n    return this._multiline;\n  }\n  protected _multiline: boolean = false;\n  /* input renderer date */\n  protected format: string;\n  /* input renderer integer */\n  protected grouping: any = true;\n  protected thousandSeparator: string = ',';\n  /* input renderer real */\n  protected decimalSeparator: string = '.';\n\n  /* input renderer currency */\n  protected currencySymbol: string;\n  protected currencySymbolPosition: string;\n\n  /* input renderer boolean */\n  protected trueValue: any;\n  protected falseValue: any;\n  protected renderTrueValue: any;\n  protected renderFalseValue: any;\n  protected renderType: string = 'string';\n  protected booleanType: string = 'boolean';\n\n  /* input image */\n  protected imageType: string;\n  protected avatar: string;\n  protected emptyImage: string;\n\n  /* input renderer action */\n  protected icon: string;\n  protected action: string;\n  protected text: string;\n  protected iconPosition: string;\n\n  /* input renderer service */\n  protected entity: string;\n  protected service: string;\n  protected columns: string;\n  protected valueColumn: string;\n  protected parentKeys: string;\n  protected queryMethod: string = Codes.QUERY_METHOD;\n  protected serviceType: string;\n\n  /* input renderer translate */\n  protected translateArgsFn: (rowData: any) => any[];\n  /**input time */\n  oDateFormat = 'L';\n  oHourFormat = 24;\n\n  /* input editor */\n  @InputConverter()\n  protected orequired: boolean = false;\n  @InputConverter()\n  showPlaceHolder: boolean = false;\n  olabel: string;\n  @InputConverter()\n  updateRecordOnEdit: boolean = true;\n  @InputConverter()\n  showToastOnEdit: boolean = false;\n\n  /* input editor date */\n  protected locale: string;\n  protected oStartView: 'month' | 'year' = 'month';\n  protected oMinDate: string;\n  protected oMaxDate: string;\n  @InputConverter()\n  protected oTouchUi: boolean = false;\n  protected oStartAt: string;\n  protected filterDate: DateFilterFunction;\n  protected dateValueType: ODateValueType = 'timestamp';\n\n  /* input editor integer */\n  @InputConverter()\n  min: number;\n  @InputConverter()\n  max: number;\n  @InputConverter()\n  step: number;\n  @InputConverter()\n  minDecimalDigits: number = 2;\n  @InputConverter()\n  maxDecimalDigits: number = 2;\n\n  /* input editor boolean */\n  @InputConverter()\n  indeterminateOnNull: boolean = false;\n  @InputConverter()\n  autoCommit: boolean;\n\n  /* output cell renderer action */\n  onClick: EventEmitter<Object> = new EventEmitter<Object>();\n\n  /* output cell editor */\n  editionStarted: EventEmitter<Object> = new EventEmitter<Object>();\n  editionCancelled: EventEmitter<Object> = new EventEmitter<Object>();\n  editionCommitted: EventEmitter<Object> = new EventEmitter<Object>();\n  onPostUpdateRecord: EventEmitter<Object> = new EventEmitter<Object>();\n\n  @InputConverter()\n  asyncLoad: boolean = false;\n\n  @ViewChild('container', { read: ViewContainerRef })\n  container: ViewContainerRef;\n\n  private subscriptions = new Subscription();\n\n  constructor(\n    @Inject(forwardRef(() => OTableComponent)) public table: OTableComponent,\n    protected resolver: ComponentFactoryResolver,\n    protected injector: Injector\n  ) {\n    this.table = table;\n  }\n\n  ngOnInit() {\n    this.grouping = Util.parseBoolean(this.grouping, true);\n    this.titleAlign = this.parseTitleAlign();\n    this.table.registerColumn(this);\n    this.subscriptions.add(this.table.onReinitialize.subscribe(() => this.table.registerColumn(this)));\n  }\n\n  ngAfterViewInit(): void {\n    this.createRenderer();\n    this.createEditor();\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  parseTitleAlign(): string {\n    let align = (this.titleAlign || '').toLowerCase();\n    return Codes.AVAILABLE_COLUMN_TITLE_ALIGNS.indexOf(align) !== -1 ? align : undefined;\n  }\n\n  get originalWidth() {\n    let originalWidth = this.width;\n    const pxVal = Util.extractPixelsValue(this.width);\n    if (Util.isDefined(pxVal)) {\n      originalWidth = pxVal + '';\n\n    }\n    return originalWidth;\n  }\n\n  protected createRenderer(): void {\n    if (!Util.isDefined(this.renderer) && Util.isDefined(this.type)) {\n      const componentRef = OTableColumnComponent.renderersMapping[this.type];\n      if (componentRef !== undefined) {\n        const factory: ComponentFactory<any> = this.resolver.resolveComponentFactory(componentRef);\n        if (factory) {\n          const ref = this.container.createComponent(factory);\n          const newRenderer = ref.instance;\n          switch (this.type) {\n            case 'currency':\n              newRenderer.currencySymbol = this.currencySymbol;\n              newRenderer.currencySymbolPosition = this.currencySymbolPosition;\n              newRenderer.decimalSeparator = this.decimalSeparator;\n              newRenderer.minDecimalDigits = this.minDecimalDigits;\n              newRenderer.maxDecimalDigits = this.maxDecimalDigits;\n              newRenderer.grouping = this.grouping;\n              newRenderer.thousandSeparator = this.thousandSeparator;\n              break;\n            case 'date':\n              newRenderer.format = this.format;\n              break;\n            case 'time':\n              newRenderer.format = this.format;\n              break;\n            case 'integer':\n              newRenderer.grouping = this.grouping;\n              newRenderer.thousandSeparator = this.thousandSeparator;\n              break;\n            case 'boolean':\n              newRenderer.trueValue = this.trueValue;\n              newRenderer.falseValue = this.falseValue;\n              newRenderer.renderTrueValue = this.renderTrueValue;\n              newRenderer.renderFalseValue = this.renderFalseValue;\n              newRenderer.renderType = this.renderType;\n              newRenderer.booleanType = this.booleanType;\n              break;\n            case 'real':\n            case 'percentage':\n              newRenderer.decimalSeparator = this.decimalSeparator;\n              newRenderer.minDecimalDigits = this.minDecimalDigits;\n              newRenderer.maxDecimalDigits = this.maxDecimalDigits;\n              newRenderer.grouping = this.grouping;\n              newRenderer.thousandSeparator = this.thousandSeparator;\n              break;\n            case 'image':\n              newRenderer.imageType = this.imageType;\n              newRenderer.avatar = this.avatar;\n              newRenderer.emptyImage = this.emptyImage;\n              break;\n            case 'action':\n              newRenderer.icon = this.icon;\n              newRenderer.action = this.action;\n              newRenderer.text = this.text;\n              newRenderer.iconPosition = this.iconPosition;\n              newRenderer.onClick = this.onClick;\n              break;\n            case 'service':\n              newRenderer.entity = this.entity;\n              newRenderer.service = this.service;\n              newRenderer.columns = this.columns;\n              newRenderer.valueColumn = this.valueColumn;\n              newRenderer.parentKeys = this.parentKeys;\n              newRenderer.queryMethod = this.queryMethod;\n              newRenderer.serviceType = this.serviceType;\n              break;\n            case 'translate':\n              newRenderer.translateArgsFn = this.translateArgsFn;\n              break;\n          }\n          this.registerRenderer(newRenderer);\n        }\n      }\n    }\n  }\n\n  buildCellEditor(type: string, resolver: ComponentFactoryResolver, container: ViewContainerRef, propsOrigin: any) {\n    let editor = undefined;\n    const componentRef = OTableColumnComponent.editorsMapping[type] || OTableColumnComponent.editorsMapping['text'];\n    if (componentRef === undefined) {\n      return editor;\n    }\n    let factory: ComponentFactory<any> = resolver.resolveComponentFactory(componentRef);\n    if (factory) {\n      let ref = container.createComponent(factory);\n      editor = ref.instance;\n      if (propsOrigin !== undefined) {\n        switch (type) {\n          case 'date':\n            editor.format = propsOrigin.format;\n            editor.locale = propsOrigin.locale;\n            editor.oStartView = propsOrigin.oStartView;\n            editor.oMinDate = propsOrigin.oMinDate;\n            editor.oMaxDate = propsOrigin.oMaxDate;\n            editor.oTouchUi = propsOrigin.oTouchUi;\n            editor.oStartAt = propsOrigin.oStartAt;\n            editor.filterDate = propsOrigin.filterDate;\n            editor.dateValueType = propsOrigin.dateValueType;\n            break;\n          case 'time':\n            editor.oDateFormat = propsOrigin.oDateFormat;\n            editor.oHourFormat = propsOrigin.oHourFormat;\n            editor.oDateLocale = propsOrigin.oDateLocale;\n            editor.oMinDate = propsOrigin.oMinDate;\n            editor.oMaxDate = propsOrigin.oMaxDate;\n\n            editor.oTouchUi = propsOrigin.oTouchUi;\n            editor.oDateStartAt = propsOrigin.oDateStartAt;\n            editor.oDateTextInputEnabled = propsOrigin.oDateTextInputEnabled;\n\n            editor.oHourMin = propsOrigin.oHourMin;\n            editor.oHourMax = propsOrigin.oHourMax;\n            editor.oHourTextInputEnabled = propsOrigin.oHourTextInputEnabled;\n            editor.oHourPlaceholder = propsOrigin.oHourPlaceholder;\n            editor.oDatePlaceholder = propsOrigin.oDatePlaceholder;\n            break;\n          case 'boolean':\n            editor.booleanType = propsOrigin.booleanType;\n            editor.indeterminateOnNull = propsOrigin.indeterminateOnNull;\n            editor.autoCommit = propsOrigin.autoCommit;\n            editor.trueValue = propsOrigin.trueValue;\n            editor.falseValue = propsOrigin.falseValue;\n            break;\n          case 'integer':\n          case 'percentage':\n          case 'currency':\n          case 'real':\n            editor.min = propsOrigin.min;\n            editor.max = propsOrigin.max;\n            editor.step = Util.isDefined(propsOrigin.step) ? propsOrigin.step : editor.step;\n            break;\n          case 'image':\n            break;\n          default:\n            break;\n        }\n        editor.olabel = propsOrigin.olabel;\n        editor.type = propsOrigin.type;\n      }\n    }\n    return editor;\n  }\n\n  protected createEditor() {\n    if (!Util.isDefined(this.editor) && this.editable) {\n      let newEditor = this.buildCellEditor(this.type, this.resolver, this.container, this);\n      if (newEditor) {\n        newEditor.orequired = this.orequired;\n        newEditor.showPlaceHolder = this.showPlaceHolder;\n        newEditor.updateRecordOnEdit = this.updateRecordOnEdit;\n        newEditor.showToastOnEdit = this.showToastOnEdit;\n        newEditor.editionStarted = this.editionStarted;\n        newEditor.editionCancelled = this.editionCancelled;\n        newEditor.editionCommitted = this.editionCommitted;\n        newEditor.onPostUpdateRecord = this.onPostUpdateRecord;\n        this.registerEditor(newEditor);\n      }\n    }\n  }\n\n  public registerRenderer(renderer: any) {\n    this.renderer = renderer;\n    const oCol = this.table.getOColumn(this.attr);\n    if (oCol !== undefined) {\n      oCol.renderer = this.renderer;\n    }\n    if (this.renderer.ngOnInit) {\n      this.renderer.ngOnInit();\n    }\n  }\n\n  public registerEditor(editor: any) {\n    this.editor = editor;\n    const oCol = this.table.getOColumn(this.attr);\n    if (oCol !== undefined) {\n      oCol.editor = this.editor;\n    }\n    if (this.editor.ngOnInit) {\n      this.editor.ngOnInit();\n    }\n  }\n\n  static addEditor(type: string, editorClassReference: any) {\n    if (!OTableColumnComponent.editorsMapping.hasOwnProperty(type) && Util.isDefined(editorClassReference)) {\n      OTableColumnComponent.editorsMapping[type] = editorClassReference;\n    }\n  }\n\n  set orderable(val: any) {\n    this._orderable = typeof val === 'boolean' ? val : Util.parseBoolean(val, true);\n    const oCol = this.table.getOColumn(this.attr);\n    if (oCol) {\n      oCol.orderable = this._orderable;\n    }\n  }\n\n  get orderable(): any {\n    return this._orderable;\n  }\n\n  set resizable(val: any) {\n    this._resizable = typeof val === 'boolean' ? val : Util.parseBoolean(val, true);\n    const oCol = this.table.getOColumn(this.attr);\n    if (oCol) {\n      oCol.resizable = this._resizable;\n    }\n  }\n\n  get resizable(): any {\n    return this._resizable;\n  }\n\n  set searchable(val: any) {\n    this._searchable = typeof val === 'boolean' ? val : Util.parseBoolean(val, true);\n    const oCol = this.table.getOColumn(this.attr);\n    if (oCol) {\n      oCol.searchable = this._searchable;\n    }\n  }\n\n  get searchable(): any {\n    return this._searchable;\n  }\n\n  getSQLType(): number {\n    if (!(this.sqlType && this.sqlType.length > 0)) {\n      switch (this.type) {\n        case 'date':\n          this.sqlType = 'TIMESTAMP';\n          break;\n        case 'integer':\n          this.sqlType = 'INTEGER';\n          break;\n        case 'boolean':\n          this.sqlType = 'BOOLEAN';\n          break;\n        case 'real':\n        case 'percentage':\n        case 'currency':\n          this.sqlType = 'DOUBLE';\n          break;\n      }\n    }\n    let sqlt = this.sqlType && this.sqlType.length > 0 ? this.sqlType : this._defaultSQLTypeKey;\n    this._SQLType = SQLTypes.getSQLTypeValue(sqlt);\n    return this._SQLType;\n  }\n\n}\n"]}
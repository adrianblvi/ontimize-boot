{"version":3,"file":"o-table-cell-renderer-real.component.js","sourceRoot":"","sources":["../../../../../../../tmp/ontimize/components/table/column/cell-renderer/real/o-table-cell-renderer-real.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAE,uBAAuB,EAAE,MAAM,eAAe,CAAC;AAErG,OAAO,EAAE,aAAa,EAAE,MAAM,yBAAyB,CAAC;AACxD,OAAO,EAAqB,SAAS,EAAE,MAAM,sBAAsB,CAAC;AACpE,OAAO,EAAE,4CAA4C,EAAE,kCAAkC,EAAE,MAAM,oDAAoD,CAAC;AACtJ,OAAO,EAAE,cAAc,EAAE,MAAM,2BAA2B,CAAC;AAE3D,MAAM,CAAC,IAAM,yCAAyC,GACjD,4CAA4C;IAE/C,qCAAqC;IACrC,sCAAsC;IACtC,sCAAsC;EACvC,CAAC;AAEF;IAWqD,mDAAkC;IAiBrF,yCAAsB,QAAkB;QAAxC,YACE,kBAAM,QAAQ,CAAC,SAIhB;QALqB,cAAQ,GAAR,QAAQ,CAAU;QAZxC,sBAAgB,GAAW,CAAC,CAAC;QAE7B,sBAAgB,GAAW,CAAC,CAAC;QAEnB,sBAAgB,GAAW,GAAG,CAAC;QAUvC,KAAI,CAAC,WAAW,CAAC,IAAI,GAAG,MAAM,CAAC;QAC/B,KAAI,CAAC,aAAa,GAAG,KAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QACtD,KAAI,CAAC,gBAAgB,EAAE,CAAC;;IAC1B,CAAC;IAED,0DAAgB,GAAhB;QACE,IAAI,CAAC,aAAa,GAAG,IAAI,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACpD,CAAC;IAED,kDAAQ,GAAR;QACE,iBAAM,QAAQ,WAAE,CAAC;QACjB,IAAI,CAAC,aAAa,GAAG;YACnB,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;YACvC,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;YACvC,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;YACvC,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,iBAAiB,EAAE,IAAI,CAAC,iBAAiB;SAC1C,CAAC;IACJ,CAAC;IAnCa,yEAAyC,GAAG,yCAAyC,CAAC;;gBAbrG,SAAS,SAAC;oBACT,QAAQ,EAAE,MAAM,CAAC,EAAE;oBACnB,QAAQ,EAAE,4BAA4B;oBACtC,QAAQ,EAAE,+HAIT;oBACD,eAAe,EAAE,uBAAuB,CAAC,MAAM;oBAC/C,MAAM,EAAE,yCAAyC;iBAClD;;;gBAzBmB,QAAQ;;;8BAyCzB,SAAS,SAAC,aAAa,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE;;IAV/C;QADC,cAAc,EAAE;;6EACY;IAE7B;QADC,cAAc,EAAE;;6EACY;IAgC/B,sCAAC;CAAA,AAlDD,CAWqD,kCAAkC,GAuCtF;SAvCY,+BAA+B","sourcesContent":["import { Component, Injector, TemplateRef, ViewChild, ChangeDetectionStrategy } from '@angular/core';\n\nimport { NumberService } from '../../../../../services';\nimport { IRealPipeArgument, ORealPipe } from '../../../../../pipes';\nimport { DEFAULT_INPUTS_O_TABLE_CELL_RENDERER_INTEGER, OTableCellRendererIntegerComponent } from '../integer/o-table-cell-renderer-integer.component';\nimport { InputConverter } from '../../../../../decorators';\n\nexport const DEFAULT_INPUTS_O_TABLE_CELL_RENDERER_REAL = [\n  ...DEFAULT_INPUTS_O_TABLE_CELL_RENDERER_INTEGER,\n  // decimal-separator [string]: decimal separator. Default: dot (.).\n  'decimalSeparator: decimal-separator',\n  'minDecimalDigits: min-decimal-digits',\n  'maxDecimalDigits: max-decimal-digits'\n];\n\n@Component({\n  moduleId: module.id,\n  selector: 'o-table-cell-renderer-real',\n  template: `\n    <ng-template #templateref let-cellvalue=\"cellvalue\">\n            {{ getCellData(cellvalue)}}\n    </ng-template>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: DEFAULT_INPUTS_O_TABLE_CELL_RENDERER_REAL\n})\nexport class OTableCellRendererRealComponent extends OTableCellRendererIntegerComponent {\n\n  public static DEFAULT_INPUTS_O_TABLE_CELL_RENDERER_REAL = DEFAULT_INPUTS_O_TABLE_CELL_RENDERER_REAL;\n\n  @InputConverter()\n  minDecimalDigits: number = 2;\n  @InputConverter()\n  maxDecimalDigits: number = 2;\n\n  protected decimalSeparator: string = '.';\n  protected numberService: NumberService;\n\n  protected componentPipe: ORealPipe;\n  protected pipeArguments: IRealPipeArgument;\n\n  @ViewChild('templateref', { read: TemplateRef }) public templateref: TemplateRef<any>;\n\n  constructor(protected injector: Injector) {\n    super(injector);\n    this.tableColumn.type = 'real';\n    this.numberService = this.injector.get(NumberService);\n    this.setComponentPipe();\n  }\n\n  setComponentPipe() {\n    this.componentPipe = new ORealPipe(this.injector);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.pipeArguments = {\n      minDecimalDigits: this.minDecimalDigits,\n      maxDecimalDigits: this.maxDecimalDigits,\n      decimalSeparator: this.decimalSeparator,\n      grouping: this.grouping,\n      thousandSeparator: this.thousandSeparator\n    };\n  }\n\n}\n"]}
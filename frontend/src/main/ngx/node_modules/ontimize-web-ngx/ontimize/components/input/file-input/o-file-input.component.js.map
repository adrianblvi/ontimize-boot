{"version":3,"file":"o-file-input.component.js","sourceRoot":"","sources":["../../../../../tmp/ontimize/components/input/file-input/o-file-input.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { CommonModule } from '@angular/common';\nimport { Component, ElementRef, EventEmitter, forwardRef, Inject, Injector, NgModule, OnInit, Optional, ViewChild } from '@angular/core';\nimport { FormControl, ValidationErrors, ValidatorFn } from '@angular/forms';\nimport { InputConverter } from '../../../decorators';\nimport { OntimizeFileService } from '../../../services';\nimport { OSharedModule } from '../../../shared';\nimport { OFormComponent } from '../../form/o-form.component';\nimport { DEFAULT_OUTPUTS_O_FORM_DATA_COMPONENT, OFormDataComponent, OValueChangeEvent } from '../../o-form-data-component.class';\nimport { OFileItem } from './o-file-item.class';\nimport { OFileUploader } from './o-file-uploader.class';\n\n\nexport const DEFAULT_INPUTS_O_FILE_INPUT = [\n  'oattr: attr',\n  'olabel: label',\n  'floatLabel: float-label',\n  'oplaceholder: placeholder',\n  'tooltip',\n  'tooltipPosition: tooltip-position',\n  'tooltipShowDelay: tooltip-show-delay',\n  'tooltipHideDelay: tooltip-hide-delay',\n  'enabled',\n  'orequired: required',\n  'service',\n  'entity',\n  'serviceType : service-type',\n  'width',\n  'readOnly: read-only',\n  'clearButton: clear-button',\n\n  // accept-file-type [string]: file types allowed on the file input, separated by ';'. Default: no value.\n  // file_extension, audio/*, video/*, image/*, media_type. See https://www.w3schools.com/tags/att_input_accept.asp\n  'acceptFileType: accept-file-type',\n\n  // max-file-size [number]: maximum file size allowed, in bytes. Default: no value.\n  'maxFileSize: max-file-size',\n\n  // multiple [boolean]: multiple file selection allowed. Default: no.\n  'multiple',\n\n  // max-files [number]: maximum number of files allowed. Default: -1.\n  'maxFiles: max-files',\n\n  // show-info [boolean]: show files information. Default: no.\n  'showInfo: show-info',\n\n  // split-upload [boolean]: each file is uploaded in a request (true) or all files are uploaded in a single request (false). Default: yes.\n  'splitUpload: split-upload',\n\n  // additional-data [JSON]: used to send aditional information in the upload request.\n  'additionalData: additional-data',\n  'appearance',\n  'hideRequiredMarker:hide-required-marker',\n  'labelVisible:label-visible'\n];\n\nexport const DEFAULT_OUTPUTS_O_FILE_INPUT = [\n  ...DEFAULT_OUTPUTS_O_FORM_DATA_COMPONENT,\n  'onBeforeUpload',\n  'onBeforeUploadFile',\n  'onProgress',\n  'onProgressFile',\n  'onCancel',\n  'onCancelFile',\n  'onUpload',\n  'onUploadFile',\n  'onComplete',\n  'onCompleteFile',\n  'onError',\n  'onErrorFile'\n];\n\n@Component({\n  moduleId: module.id,\n  selector: 'o-file-input',\n  template: `\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" [formGroup]=\"getFormGroup()\" [matTooltip]=\"tooltip\" [matTooltipClass]=\"tooltipClass\"\n      [matTooltipPosition]=\"tooltipPosition\" [matTooltipShowDelay]=\"tooltipShowDelay\" [matTooltipHideDelay]=\"tooltipHideDelay\">\n      <mat-form-field [appearance]=\"appearance\" [floatLabel]=\"floatLabel\"  [hideRequiredMarker]=\"hideRequiredMarker\" [class.custom-width]=\"hasCustomWidth\" class=\"icon-field\"\n        (click)=\"!enabled || isReadOnly ? null : inputFile.click()\" fxFill>\n        <mat-label *ngIf=\"labelVisible\">{{ olabel | oTranslate }}</mat-label>\n        <input #inputShowValue matInput type=\"text\" [id]=\"getAttribute()\" [formControlName]=\"getAttribute()\" [placeholder]=\"placeHolder\"\n          [required]=\"isRequired\" readonly (change)=\"onChangeEvent($event)\">\n        <button type=\"button\" *ngIf=\"showClearButton\" matSuffix mat-icon-button (click)=\"onClickClearValue($event)\">\n          <mat-icon svgIcon=\"ontimize:close\"></mat-icon>\n        </button>\n        <button type=\"button\" *ngIf=\"getValue()\" [disabled]=\"!isValid || uploader.isUploading\" matSuffix mat-icon-button (click)=\"onClickUpload($event)\">\n          <mat-icon>file_upload</mat-icon>\n        </button>\n        <mat-error *ngIf=\"hasError('required')\" text=\"{{ 'FORM_VALIDATION.REQUIRED' | oTranslate }}\"></mat-error>\n        <mat-error *ngIf=\"hasError('fileType')\" text=\"{{ 'FORM_VALIDATION.FILE_TYPE' | oTranslate}} ({{ getErrorValue('fileType','allowedFileTypes') }})\">\n        </mat-error>\n        <mat-error *ngIf=\"hasError('fileSize')\"\n          text=\"{{ 'FORM_VALIDATION.FILE_MAXSIZE' | oTranslate }}: {{ getErrorValue('fileSize', 'maxFileSize') }} bytes\"></mat-error>\n        <mat-error *ngIf=\"hasError('numFile')\" text=\"{{ 'FORM_VALIDATION.FILE_MAXNUM' | oTranslate }}: {{ getErrorValue('numFile', 'maxFiles') }}\">\n        </mat-error>\n        <mat-error *ngFor=\"let oError of getActiveOErrors()\" text=\"{{ oError.text | oTranslate }}\"></mat-error>\n      </mat-form-field>\n      <input #inputFile type=\"file\" id=\"{{getAttribute()+'-file-input'}}\" [attr.accept]=\"acceptFileType ? acceptFileType.replace(';',',') : null\"\n        (change)=\"fileSelected($event)\" hidden=\"true\" [attr.multiple]=\"multiple ? '' : null\">\n      <div *ngIf=\"showInfo && files\">\n        <mat-progress-bar *ngIf=\"!splitUpload && uploader.isUploading\" color=\"accent\" mode=\"determinate\" [value]=\"uploader.progress\"></mat-progress-bar>\n        <mat-list>\n          <mat-list-item *ngFor=\"let file of files\">\n            <mat-icon mat-list-icon>insert_drive_file</mat-icon>\n            <span mat-line>{{ file.name }}</span>\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n              <mat-progress-spinner *ngIf=\"splitUpload && file.isUploading\" color=\"accent\" mode=\"determinate\" [value]=\"file.progress\" class=\"uploading\"\n                diameter=\"3\" strokeWidth=\"3\"></mat-progress-spinner>\n              <mat-icon *ngIf=\"splitUpload && file.isUploaded && file.isSuccess\" class=\"uploaded\" svgIcon=\"ontimize:check_circle\"></mat-icon>\n              <mat-icon *ngIf=\"splitUpload && file.isUploaded && file.isError\" class=\"error\" svgIcon=\"ontimize:error_outline\"></mat-icon>\n            </div>\n          </mat-list-item>\n        </mat-list>\n      </div>\n    </div>\n  `,\n  styles: [`\n    .o-file-input-buttons{position:absolute;top:0;bottom:0;right:0;margin:auto}mat-icon.uploaded{color:#0f9d58}mat-icon.error{color:#D50000}\n  `],\n  inputs: DEFAULT_INPUTS_O_FILE_INPUT,\n  outputs: DEFAULT_OUTPUTS_O_FILE_INPUT\n})\nexport class OFileInputComponent extends OFormDataComponent implements OnInit {\n\n  public static DEFAULT_INPUTS_O_FILE_INPUT = DEFAULT_INPUTS_O_FILE_INPUT;\n  public static DEFAULT_OUTPUTS_O_FILE_INPUT = DEFAULT_OUTPUTS_O_FILE_INPUT;\n\n  public uploader: OFileUploader;\n  public fileService: OntimizeFileService;\n  @ViewChild('inputFile')\n  public inputFile: ElementRef;\n\n  public autoBinding: boolean = false;\n  public autoRegistering: boolean = false;\n  @InputConverter()\n  public showInfo: boolean = false;\n  @InputConverter()\n  public multiple: boolean = false;\n  @InputConverter()\n  public splitUpload: boolean = true;\n  public acceptFileType: string;\n  public maxFileSize: number;\n  @InputConverter()\n  public maxFiles: number = -1;\n\n  public onBeforeUpload: EventEmitter<any> = new EventEmitter<any>();\n  public onBeforeUploadFile: EventEmitter<any> = new EventEmitter<any>();\n  public onProgress: EventEmitter<any> = new EventEmitter<any>();\n  public onProgressFile: EventEmitter<any> = new EventEmitter<any>();\n  public onCancel: EventEmitter<any> = new EventEmitter<any>();\n  public onCancelFile: EventEmitter<any> = new EventEmitter<any>();\n  public onUpload: EventEmitter<any> = new EventEmitter<any>();\n  public onUploadFile: EventEmitter<any> = new EventEmitter<any>();\n  public onComplete: EventEmitter<any> = new EventEmitter<any>();\n  public onCompleteFile: EventEmitter<any> = new EventEmitter<any>();\n  public onError: EventEmitter<any> = new EventEmitter<any>();\n  public onErrorFile: EventEmitter<any> = new EventEmitter<any>();\n\n  protected service: string;\n  protected entity: string;\n  protected serviceType: string;\n\n  constructor(\n    @Optional() @Inject(forwardRef(() => OFormComponent)) form: OFormComponent,\n    elRef: ElementRef,\n    injector: Injector,\n  ) {\n    super(form, elRef, injector);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n\n    this.initialize();\n\n    this.uploader.onBeforeUploadAll = () => this.onBeforeUpload.emit();\n    this.uploader.onBeforeUploadItem = item => this.onBeforeUploadFile.emit(item);\n    this.uploader.onProgressAll = progress => this.onProgress.emit(progress);\n    this.uploader.onProgressItem = (item, progress) => this.onProgressFile.emit({ item: item, progress: progress });\n    this.uploader.onCancelAll = () => this.onCancel.emit();\n    this.uploader.onCancelItem = item => this.onCancelFile.emit();\n    this.uploader.onSuccessAll = response => this.onUpload.emit({ response: response });\n    this.uploader.onSuccessItem = (item, response) => this.onUploadFile.emit({ item: item, response: response });\n    this.uploader.onCompleteAll = () => this.onComplete.emit();\n    this.uploader.onCompleteItem = item => this.onCompleteFile.emit(item);\n    this.uploader.onErrorAll = error => this.onError.emit(error);\n    this.uploader.onErrorItem = (item, error) => this.onErrorFile.emit({ item: item, error: error });\n  }\n\n  public initialize(): void {\n    super.initialize();\n\n    if (!this.service) {\n      this.service = this.form.service;\n    }\n    if (!this.entity) {\n      this.entity = this.form.entity;\n    }\n\n    this.configureService();\n    this.uploader = new OFileUploader(this.fileService, this.entity);\n    this.uploader.splitUpload = this.splitUpload;\n  }\n\n  public configureService(): void {\n    let loadingService: any = OntimizeFileService;\n    if (this.serviceType) {\n      loadingService = this.serviceType;\n    }\n    try {\n      this.fileService = this.injector.get(loadingService);\n\n      if (this.fileService) {\n        const serviceCfg: any = this.fileService.getDefaultServiceConfiguration(this.service);\n        if (this.entity) {\n          serviceCfg.entity = this.entity;\n        }\n        this.fileService.configureService(serviceCfg);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  public resolveValidators(): ValidatorFn[] {\n    const validators: ValidatorFn[] = super.resolveValidators();\n    if (this.acceptFileType) {\n      validators.push(this.filetypeValidator.bind(this));\n    }\n    if (this.maxFileSize) {\n      validators.push(this.maxFileSizeValidator.bind(this));\n    }\n    if (this.multiple && this.maxFiles !== -1) {\n      validators.push(this.maxFilesValidator.bind(this));\n    }\n    return validators;\n  }\n\n  public fileSelected(event: Event): void {\n    let value: string = '';\n    if (event) {\n      const target: any = event.target || event.srcElement;\n      if (target.files.length > 0) {\n        const files: FileList = target.files;\n        if (!this.multiple) {\n          this.uploader.clear();\n        }\n        for (let i = 0, f: File; i < files.length; i++) {\n          f = files[i];\n          const fileItem: OFileItem = new OFileItem(f, this.uploader);\n          this.uploader.addFile(fileItem);\n        }\n        value = this.uploader.files.map(file => file.name).join(', ');\n\n        window.setTimeout(() => {\n          this.setValue(value !== '' ? value : undefined, { changeType: OValueChangeEvent.USER_CHANGE });\n          if (this._fControl) {\n            this._fControl.markAsTouched();\n          }\n        }, 0);\n      }\n    }\n  }\n\n  /**\n   * Override super.onClickClearValue();\n   * super.clearValue() vs super.onClickClearValue()\n   *  * super.clearValue() emit OValueChangeEvent.PROGRAMMATIC_CHANGE\n   *  * super.onClickClearValue() emit OValueChangeEvent.USER_CHANGE\n   */\n  public onClickClearValue(e: Event): void {\n    super.onClickClearValue(e);\n    this.uploader.clear();\n  }\n\n  /**\n   * Override super.clearValue();\n   */\n  public clearValue(): void {\n    super.clearValue();\n    this.uploader.clear();\n  }\n\n  public onClickUpload(e: Event): void {\n    e.stopPropagation();\n    if (this.isValid) {\n      this.upload();\n    }\n  }\n\n  public upload(): void {\n    this.uploader.upload();\n  }\n\n  get files(): OFileItem[] {\n    return this.uploader.files;\n  }\n\n  get additionalData(): any {\n    if (this.uploader) {\n      return this.uploader.data;\n    }\n    return null;\n  }\n\n  set additionalData(data: any) {\n    if (this.uploader) {\n      this.uploader.data = data;\n    }\n  }\n\n  public innerOnChange(event: any): void {\n    this.ensureOFormValue(event);\n    if (this._fControl && this._fControl.touched) {\n      this._fControl.markAsDirty();\n    }\n    this.onChange.emit(event);\n  }\n\n  protected filetypeValidator(control: FormControl): ValidationErrors {\n    if (control.value && control.value.length > 0 && this.acceptFileType) {\n      const regex: RegExp = new RegExp(this.acceptFileType.replace(';', '|'));\n      if (!this.files.every(file => file.type.match(regex) !== null || file.name.substr(file.name.lastIndexOf('.')).match(regex) !== null)) {\n        return {\n          fileType: {\n            allowedFileTypes: this.acceptFileType.replace(';', ', ')\n          }\n        };\n      }\n    }\n    return {};\n  }\n\n  protected maxFileSizeValidator(control: FormControl): ValidationErrors {\n    if (control.value && control.value.length > 0 && this.maxFileSize) {\n      if (!this.files.every(file => file.size < this.maxFileSize)) {\n        return {\n          fileSize: {\n            maxFileSize: this.maxFileSize\n          }\n        };\n      }\n    }\n    return {};\n  }\n\n  protected maxFilesValidator(control: FormControl): ValidationErrors {\n    if (control.value && control.value.length > 0 && this.multiple && this.maxFiles !== -1) {\n      if (this.maxFiles < this.files.length) {\n        return {\n          numFile: {\n            maxFiles: this.maxFiles\n          }\n        };\n      }\n    }\n    return {};\n  }\n\n\n}\n\n@NgModule({\n  declarations: [OFileInputComponent],\n  imports: [CommonModule, OSharedModule],\n  exports: [OFileInputComponent]\n})\nexport class OFileInputModule { }\n"]}
{"version":3,"file":"o-list-item-text-renderer.class.js","sourceRoot":"","sources":["../../../../../tmp/ontimize/components/list/renderers/o-list-item-text-renderer.class.ts"],"names":[],"mappings":"AAAA,OAAO,EAAc,YAAY,EAAuB,MAAM,eAAe,CAAC;AAE9E,OAAO,EAAE,IAAI,EAAE,MAAM,oBAAoB,CAAC;AAG1C,MAAM,CAAC,IAAM,8BAA8B,GAAG;IAC5C,OAAO;IACP,4BAA4B;IAC5B,gCAAgC;IAChC,MAAM;CACP,CAAC;AAEF,MAAM,CAAC,IAAM,+BAA+B,GAAG;IAC7C,2BAA2B;CAC5B,CAAC;AAEF;IAaE,+BACS,KAAiB,EACd,SAAoB,EACpB,SAAmB,EACnB,SAA6B;QAHhC,UAAK,GAAL,KAAK,CAAY;QACd,cAAS,GAAT,SAAS,CAAW;QACpB,cAAS,GAAT,SAAS,CAAU;QACnB,cAAS,GAAT,SAAS,CAAoB;QANzC,gBAAW,GAAyB,IAAI,YAAY,EAAU,CAAC;IAO3D,CAAC;IAEL,wDAAwB,GAAxB;QACE,IAAI,IAAI,CAAC,KAAK,CAAC,aAAa,IAAI,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,aAAa,EAAE;YACtE,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,aAAa,CAAC,aAAa,CAAC;YACpE,IAAI,QAAQ,IAAI,QAAQ,CAAC,QAAQ,KAAK,eAAe,EAAE;gBACrD,IAAI,OAAO,GAAG,CAAC,CAAC;gBAChB,IAAI,IAAI,CAAC,KAAK,KAAK,SAAS,EAAE;oBAC5B,OAAO,EAAE,CAAC;iBACX;gBACD,IAAI,IAAI,CAAC,WAAW,KAAK,SAAS,EAAE;oBAClC,OAAO,EAAE,CAAC;iBACX;gBACD,IAAI,IAAI,CAAC,aAAa,KAAK,SAAS,EAAE;oBACpC,OAAO,EAAE,CAAC;iBACX;gBACD,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,GAAG,OAAO,GAAG,OAAO,CAAC,CAAC;gBACnD,QAAQ,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC,MAAM,EAAE,CAAC;aACnD;SACF;IACH,CAAC;IAED,iDAAiB,GAAjB,UAAkB,CAAS;QACzB,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE;YACrB,CAAC,CAAC,eAAe,EAAE,CAAC;SACrB;QACD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC/B,CAAC;IAED,sBAAI,wCAAK;aAAT;YACE,OAAO,IAAI,CAAC,MAAM,CAAC;QACrB,CAAC;aAED,UAAU,GAAW;YACnB,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;QACpB,CAAC;;;OAJA;IAMD,sBAAI,8CAAW;aAAf;YACE,OAAO,IAAI,CAAC,YAAY,CAAC;QAC3B,CAAC;aAED,UAAgB,GAAW;YACzB,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC;QAC1B,CAAC;;;OAJA;IAMD,sBAAI,gDAAa;aAAjB;YACE,OAAO,IAAI,CAAC,cAAc,CAAC;QAC7B,CAAC;aAED,UAAkB,GAAW;YAC3B,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC;QAC5B,CAAC;;;OAJA;IAMD,sBAAI,uCAAI;aAAR;YACE,OAAO,IAAI,CAAC,KAAK,CAAC;QACpB,CAAC;aAED,UAAS,GAAW;YAClB,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;QACnB,CAAC;;;OAJA;IAvEa,oDAA8B,GAAG,8BAA8B,CAAC;IAChE,qDAA+B,GAAG,+BAA+B,CAAC;IA4ElF,4BAAC;CAAA,AA/ED,IA+EC;SA/EY,qBAAqB","sourcesContent":["import { ElementRef, EventEmitter, Injector, Renderer2 } from '@angular/core';\n\nimport { Util } from '../../../util/util';\nimport { OListItemComponent } from '../list-item/o-list-item.component';\n\nexport const DEFAULT_INPUTS_O_TEXT_RENDERER = [\n  'title',\n  'primaryText : primary-text',\n  'secondaryText : secondary-text',\n  'icon'\n];\n\nexport const DEFAULT_OUTPUTS_O_TEXT_RENDERER = [\n  'onIconClick : icon-action'\n];\n\nexport class OListItemTextRenderer {\n\n  public static DEFAULT_INPUTS_O_TEXT_RENDERER = DEFAULT_INPUTS_O_TEXT_RENDERER;\n  public static DEFAULT_OUTPUTS_O_TEXT_RENDERER = DEFAULT_OUTPUTS_O_TEXT_RENDERER;\n\n  /* inputs variables */\n  protected _title: string;\n  protected _primaryText: string;\n  protected _secondaryText: string;\n  protected _icon: string;\n\n  onIconClick: EventEmitter<Object> = new EventEmitter<Object>();\n\n  constructor(\n    public elRef: ElementRef,\n    protected _renderer: Renderer2,\n    protected _injector: Injector,\n    protected _listItem: OListItemComponent\n  ) { }\n\n  modifyMatListItemElement() {\n    if (this.elRef.nativeElement && this.elRef.nativeElement.parentElement) {\n      let listItem = this.elRef.nativeElement.parentElement.parentElement;\n      if (listItem && listItem.nodeName === 'MAT-LIST-ITEM') {\n        let linesNo = 3;\n        if (this.title === undefined) {\n          linesNo--;\n        }\n        if (this.primaryText === undefined) {\n          linesNo--;\n        }\n        if (this.secondaryText === undefined) {\n          linesNo--;\n        }\n        listItem.classList.add('mat-' + linesNo + '-line');\n        listItem.querySelector('.mat-list-text').remove();\n      }\n    }\n  }\n\n  onActionIconClick(e?: Event) {\n    if (Util.isDefined(e)) {\n      e.stopPropagation();\n    }\n    this.onIconClick.emit(event);\n  }\n\n  get title(): string {\n    return this._title;\n  }\n\n  set title(val: string) {\n    this._title = val;\n  }\n\n  get primaryText(): string {\n    return this._primaryText;\n  }\n\n  set primaryText(val: string) {\n    this._primaryText = val;\n  }\n\n  get secondaryText(): string {\n    return this._secondaryText;\n  }\n\n  set secondaryText(val: string) {\n    this._secondaryText = val;\n  }\n\n  get icon(): string {\n    return this._icon;\n  }\n\n  set icon(val: string) {\n    this._icon = val;\n  }\n\n}\n"]}
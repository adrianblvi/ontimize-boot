import { Component, forwardRef, Inject, Injector, ChangeDetectionStrategy } from '@angular/core';
import { Subscription } from 'rxjs';
import { OTableComponent } from '../../../o-table.component';
var OColumnAggregate = (function () {
    function OColumnAggregate() {
    }
    return OColumnAggregate;
}());
export { OColumnAggregate };
export var DEFAULT_TABLE_COLUMN_AGGREGATE = [
    'attr',
    'title',
    'aggregate',
    'functionAggregate: function-aggregate'
];
var OTableColumnAggregateComponent = (function () {
    function OTableColumnAggregateComponent(table, injector) {
        this.injector = injector;
        this.title = '';
        this.subscription = new Subscription();
        this.table = table;
    }
    Object.defineProperty(OTableColumnAggregateComponent.prototype, "functionAggregate", {
        get: function () {
            return this._aggregateFunction;
        },
        set: function (val) {
            this._aggregateFunction = val;
        },
        enumerable: true,
        configurable: true
    });
    OTableColumnAggregateComponent.prototype.getColumnData = function (attr) {
        var columnData = [];
        if (this.table.dataSource) {
            columnData = this.table.dataSource.getColumnData(attr);
        }
        return columnData;
    };
    OTableColumnAggregateComponent.prototype.ngOnInit = function () {
        var _this = this;
        if (!this.attr) {
            return;
        }
        var ocolumnaggregate = new OColumnAggregate();
        ocolumnaggregate.attr = this.attr;
        if (this.title) {
            ocolumnaggregate.title = this.title;
        }
        ocolumnaggregate.operator = this.aggregate ? this.aggregate : (this.functionAggregate ? this.functionAggregate : OTableColumnAggregateComponent.DEFAULT_AGGREGATE);
        this.table.registerColumnAggregate(ocolumnaggregate);
        this.subscription.add(this.table.onReinitialize.subscribe(function () { return _this.table.registerColumnAggregate(ocolumnaggregate); }));
    };
    OTableColumnAggregateComponent.prototype.ngOnDestroy = function () {
        this.subscription.unsubscribe();
    };
    OTableColumnAggregateComponent.DEFAULT_AGGREGATE = 'SUM';
    OTableColumnAggregateComponent.decorators = [
        { type: Component, args: [{
                    moduleId: module.id,
                    selector: 'o-table-column-aggregate',
                    template: "\n     <!--{{ functionAggregate(getColumnData(attr)) }}-->\n  ",
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    inputs: DEFAULT_TABLE_COLUMN_AGGREGATE
                },] },
    ];
    OTableColumnAggregateComponent.ctorParameters = function () { return [
        { type: OTableComponent, decorators: [{ type: Inject, args: [forwardRef(function () { return OTableComponent; }),] }] },
        { type: Injector }
    ]; };
    return OTableColumnAggregateComponent;
}());
export { OTableColumnAggregateComponent };
//# sourceMappingURL=o-table-column-aggregate.component.js.map
import { Component, ContentChildren, EventEmitter, HostListener, Injector, QueryList, ViewChild } from '@angular/core';
import { MatMenuTrigger } from '@angular/material';
import { OComponentMenuItems } from '../o-content-menu.class';
import { OContextMenuService } from '../o-context-menu.service';
import { OWrapperContentMenuComponent } from './o-wrapper-content-menu/o-wrapper-content-menu.component';
export var DEFAULT_CONTEXT_MENU_CONTENT_INPUTS = [
    'menuItems',
    'overlay',
    'data',
    'menuClass'
];
export var DEFAULT_CONTEXT_MENU_CONTENT_OUTPUTS = [
    'execute',
    'close'
];
var OContextMenuContentComponent = (function () {
    function OContextMenuContentComponent(injector, menuService) {
        this.injector = injector;
        this.menuService = menuService;
        this.menuItems = [];
        this.execute = new EventEmitter();
    }
    OContextMenuContentComponent.prototype.click = function () {
        this.close();
    };
    OContextMenuContentComponent.prototype.ngOnInit = function () {
        this.initialize();
    };
    OContextMenuContentComponent.prototype.ngAfterViewInit = function () {
        this.trigger.openMenu();
    };
    OContextMenuContentComponent.prototype.initialize = function () {
        this.setData(this.menuItems);
    };
    OContextMenuContentComponent.prototype.setData = function (items) {
        var _this = this;
        items.forEach(function (menuItem) {
            if (_this.data) {
                menuItem.data = _this.data;
                if (menuItem.children && menuItem.children.length > 0) {
                    _this.setData(menuItem.children);
                }
            }
        });
    };
    OContextMenuContentComponent.prototype.onMenuClosed = function (e) {
        this.close();
    };
    OContextMenuContentComponent.prototype.close = function () {
        this.trigger.closeMenu();
        this.menuService.closeContextMenu.next();
    };
    OContextMenuContentComponent.decorators = [
        { type: Component, args: [{
                    moduleId: module.id,
                    selector: 'o-context-menu-content',
                    template: "\n    <button mat-button [matMenuTriggerFor]=\"menu.childMenu\" (menuClosed)=\"onMenuClosed($event)\"></button>\n    <o-wrapper-content-menu #menu [items]=\"menuItems\" [class]=\"menuClass\"> </o-wrapper-content-menu>\n  ",
                    inputs: DEFAULT_CONTEXT_MENU_CONTENT_INPUTS,
                    outputs: DEFAULT_CONTEXT_MENU_CONTENT_OUTPUTS,
                    host: {
                        '[class.o-context-menu-content]': 'true'
                    }
                },] },
    ];
    OContextMenuContentComponent.ctorParameters = function () { return [
        { type: Injector },
        { type: OContextMenuService }
    ]; };
    OContextMenuContentComponent.propDecorators = {
        oContextMenuItems: [{ type: ContentChildren, args: [OComponentMenuItems,] }],
        trigger: [{ type: ViewChild, args: [MatMenuTrigger,] }],
        menu: [{ type: ViewChild, args: [OWrapperContentMenuComponent,] }],
        click: [{ type: HostListener, args: ['document:click',] }]
    };
    return OContextMenuContentComponent;
}());
export { OContextMenuContentComponent };
//# sourceMappingURL=o-context-menu-content.component.js.map
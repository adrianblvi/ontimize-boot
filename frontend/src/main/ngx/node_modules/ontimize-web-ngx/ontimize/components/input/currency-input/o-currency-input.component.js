var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { Component, NgModule, ViewEncapsulation } from '@angular/core';
import { CommonModule } from '@angular/common';
import { OSharedModule } from '../../../shared';
import { DEFAULT_INPUTS_O_REAL_INPUT, DEFAULT_OUTPUTS_O_REAL_INPUT, ORealInputModule, ORealInputComponent } from '../real-input/o-real-input.component';
export var DEFAULT_INPUTS_O_CURRENCY_INPUT = DEFAULT_INPUTS_O_REAL_INPUT.concat([
    'currencySymbol: currency-symbol',
    'currencySymbolPosition: currency-symbol-position'
]);
export var DEFAULT_OUTPUTS_O_CURRENCY_INPUT = DEFAULT_OUTPUTS_O_REAL_INPUT.slice();
var OCurrencyInputComponent = (function (_super) {
    __extends(OCurrencyInputComponent, _super);
    function OCurrencyInputComponent() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.currency_symbols = {
            'CRC': '₡',
            'NGN': '₦',
            'PHP': '₱',
            'PLN': 'zł',
            'PYG': '₲',
            'THB': '฿',
            'UAH': '₴',
            'VND': '₫',
        };
        _this.currencySymbol = 'EUR';
        _this.currencySymbolPosition = 'right';
        return _this;
    }
    OCurrencyInputComponent.prototype.existsOntimizeIcon = function () {
        return OCurrencyInputComponent.currency_icons.indexOf(this.currencySymbol) !== -1;
    };
    OCurrencyInputComponent.prototype.useIcon = function (position) {
        return this.existsOntimizeIcon() && this.currencySymbolPosition === position;
    };
    OCurrencyInputComponent.prototype.useSymbol = function (position) {
        return this.currency_symbols.hasOwnProperty(this.currencySymbol) && this.currencySymbolPosition === position;
    };
    OCurrencyInputComponent.DEFAULT_INPUTS_O_CURRENCY_INPUT = DEFAULT_INPUTS_O_CURRENCY_INPUT;
    OCurrencyInputComponent.DEFAULT_OUTPUTS_O_CURRENCY_INPUT = DEFAULT_OUTPUTS_O_CURRENCY_INPUT;
    OCurrencyInputComponent.currency_icons = ['USD', 'EUR', 'GBP', 'ILS', 'INR', 'JPY', 'KRW', 'BTC'];
    OCurrencyInputComponent.decorators = [
        { type: Component, args: [{
                    moduleId: module.id,
                    selector: 'o-currency-input',
                    template: "\n    <div [formGroup]=\"getFormGroup()\" [matTooltip]=\"tooltip\" [matTooltipClass]=\"tooltipClass\"\n      [matTooltipPosition]=\"tooltipPosition\" [matTooltipShowDelay]=\"tooltipShowDelay\"\n      [matTooltipHideDelay]=\"tooltipHideDelay\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n\n      <div *ngIf=\"useSymbol('left')\" matSuffix class=\"icon-btn\" [class.mat-disabled]=\"!enabled\">\n        {{ currency_symbols[currencySymbol] }}\n      </div>\n      <mat-icon *ngIf=\"useIcon('left')\" svgIcon=\"ontimize:{{currencySymbol}}\" matSuffix class=\"svg-icon\"\n        [class.mat-disabled]=\"!enabled\"></mat-icon>\n      <mat-form-field [appearance]=\"appearance\" [floatLabel]=\"floatLabel\" [hideRequiredMarker]=\"hideRequiredMarker\"\n        [class.custom-width]=\"hasCustomWidth\" class=\"icon-field\" fxFill>\n        <mat-label *ngIf=\"labelVisible\">{{ olabel | oTranslate }}</mat-label>\n        <input matInput [type]=\"inputType\" [id]=\"getAttribute()\" [formControlName]=\"getAttribute()\"\n          [placeholder]=\"placeHolder\" (focus)=\"innerOnFocus($event)\" (blur)=\"innerOnBlur($event)\" [readonly]=\"isReadOnly\"\n          [min]=\"min\" [max]=\"max\" [step]=\"step\" [required]=\"isRequired\" (change)=\"onChangeEvent($event)\">\n\n        <button type=\"button\" *ngIf=\"showClearButton\" matSuffix mat-icon-button (click)=\"onClickClearValue($event)\">\n          <mat-icon svgIcon=\"ontimize:close\"></mat-icon>\n        </button>\n        <div *ngIf=\"useSymbol('right')\" matSuffix class=\"icon-btn\" [class.mat-disabled]=\"!enabled\">\n          {{ currency_symbols[currencySymbol] }}\n        </div>\n        <mat-icon *ngIf=\"useIcon('right')\" svgIcon=\"ontimize:{{currencySymbol}}\" matSuffix class=\"svg-icon\"\n          [class.mat-disabled]=\"!enabled\">\n        </mat-icon>\n\n        <mat-error *ngIf=\"hasError('required')\" text=\"{{ 'FORM_VALIDATION.REQUIRED' | oTranslate }}\"></mat-error>\n        <mat-error *ngIf=\"hasError('min')\"\n          text=\"{{ 'FORM_VALIDATION.MIN_VALUE' | oTranslate }}: {{ getErrorValue('min', 'requiredMin') }}\"></mat-error>\n        <mat-error *ngIf=\"hasError('max')\"\n          text=\"{{ 'FORM_VALIDATION.MAX_VALUE' | oTranslate }}: {{ getErrorValue('max', 'requiredMax') }}\"></mat-error>\n        <mat-error *ngIf=\"hasError('minDecimaldigits')\"\n          text=\"{{ 'FORM_VALIDATION.MIN_DECIMAL_DIGITS' | oTranslate }}: {{ getErrorValue('minDecimaldigits', 'requiredMinDecimaldigits') }}\">\n        </mat-error>\n        <mat-error *ngIf=\"hasError('maxDecimaldigits')\"\n          text=\"{{ 'FORM_VALIDATION.MAX_DECIMAL_DIGITS' | oTranslate }}: {{ getErrorValue('maxDecimaldigits', 'requiredMaxDecimaldigits') }}\">\n        </mat-error>\n        <mat-error *ngFor=\"let oError of getActiveOErrors()\" text=\"{{ oError.text | oTranslate }}\"></mat-error>\n      </mat-form-field>\n    </div>\n  ",
                    styles: ["\n    o-currency-input input{padding-right:8px}o-currency-input input .mat-form-field-wrapper .mat-input-table .mat-form-field-infix .mat-input-element{text-align:end}\n  "],
                    inputs: DEFAULT_INPUTS_O_CURRENCY_INPUT,
                    outputs: DEFAULT_OUTPUTS_O_CURRENCY_INPUT,
                    encapsulation: ViewEncapsulation.None
                },] },
    ];
    return OCurrencyInputComponent;
}(ORealInputComponent));
export { OCurrencyInputComponent };
var OCurrencyInputModule = (function () {
    function OCurrencyInputModule() {
    }
    OCurrencyInputModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [OCurrencyInputComponent],
                    imports: [CommonModule, OSharedModule, ORealInputModule],
                    exports: [OCurrencyInputComponent, ORealInputModule]
                },] },
    ];
    return OCurrencyInputModule;
}());
export { OCurrencyInputModule };
//# sourceMappingURL=o-currency-input.component.js.map
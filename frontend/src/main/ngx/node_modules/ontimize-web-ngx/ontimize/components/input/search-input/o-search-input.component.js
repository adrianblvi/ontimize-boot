var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { CommonModule } from '@angular/common';
import { Component, ElementRef, EventEmitter, Injector, NgModule, ViewEncapsulation } from '@angular/core';
import { FormControl, FormGroup } from '@angular/forms';
import { debounceTime, distinctUntilChanged } from 'rxjs/operators';
import { O_INPUTS_OPTIONS } from '../../../config/app-config';
import { InputConverter } from '../../../decorators/input-converter';
import { OTranslateService, SnackBarService } from '../../../services';
import { OSharedModule } from '../../../shared';
import { Util, FilterExpressionUtils } from '../../../utils';
export var DEFAULT_INPUTS_O_SEARCH_INPUT = [
    'placeholder',
    'width',
    'floatLabel: float-label',
    'appearance',
    'columns',
    'filterCaseSensitive: filter-case-sensitive',
    'showCaseSensitiveCheckbox: show-case-sensitive-checkbox',
    'showMenu: show-menu'
];
export var DEFAULT_OUTPUTS_O_SEARCH_INPUT = [
    'onSearch'
];
var OSearchInputComponent = (function () {
    function OSearchInputComponent(injector, elRef) {
        this.injector = injector;
        this.elRef = elRef;
        this.onSearch = new EventEmitter();
        this.colArray = [];
        this.placeholder = 'SEARCH';
        this.showCaseSensitiveCheckbox = false;
        this.showMenu = true;
        this._filterCaseSensitive = false;
        this.translateService = this.injector.get(OTranslateService);
        this.snackBarService = this.injector.get(SnackBarService);
        this.formGroup = new FormGroup({});
    }
    OSearchInputComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.term = new FormControl();
        this.formGroup.addControl('term', this.term);
        this.term.valueChanges.pipe(debounceTime(400))
            .pipe(distinctUntilChanged()).subscribe(function (term) {
            if (_this.checkActiveColumns()) {
                _this.onSearch.emit(term);
            }
        });
        var colArray = Util.parseArray(this.columns, true);
        colArray.forEach(function (col) {
            _this.colArray.push({
                column: col,
                checked: true
            });
        });
    };
    OSearchInputComponent.prototype.ngAfterViewInit = function () {
        try {
            this.oInputsOptions = this.injector.get(O_INPUTS_OPTIONS);
        }
        catch (e) {
            this.oInputsOptions = {};
        }
        Util.parseOInputsOptions(this.elRef, this.oInputsOptions);
    };
    Object.defineProperty(OSearchInputComponent.prototype, "floatLabel", {
        get: function () {
            return this._floatLabel;
        },
        set: function (value) {
            var values = ['always', 'never', 'auto'];
            if (values.indexOf(value) === -1) {
                value = 'auto';
            }
            this._floatLabel = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(OSearchInputComponent.prototype, "appearance", {
        get: function () {
            return this._appearance;
        },
        set: function (value) {
            var values = ['legacy', 'standard', 'fill', 'outline'];
            if (values.indexOf(value) === -1) {
                value = undefined;
            }
            this._appearance = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(OSearchInputComponent.prototype, "filterCaseSensitive", {
        get: function () {
            return this._filterCaseSensitive;
        },
        set: function (value) {
            this._filterCaseSensitive = value;
        },
        enumerable: true,
        configurable: true
    });
    OSearchInputComponent.prototype.getFormGroup = function () {
        return this.formGroup;
    };
    OSearchInputComponent.prototype.getValue = function () {
        return this.term.value;
    };
    OSearchInputComponent.prototype.setValue = function (val) {
        this.term.setValue(val);
    };
    OSearchInputComponent.prototype.getFormControl = function () {
        return this.term;
    };
    Object.defineProperty(OSearchInputComponent.prototype, "hasCustomWidth", {
        get: function () {
            return this.width !== undefined;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(OSearchInputComponent.prototype, "showFilterMenu", {
        get: function () {
            return this.showMenu && this.colArray.length > 0;
        },
        enumerable: true,
        configurable: true
    });
    OSearchInputComponent.prototype.isChecked = function (column) {
        return column.checked;
    };
    OSearchInputComponent.prototype.onCheckboxChange = function (column, event) {
        column.checked = event.checked;
    };
    OSearchInputComponent.prototype.onSelectAllChange = function (event) {
        this.colArray.forEach(function (col) {
            col.checked = event.checked;
        });
    };
    OSearchInputComponent.prototype.areAllColumnsChecked = function () {
        var result = true;
        this.colArray.forEach(function (col) {
            result = result && col.checked;
        });
        return result;
    };
    OSearchInputComponent.prototype.onFilterCaseSensitiveChange = function (event) {
        this.filterCaseSensitive = event.checked;
    };
    OSearchInputComponent.prototype.getActiveColumns = function () {
        return this.colArray.filter(function (col) { return col.checked; }).map(function (col) { return col.column; });
    };
    OSearchInputComponent.prototype.setActiveColumns = function (arg) {
        this.colArray.forEach(function (c) {
            c.checked = arg.indexOf(c.column) !== -1;
        });
    };
    OSearchInputComponent.prototype.checkActiveColumns = function () {
        if (this.getActiveColumns().length === 0) {
            this.snackBarService.open('MESSAGES.AVOID_QUERY_WITHOUT_QUICKFILTER_COLUMNS');
            return false;
        }
        return true;
    };
    OSearchInputComponent.prototype.triggerOnSearch = function () {
        var term = this.term.value;
        if (this.checkActiveColumns() && Util.isDefined(term) && term.length > 0) {
            this.onSearch.emit(term);
        }
    };
    OSearchInputComponent.prototype.onMenuClosed = function () {
        this.triggerOnSearch();
    };
    Object.defineProperty(OSearchInputComponent.prototype, "filterExpression", {
        get: function () {
            var result;
            var termValue = this.getValue();
            if (Util.isDefined(termValue) && termValue.length > 0) {
                var filterCols = this.getActiveColumns();
                if (filterCols.length > 0) {
                    return FilterExpressionUtils.buildArrayExpressionLike(filterCols, termValue);
                }
            }
            return result;
        },
        enumerable: true,
        configurable: true
    });
    OSearchInputComponent.DEFAULT_INPUTS_O_SEARCH_INPUT = DEFAULT_INPUTS_O_SEARCH_INPUT;
    OSearchInputComponent.DEFAULT_OUTPUTS_O_SEARCH_INPUT = DEFAULT_OUTPUTS_O_SEARCH_INPUT;
    OSearchInputComponent.decorators = [
        { type: Component, args: [{
                    moduleId: module.id,
                    selector: 'o-search-input',
                    template: "\n    <form [formGroup]=\"getFormGroup()\">\n      <mat-form-field [appearance]=\"appearance\" [floatLabel]=\"floatLabel\" [class.custom-width]=\"hasCustomWidth\"\n        class=\"icon-field\" fxFill>\n        <mat-icon *ngIf=\"!showFilterMenu\" svgIcon=\"ontimize:search\" matPrefix></mat-icon>\n        <mat-icon *ngIf=\"showFilterMenu\" svgIcon=\"ontimize:search\" matPrefix [matMenuTriggerFor]=\"menu\"\n          class=\"menu-trigger\" (menuClosed)=\"onMenuClosed()\"></mat-icon>\n        <input #term matInput id=\"term\" type=\"search\" placeholder=\"{{ placeholder | oTranslate }}\" formControlName=\"term\">\n      </mat-form-field>\n    </form>\n\n    <mat-menu #menu=\"matMenu\" class=\"o-search-input-menu\">\n      <div fxLayout=\"column\" class=\"checkbox-container\">\n\n        <ng-container *ngIf=\"colArray.length > 1\">\n          <mat-checkbox (click)=\"$event.stopPropagation()\" [checked]=\"areAllColumnsChecked()\"\n            (change)=\"onSelectAllChange($event)\">\n            {{ 'SELECT_ALL' | oTranslate }}</mat-checkbox>\n          <mat-divider></mat-divider>\n        </ng-container>\n\n        <ng-container *ngFor=\"let item of colArray\">\n          <mat-checkbox (click)=\"$event.stopPropagation()\" [checked]=\"isChecked(item)\"\n            (change)=\"onCheckboxChange(item, $event)\">\n            {{ item.column | oTranslate }}\n          </mat-checkbox>\n        </ng-container>\n\n        <ng-container *ngIf=\"showCaseSensitiveCheckbox\">\n          <mat-divider></mat-divider>\n          <mat-checkbox (click)=\"$event.stopPropagation()\" [checked]=\"filterCaseSensitive\"\n            (change)=\"onFilterCaseSensitiveChange($event)\">\n            {{ 'TABLE.FILTER.CASE_SENSITIVE' | oTranslate }}\n          </mat-checkbox>\n        </ng-container>\n      </div>\n    </mat-menu>\n  ",
                    styles: ["\n    .o-search-input .mat-icon{vertical-align:bottom;cursor:default}.o-search-input .mat-icon.menu-trigger{cursor:pointer}.o-search-input .mat-input-element{line-height:20px}.o-search-input-menu .mat-divider{margin:8px 0}.o-search-input-menu .checkbox-container{padding:6px 12px}\n  "],
                    inputs: DEFAULT_INPUTS_O_SEARCH_INPUT,
                    outputs: DEFAULT_OUTPUTS_O_SEARCH_INPUT,
                    encapsulation: ViewEncapsulation.None,
                    host: {
                        '[class.o-search-input]': 'true'
                    }
                },] },
    ];
    OSearchInputComponent.ctorParameters = function () { return [
        { type: Injector },
        { type: ElementRef }
    ]; };
    __decorate([
        InputConverter(),
        __metadata("design:type", Boolean)
    ], OSearchInputComponent.prototype, "showCaseSensitiveCheckbox", void 0);
    __decorate([
        InputConverter(),
        __metadata("design:type", Boolean)
    ], OSearchInputComponent.prototype, "showMenu", void 0);
    __decorate([
        InputConverter(),
        __metadata("design:type", Boolean)
    ], OSearchInputComponent.prototype, "_filterCaseSensitive", void 0);
    return OSearchInputComponent;
}());
export { OSearchInputComponent };
var OSearchInputModule = (function () {
    function OSearchInputModule() {
    }
    OSearchInputModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [OSearchInputComponent],
                    imports: [CommonModule, OSharedModule],
                    exports: [OSearchInputComponent]
                },] },
    ];
    return OSearchInputModule;
}());
export { OSearchInputModule };
//# sourceMappingURL=o-search-input.component.js.map
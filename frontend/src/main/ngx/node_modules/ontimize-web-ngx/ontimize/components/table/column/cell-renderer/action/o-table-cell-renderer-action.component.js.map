{"version":3,"file":"o-table-cell-renderer-action.component.js","sourceRoot":"","sources":["../../../../../../../tmp/ontimize/components/table/column/cell-renderer/action/o-table-cell-renderer-action.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { ChangeDetectionStrategy, Component, EventEmitter, Injector, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { Codes, Util } from '../../../../../utils';\nimport { OBaseTableCellRenderer } from '../o-base-table-cell-renderer.class';\n\n\nexport const DEFAULT_INPUTS_O_TABLE_CELL_RENDERER_ACTION = [\n  'icon',\n  'svgIcon:svg-icon',\n  'action',\n  'text',\n  'iconPosition: icon-position'\n];\n\nexport const DEFAULT_OUTPUTS_O_TABLE_CELL_RENDERER_ACTION = [\n  'onClick'\n];\n\n@Component({\n  moduleId: module.id,\n  selector: 'o-table-cell-renderer-action',\n  template: `\n    <ng-template #templateref let-cellvalue=\"cellvalue\" let-rowvalue=\"rowvalue\">\n      <span class=\"o-action-cell-renderer\" (click)=\"innerOnClick($event, rowvalue)\">\n        <mat-icon *ngIf=\"isIconPositionLeft()\">{{ icon }}</mat-icon>\n        <mat-icon *ngIf=\"isSvgIconPositionLeft()\" [svgIcon]=\"svgIcon\"></mat-icon>\n        <span *ngIf=\"text !== undefined\">{{ text | oTranslate }}</span>\n        <mat-icon *ngIf=\"isIconPositionRight()\">{{ icon }}</mat-icon>\n        <mat-icon *ngIf=\"isSvgIconPositionRight()\" [svgIcon]=\"svgIcon\"></mat-icon>\n      </span>\n    </ng-template>\n  `,\n  styles: [`\n    :host .mat-icon{margin:0 4px}\n  `],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: DEFAULT_INPUTS_O_TABLE_CELL_RENDERER_ACTION,\n  outputs: DEFAULT_OUTPUTS_O_TABLE_CELL_RENDERER_ACTION\n})\nexport class OTableCellRendererActionComponent extends OBaseTableCellRenderer implements OnInit {\n\n  public static DEFAULT_INPUTS_O_TABLE_CELL_RENDERER_ACTION = DEFAULT_INPUTS_O_TABLE_CELL_RENDERER_ACTION;\n  public static DEFAULT_OUTPUTS_O_TABLE_CELL_RENDERER_ACTION = DEFAULT_OUTPUTS_O_TABLE_CELL_RENDERER_ACTION;\n\n  onClick: EventEmitter<Object> = new EventEmitter<Object>();\n  action: string;\n  _icon: string;\n  text: string;\n  iconPosition: string;\n  public svgIcon: string;\n\n  @ViewChild('templateref', { read: TemplateRef }) public templateref: TemplateRef<any>;\n\n  constructor(protected injector: Injector) {\n    super(injector);\n    this.tableColumn.type = 'action';\n    this.tableColumn.orderable = false;\n    this.tableColumn.searchable = false;\n  }\n\n  ngOnInit() {\n    if (this.table) {\n      const oCol = this.table.getOColumn(this.tableColumn.attr);\n      oCol.title = undefined;\n    }\n    this.iconPosition = Util.parseIconPosition(this.iconPosition);\n  }\n\n  getCellData(value: any) {\n    return value;\n  }\n\n  innerOnClick(event, rowData) {\n    if (event) {\n      event.stopPropagation();\n      event.preventDefault();\n    }\n    if (Util.isDefined(this.action)) {\n      switch (this.action.toLowerCase()) {\n        case 'detail':\n          this.table.viewDetail(rowData);\n          break;\n        case 'edit':\n          this.table.editDetail(rowData);\n          break;\n        default:\n          break;\n      }\n    } else {\n      this.onClick.emit(rowData);\n    }\n  }\n\n  get icon(): string {\n    return this._icon;\n  }\n\n  set icon(arg: string) {\n    this._icon = arg;\n  }\n\n  isIconPositionLeft() {\n    return Util.isDefined(this.icon) && this.iconPosition === Codes.ICON_POSITION_LEFT;\n  }\n\n  isIconPositionRight() {\n    return Util.isDefined(this.icon) && this.iconPosition === Codes.ICON_POSITION_RIGHT;\n  }\n\n  isSvgIconPositionRight() {\n    return Util.isDefined(this.svgIcon) && this.iconPosition === Codes.ICON_POSITION_RIGHT;\n  }\n\n  isSvgIconPositionLeft() {\n    return Util.isDefined(this.svgIcon) && this.iconPosition === Codes.ICON_POSITION_LEFT;\n  }\n}\n"]}
{"version":3,"file":"o-table-option.component.js","sourceRoot":"","sources":["../../../../../../../tmp/ontimize/components/table/extensions/header/table-option/o-table-option.component.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,UAAU,EAAE,YAAY,EAAE,QAAQ,EAAE,iBAAiB,EAAE,UAAU,EAAE,uBAAuB,EAAE,iBAAiB,EAAE,MAAM,eAAe,CAAC;AACjK,OAAO,EAAE,eAAe,EAAE,MAAM,4BAA4B,CAAC;AAC7D,OAAO,EAAE,cAAc,EAAE,MAAM,2BAA2B,CAAC;AAE3D,MAAM,CAAC,IAAM,6BAA6B,GAAG;IAC3C,aAAa;IACb,SAAS;IACT,MAAM;IAEN,mCAAmC;IACnC,eAAe;IACf,QAAQ;CACT,CAAC;AAEF,MAAM,CAAC,IAAM,8BAA8B,GAAG;IAC5C,SAAS;CACV,CAAC;AAEF;IA0CE,+BACY,QAAkB,EACrB,KAAiB,EAC6B,KAAsB;QAFjE,aAAQ,GAAR,QAAQ,CAAU;QACrB,UAAK,GAAL,KAAK,CAAY;QAC6B,UAAK,GAAL,KAAK,CAAiB;QAjB7E,YAAO,GAAyB,IAAI,YAAY,EAAU,CAAC;QAI3D,YAAO,GAAY,IAAI,CAAC;QAIxB,mBAAc,GAAY,KAAK,CAAC;QAEhC,WAAM,GAAY,KAAK,CAAC;QAStB,IAAI;YACF,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;SAChD;QAAC,OAAO,CAAC,EAAE;SAEX;IACH,CAAC;IAED,4CAAY,GAAZ;QACE,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC/B,CAAC;IAED,oDAAoB,GAApB;QACE,OAAO,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,MAAM,CAAC;IAC5C,CAAC;IAED,yCAAS,GAAT,UAAU,GAAY;QACpB,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;QAClB,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;IAC1B,CAAC;IA1Ca,mDAA6B,GAAG,6BAA6B,CAAC;IAC9D,oDAA8B,GAAG,8BAA8B,CAAC;IAChE,iDAA2B,GAAG,uBAAuB,CAAC;;gBA1BrE,SAAS,SAAC;oBACT,QAAQ,EAAE,MAAM,CAAC,EAAE;oBACnB,QAAQ,EAAE,gBAAgB;oBAC1B,QAAQ,EAAE,6VAMT;oBACD,MAAM,EAAE,CAAC,QAER,CAAC;oBACF,MAAM,EAAE,6BAA6B;oBACrC,OAAO,EAAE,8BAA8B;oBACvC,aAAa,EAAE,iBAAiB,CAAC,IAAI;oBACrC,eAAe,EAAE,uBAAuB,CAAC,MAAM;oBAC/C,IAAI,EAAE;wBACJ,wBAAwB,EAAE,MAAM;qBACjC;iBACF;;;gBAtCqD,QAAQ;gBAAqB,UAAU;gBACpF,eAAe,uBA8DnB,MAAM,SAAC,UAAU,CAAC,cAAM,OAAA,eAAe,EAAf,CAAe,CAAC;;IAb3C;QADC,cAAc,EAAE;;0DACO;IAIxB;QADC,cAAc,EAAE;;iEACe;IAEhC;QADC,cAAc,EAAE;;yDACO;IA8B1B,4BAAC;CAAA,AApED,IAoEC;SA9CY,qBAAqB","sourcesContent":["import { Component, Inject, forwardRef, EventEmitter, Injector, ViewEncapsulation, ElementRef, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { OTableComponent } from '../../../o-table.component';\nimport { InputConverter } from '../../../../../decorators';\n\nexport const DEFAULT_INPUTS_O_TABLE_OPTION = [\n  'oattr: attr',\n  'enabled',\n  'icon',\n  // show-active-icon [string][yes|no|true|false]: show icon when option is active. Default :no.\n  'showActiveIcon : show-active-icon',\n  'olabel: label',\n  'active'\n];\n\nexport const DEFAULT_OUTPUTS_O_TABLE_OPTION = [\n  'onClick'\n];\n\n@Component({\n  moduleId: module.id,\n  selector: 'o-table-option',\n  template: `\n    <button [disabled]=\"!enabled\" type=\"button\" (click)=\"innerOnClick()\" mat-menu-item fxLayout=\"row\" fxLayoutAlign=\"start center\">\n      <mat-icon *ngIf=\"showActiveOptionIcon()\" svgIcon=\"ontimize:done\" fxLayout></mat-icon>\n      {{ olabel | oTranslate }}\n      <mat-icon *ngIf=\"icon\"> {{ icon }}</mat-icon>\n    </button>\n  `,\n  styles: [`\n\n  `],\n  inputs: DEFAULT_INPUTS_O_TABLE_OPTION,\n  outputs: DEFAULT_OUTPUTS_O_TABLE_OPTION,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    '[class.o-table-option]': 'true',\n  }\n})\n\nexport class OTableOptionComponent {\n\n  public static DEFAULT_INPUTS_O_TABLE_OPTION = DEFAULT_INPUTS_O_TABLE_OPTION;\n  public static DEFAULT_OUTPUTS_O_TABLE_OPTION = DEFAULT_OUTPUTS_O_TABLE_OPTION;\n  public static O_TABLE_OPTION_ACTIVE_CLASS = 'o-table-option-active';\n\n  onClick: EventEmitter<Object> = new EventEmitter<Object>();\n\n  oattr: string;\n  @InputConverter()\n  enabled: boolean = true;\n  icon: string;\n  olabel: string;\n  @InputConverter()\n  showActiveIcon: boolean = false;\n  @InputConverter()\n  active: boolean = false;\n\n  cd: ChangeDetectorRef;\n\n  constructor(\n    protected injector: Injector,\n    public elRef: ElementRef,\n    @Inject(forwardRef(() => OTableComponent)) protected table: OTableComponent\n  ) {\n    try {\n      this.cd = this.injector.get(ChangeDetectorRef);\n    } catch (e) {\n      // no parent form\n    }\n  }\n\n  innerOnClick() {\n    this.onClick.emit();\n    this.setActive(!this.active);\n  }\n\n  showActiveOptionIcon() {\n    return this.showActiveIcon && this.active;\n  }\n\n  setActive(val: boolean) {\n    this.active = val;\n    this.cd.detectChanges();\n  }\n\n}\n"]}
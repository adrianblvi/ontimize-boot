import { Component, EventEmitter, ViewEncapsulation, ViewChild, ViewContainerRef } from '@angular/core';
import { MatButtonToggle } from '@angular/material';
import { Util } from '../../utils';
export var DEFAULT_INPUTS_O_BUTTON_TOGGLE = [
    'oattr: attr',
    'label',
    'icon',
    'iconPosition: icon-position',
    'checked',
    'enabled',
    'value',
    'name'
];
export var DEFAULT_OUTPUTS_O_BUTTON_TOGGLE = [
    'onChange'
];
var OButtonToggleComponent = (function () {
    function OButtonToggleComponent(viewContainerRef) {
        this.viewContainerRef = viewContainerRef;
        this.DEFAULT_INPUTS_O_BUTTON_TOGGLE = DEFAULT_INPUTS_O_BUTTON_TOGGLE;
        this.DEFAULT_OUTPUTS_O_BUTTON_TOGGLE = DEFAULT_OUTPUTS_O_BUTTON_TOGGLE;
        this.iconPosition = 'before';
        this._checked = false;
        this._enabled = true;
        this.onChange = new EventEmitter();
    }
    Object.defineProperty(OButtonToggleComponent.prototype, "checked", {
        get: function () {
            return this._innerButtonToggle.checked;
        },
        set: function (val) {
            val = Util.parseBoolean(String(val));
            this._innerButtonToggle.checked = val;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(OButtonToggleComponent.prototype, "enabled", {
        get: function () {
            return !this._innerButtonToggle.disabled;
        },
        set: function (val) {
            val = Util.parseBoolean(String(val));
            this._innerButtonToggle.disabled = !val;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(OButtonToggleComponent.prototype, "value", {
        get: function () {
            return this._innerButtonToggle.value;
        },
        set: function (val) {
            this._innerButtonToggle.value = val;
        },
        enumerable: true,
        configurable: true
    });
    OButtonToggleComponent.decorators = [
        { type: Component, args: [{
                    moduleId: module.id,
                    selector: 'o-button-toggle',
                    template: "\n    <mat-button-toggle #bt [id]=\"oattr\" [name]=\"name\" [checked]=\"checked\" [disabled]=\"!enabled\" [value]=\"value\" (change)=\"onChange.emit($event)\">\n      <mat-icon *ngIf=\"icon && iconPosition==='before'\">{{ icon }}</mat-icon>\n      {{ label }}\n      <mat-icon *ngIf=\"icon && iconPosition==='after'\">{{ icon }}</mat-icon>\n    </mat-button-toggle>\n  ",
                    styles: ["\n    .o-button-toggle{display:inline-block}.o-button-toggle .mat-button-toggle{display:flex}\n  "],
                    inputs: DEFAULT_INPUTS_O_BUTTON_TOGGLE,
                    outputs: DEFAULT_OUTPUTS_O_BUTTON_TOGGLE,
                    encapsulation: ViewEncapsulation.None,
                    host: {
                        '[class.o-button-toggle]': 'true'
                    }
                },] },
    ];
    OButtonToggleComponent.ctorParameters = function () { return [
        { type: ViewContainerRef }
    ]; };
    OButtonToggleComponent.propDecorators = {
        _innerButtonToggle: [{ type: ViewChild, args: ['bt',] }]
    };
    return OButtonToggleComponent;
}());
export { OButtonToggleComponent };
//# sourceMappingURL=o-button-toggle.component.js.map
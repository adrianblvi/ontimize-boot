{"version":3,"file":"o-table-cell-editor-boolean.component.js","sourceRoot":"","sources":["../../../../../../../tmp/ontimize/components/table/column/cell-editor/boolean/o-table-cell-editor-boolean.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { ChangeDetectionStrategy, Component, Injector, TemplateRef, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { InputConverter } from '../../../../../decorators';\nimport { MatCheckboxChange } from '@angular/material';\nimport { OBaseTableCellEditor } from '../o-base-table-cell-editor.class';\nimport { Util } from '../../../../../utils';\n\nexport const DEFAULT_INPUTS_O_TABLE_CELL_EDITOR_BOOLEAN = [\n  ...OBaseTableCellEditor.DEFAULT_INPUTS_O_TABLE_CELL_EDITOR,\n  'indeterminateOnNull: indeterminate-on-null',\n  // true-value: true value. Default: true.\n  'trueValue: true-value',\n  // false-value: false value. Default: false.\n  'falseValue: false-value',\n  // boolean-type [number|boolean|string]: cellData value type. Default: boolean\n  'booleanType: boolean-type',\n  'autoCommit: auto-commit'\n];\n\nexport const DEFAULT_OUTPUTS_O_TABLE_CELL_EDITOR_BOOLEAN = [\n  ...OBaseTableCellEditor.DEFAULT_OUTPUTS_O_TABLE_CELL_EDITOR\n];\n\n@Component({\n  moduleId: module.id,\n  selector: 'o-table-cell-editor-boolean',\n  template: `\n    <ng-template #templateref let-cellvalue=\"cellvalue\" let-rowvalue=\"rowvalue\">\n      <div class=\"o-table-cell-editor-boolean\" [formGroup]=\"formGroup\">\n        <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"onChange($event)\" [indeterminate]=\"indeterminate\"\n          [formControl]=\"formControl\">\n        </mat-checkbox>\n      </div>\n    </ng-template>\n  `,\n  styles: [`\n    .o-table-cell-editor-boolean .mat-checkbox-ripple{display:none}\n  `],\n  inputs: DEFAULT_INPUTS_O_TABLE_CELL_EDITOR_BOOLEAN,\n  outputs: DEFAULT_OUTPUTS_O_TABLE_CELL_EDITOR_BOOLEAN,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    '[class.o-table-cell-editor-boolean]': 'true'\n  }\n})\n\nexport class OTableCellEditorBooleanComponent extends OBaseTableCellEditor {\n\n  public static DEFAULT_INPUTS_O_TABLE_CELL_EDITOR_BOOLEAN = DEFAULT_INPUTS_O_TABLE_CELL_EDITOR_BOOLEAN;\n  public static DEFAULT_OUTPUTS_O_TABLE_CELL_EDITOR_BOOLEAN = DEFAULT_OUTPUTS_O_TABLE_CELL_EDITOR_BOOLEAN;\n\n  @ViewChild('templateref', { read: TemplateRef }) public templateref: TemplateRef<any>;\n\n  indeterminate: boolean = false;\n\n  @InputConverter()\n  indeterminateOnNull: boolean = false;\n  trueValue: any;\n  falseValue: any;\n\n  booleanType: string = 'boolean';\n\n  @InputConverter()\n  autoCommit: boolean = true;\n\n  constructor(protected injector: Injector) {\n    super(injector);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.parseInputs();\n  }\n\n  protected parseInputs() {\n    switch (this.booleanType) {\n      case 'string':\n        this.parseStringInputs();\n        break;\n      case 'number':\n        this.parseNumberInputs();\n        break;\n      default:\n        this.trueValue = true;\n        this.falseValue = false;\n        break;\n    }\n  }\n\n  protected parseStringInputs() {\n    if ((this.trueValue || '').length === 0) {\n      this.trueValue = undefined;\n    }\n    if ((this.falseValue || '').length === 0) {\n      this.falseValue = undefined;\n    }\n  }\n\n  protected parseNumberInputs() {\n    this.trueValue = parseInt(this.trueValue);\n    if (isNaN(this.trueValue)) {\n      this.trueValue = 1;\n    }\n    this.falseValue = parseInt(this.falseValue);\n    if (isNaN(this.falseValue)) {\n      this.falseValue = 0;\n    }\n  }\n\n  startEdition(data: any) {\n    super.startEdition(data);\n    const self = this;\n    setTimeout(() => {\n      // using setTimeout to forcing this code execution after super.activateColumnEdition column.editing = true line\n      if (self.autoCommit) {\n        const isTrue = (self.formControl.value === self.trueValue);\n        self.formControl.setValue(isTrue ? self.falseValue : self.trueValue, { emitEvent: false });\n        self.commitEdition();\n      } else {\n        const isTrue = (self.formControl.value === self.trueValue);\n        self.formControl.setValue(isTrue ? self.trueValue : self.falseValue, { emitEvent: false });\n      }\n    }, 0);\n  }\n\n  getCellData() {\n    let cellData = super.getCellData();\n    this.indeterminate = this.indeterminateOnNull && !Util.isDefined(cellData);\n    if (!this.indeterminate) {\n      cellData = this.parseValueByType(cellData);\n    }\n    return cellData;\n  }\n\n  hasCellDataTrueValue(cellData: any): boolean {\n    let result: boolean = undefined;\n    if (Util.isDefined(cellData)) {\n      result = (cellData === this.trueValue);\n      if (this.booleanType === 'string' && !Util.isDefined(this.trueValue)) {\n        result = Util.parseBoolean(cellData, false);\n      }\n    }\n    return result;\n  }\n\n  protected parseValueByType(val: any): any {\n    let result = val;\n    const cellIsTrue = this.hasCellDataTrueValue(val);\n    let value = cellIsTrue ? this.trueValue : this.falseValue;\n    switch (this.booleanType) {\n      case 'string':\n        result = this.translateService.get(value);\n        break;\n      case 'number':\n        result = parseInt(value);\n        break;\n      default:\n        break;\n    }\n    return result;\n  }\n\n  onChange(arg: MatCheckboxChange) {\n    this.formControl.setValue(arg.checked ? this.trueValue : this.falseValue, { emitEvent: false });\n    this.commitEdition();\n  }\n}\n"]}
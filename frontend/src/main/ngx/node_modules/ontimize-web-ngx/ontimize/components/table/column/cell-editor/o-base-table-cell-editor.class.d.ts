import { EventEmitter, Injector, OnInit } from '@angular/core';
import { FormControl, FormGroup, ValidatorFn } from '@angular/forms';
import { OTranslateService, SnackBarService } from '../../../../services';
import { OTableComponent } from '../../o-table.component';
import { OTableColumnComponent } from '../o-table-column.component';
export declare class OBaseTableCellEditor implements OnInit {
    protected injector: Injector;
    static DEFAULT_INPUTS_O_TABLE_CELL_EDITOR: string[];
    static DEFAULT_OUTPUTS_O_TABLE_CELL_EDITOR: string[];
    protected translateService: OTranslateService;
    orequired: boolean;
    showPlaceHolder: boolean;
    olabel: string;
    updateRecordOnEdit: boolean;
    showNotificationOnEdit: boolean;
    protected _enabled: boolean;
    protected _tableColumn: OTableColumnComponent;
    protected _table: OTableComponent;
    protected _rowData: any;
    formControl: FormControl;
    controlArgs: any;
    formGroup: FormGroup;
    editionStarted: EventEmitter<Object>;
    editionCancelled: EventEmitter<Object>;
    editionCommitted: EventEmitter<Object>;
    onPostUpdateRecord: EventEmitter<Object>;
    editorCreated: EventEmitter<Object>;
    onDocumentKeyup(event: KeyboardEvent): void;
    inputRef: any;
    protected type: string;
    registerInColumn: boolean;
    protected snackBarService: SnackBarService;
    protected oldValue: any;
    constructor(injector: Injector);
    ngOnInit(): void;
    protected handleKeyup(event: KeyboardEvent): void;
    createFormControl(): void;
    registerEditor(): void;
    getCellData(): any;
    startEdition(data: any): void;
    endEdition(saveChanges: any): void;
    commitEdition(): void;
    tableColumn: OTableColumnComponent;
    readonly tableColumnAttr: string;
    table: OTableComponent;
    rowData: any;
    resolveValidators(): ValidatorFn[];
    hasError(error: string): boolean;
    hasErrorExclusive(error: string): boolean;
    getErrorValue(error: string, prop: string): string;
    onEscClicked(): void;
    protected isSilentControl(): boolean;
    getPlaceholder(): string;
    protected onUpdateSuccess(res: any): void;
    enabled: boolean;
    getFormControl(): FormControl;
}

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Component, ViewEncapsulation, ViewContainerRef, ViewChild, ComponentFactoryResolver, NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { OSharedModule } from '../../shared';
import { OBreadcrumbComponent } from '../../components';
import { InputConverter } from '../../decorators';
export var DEFAULT_INPUTS_O_FORM_CONTAINER = [
    'breadcrumb',
    'breadcrumbSeparator : breadcrumb-separator',
    'breadcrumbLabelColumns : breadcrumb-label-columns'
];
var OFormContainerComponent = (function () {
    function OFormContainerComponent(resolver) {
        this.resolver = resolver;
        this.breadcrumb = false;
        this.breadcrumbSeparator = ' ';
    }
    OFormContainerComponent.prototype.ngAfterViewInit = function () {
        this.breadcrumb = this.breadcrumb && this.form && !this.formMananger;
        if (this.breadcrumb) {
            this.createBreadcrumb(this.breadContainer);
        }
    };
    OFormContainerComponent.prototype.setForm = function (form) {
        this.form = form;
        this.formMananger = form.getFormManager();
    };
    OFormContainerComponent.prototype.createBreadcrumb = function (container) {
        var factory = this.resolver.resolveComponentFactory(OBreadcrumbComponent);
        var ref = container.createComponent(factory);
        ref.instance._formRef = this.form;
        ref.instance.labelColumns = this.breadcrumbLabelColumns;
        ref.instance.separator = this.breadcrumbSeparator;
    };
    OFormContainerComponent.decorators = [
        { type: Component, args: [{
                    moduleId: module.id,
                    selector: 'o-form-container',
                    template: "\n    <div class=\"o-form-container-content\">\n      <ng-template #breadcrumb></ng-template>\n      <ng-content></ng-content>\n    </div>\n  ",
                    styles: ["\n    .application-layout-content-wrapper .o-form-container{position:relative;width:100%;height:100%;display:block}.application-layout-content-wrapper .o-form-container .o-form-container-content{display:flex;flex:auto;flex-direction:column;max-height:100%}.application-layout-content-wrapper .o-form-container .o-form-container-content>.o-breadcrumb{padding-left:8px;padding-right:8px}\n  "],
                    inputs: DEFAULT_INPUTS_O_FORM_CONTAINER,
                    encapsulation: ViewEncapsulation.None,
                    host: {
                        '[class.o-form-container]': 'true',
                        '[class.breadcrumb]': 'breadcrumb'
                    }
                },] },
    ];
    OFormContainerComponent.ctorParameters = function () { return [
        { type: ComponentFactoryResolver }
    ]; };
    OFormContainerComponent.propDecorators = {
        breadContainer: [{ type: ViewChild, args: ['breadcrumb', { read: ViewContainerRef },] }]
    };
    __decorate([
        InputConverter(),
        __metadata("design:type", Boolean)
    ], OFormContainerComponent.prototype, "breadcrumb", void 0);
    return OFormContainerComponent;
}());
export { OFormContainerComponent };
var OFormContainerModule = (function () {
    function OFormContainerModule() {
    }
    OFormContainerModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [OFormContainerComponent],
                    imports: [OSharedModule, CommonModule],
                    entryComponents: [OBreadcrumbComponent],
                    exports: [OFormContainerComponent]
                },] },
    ];
    return OFormContainerModule;
}());
export { OFormContainerModule };
//# sourceMappingURL=o-form-container.component.js.map
{"version":3,"file":"o-grid-item.component.js","sourceRoot":"","sources":["../../../../../tmp/ontimize/components/grid/grid-item/o-grid-item.component.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAE,YAAY,EAAE,MAAM,iBAAiB,CAAC;AAC/C,OAAO,EAAE,SAAS,EAAE,UAAU,EAAE,YAAY,EAAE,UAAU,EAAE,YAAY,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAE,MAAM,eAAe,CAAC;AAC5J,OAAO,EAAE,aAAa,EAAE,MAAM,iBAAiB,CAAC;AAChD,OAAO,EAAE,KAAK,EAAE,iBAAiB,EAAE,MAAM,gBAAgB,CAAC;AAC1D,OAAO,EAAE,cAAc,EAAE,MAAM,6BAA6B,CAAC;AAC7D,OAAO,EAAE,cAAc,EAAE,MAAM,qBAAqB,CAAC;AAErD,MAAM,CAAC,IAAM,0BAA0B,GAAG;IACxC,SAAS;IACT,SAAS;CACV,CAAC;AAEF;IA4BE,4BACS,GAAe,EACd,QAAkB,EACmC,KAAqB;QAF3E,QAAG,GAAH,GAAG,CAAY;QACd,aAAQ,GAAR,QAAQ,CAAU;QACmC,UAAK,GAAL,KAAK,CAAgB;QAZpF,YAAO,GAAsB,IAAI,YAAY,EAAE,CAAC;QAChD,kBAAa,GAAsB,IAAI,YAAY,EAAE,CAAC;QAItD,YAAO,GAAW,CAAC,CAAC;QAEpB,YAAO,GAAW,CAAC,CAAC;IAKoE,CAAC;IAIzF,yCAAY,GADZ;QAEE,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU,KAAK,KAAK,CAAC,gBAAgB,EAAE;YACpD,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;SAC5E;IACH,CAAC;IAED,0CAAa,GAAb,UAAc,CAAS;QACrB,iBAAiB,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;IACjD,CAAC;IAED,gDAAmB,GAAnB,UAAoB,CAAS;QAC3B,iBAAiB,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;IACvD,CAAC;IAEM,oCAAO,GAAd,UAAe,MAA0C;QACvD,OAAO,iBAAiB,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;IAC3D,CAAC;IAEM,0CAAa,GAApB,UAAqB,MAA0C;QAC7D,OAAO,iBAAiB,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;IACjE,CAAC;IAED,wCAAW,GAAX,UAAY,IAAI;QACd,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACnB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;SACvB;IACH,CAAC;IAED,wCAAW,GAAX;QACE,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;;gBAjEF,SAAS,SAAC;oBACT,QAAQ,EAAE,MAAM,CAAC,EAAE;oBACnB,QAAQ,EAAE,aAAa;oBACvB,QAAQ,EAAE,2FAIT;oBACD,MAAM,EAAE,0BAA0B;oBAClC,IAAI,EAAE;wBACJ,qBAAqB,EAAE,MAAM;wBAC7B,SAAS,EAAE,uBAAuB;wBAClC,YAAY,EAAE,6BAA6B;qBAC5C;iBAEF;;;gBA1BmB,UAAU;gBAAsE,QAAQ;gBAGnG,cAAc,uBAuClB,QAAQ,YAAI,MAAM,SAAC,UAAU,CAAC,cAAM,OAAA,cAAc,EAAd,CAAc,CAAC;;;2BATrD,SAAS,SAAC,WAAW;+BAYrB,YAAY,SAAC,YAAY;;IAV1B;QADC,cAAc,EAAE;;uDACG;IAEpB;QADC,cAAc,EAAE;;uDACG;IAyCtB,yBAAC;CAAA,AAnED,IAmEC;SAnDY,kBAAkB;AAsD/B;IAAA;IAQA,CAAC;;gBARA,QAAQ,SAAC;oBACR,YAAY,EAAE,CAAC,kBAAkB,CAAC;oBAClC,OAAO,EAAE,CAAC,YAAY,EAAE,aAAa,CAAC;oBACtC,OAAO,EAAE,CAAC,kBAAkB,CAAC;iBAC9B;;IAID,sBAAC;CAAA,AARD,IAQC;SAFY,eAAe","sourcesContent":["import { CommonModule } from '@angular/common';\nimport { Component, ElementRef, EventEmitter, forwardRef, HostListener, Inject, NgModule, Optional, Renderer, TemplateRef, ViewChild } from '@angular/core';\nimport { OSharedModule } from '../../../shared';\nimport { Codes, ObservableWrapper } from '../../../utils';\nimport { OGridComponent } from '../../grid/o-grid.component';\nimport { InputConverter } from '../../../decorators';\n\nexport const DEFAULT_INPUTS_O_GRID_ITEM = [\n  'colspan',\n  'rowspan'\n];\n\n@Component({\n  moduleId: module.id,\n  selector: 'o-grid-item',\n  template: `\n    <ng-template #templateref>\n      <ng-content></ng-content>\n    </ng-template>\n  `,\n  inputs: DEFAULT_INPUTS_O_GRID_ITEM,\n  host: {\n    '[class.o-grid-item]': 'true',\n    '(click)': 'onItemClicked($event)',\n    '(dblclick)': 'onItemDoubleClicked($event)'\n  },\n\n})\nexport class OGridItemComponent {\n\n  modelData: Object;\n  mdClick: EventEmitter<any> = new EventEmitter();\n  mdDoubleClick: EventEmitter<any> = new EventEmitter();\n\n  @ViewChild(TemplateRef) public template: TemplateRef<any>;\n  @InputConverter()\n  colspan: number = 1;\n  @InputConverter()\n  rowspan: number = 1;\n\n  constructor(\n    public _el: ElementRef,\n    private renderer: Renderer,\n    @Optional() @Inject(forwardRef(() => OGridComponent)) public _grid: OGridComponent) { }\n\n\n  @HostListener('mouseenter')\n  onMouseEnter() {\n    if (this._grid.detailMode !== Codes.DETAIL_MODE_NONE) {\n      this.renderer.setElementStyle(this._el.nativeElement, 'cursor', 'pointer');\n    }\n  }\n\n  onItemClicked(e?: Event) {\n    ObservableWrapper.callEmit(this.mdClick, this);\n  }\n\n  onItemDoubleClicked(e?: Event) {\n    ObservableWrapper.callEmit(this.mdDoubleClick, this);\n  }\n\n  public onClick(onNext: (item: OGridItemComponent) => void): Object {\n    return ObservableWrapper.subscribe(this.mdClick, onNext);\n  }\n\n  public onDoubleClick(onNext: (item: OGridItemComponent) => void): Object {\n    return ObservableWrapper.subscribe(this.mdDoubleClick, onNext);\n  }\n\n  setItemData(data) {\n    if (!this.modelData) {\n      this.modelData = data;\n    }\n  }\n\n  getItemData() {\n    return this.modelData;\n  }\n\n}\n\n\n@NgModule({\n  declarations: [OGridItemComponent],\n  imports: [CommonModule, OSharedModule],\n  exports: [OGridItemComponent]\n})\n\nexport class OGridItemModule {\n\n}\n"]}
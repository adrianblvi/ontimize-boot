{"version":3,"file":"o-form-service-component.class.js","sourceRoot":"","sources":["../../../../tmp/ontimize/components/input/o-form-service-component.class.ts"],"names":[],"mappings":"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","sourcesContent":["import { ElementRef, EventEmitter, Injector, NgZone } from '@angular/core';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { Observable } from 'rxjs';\n\nimport { InputConverter } from '../../decorators';\nimport { DialogService, OntimizeService } from '../../services';\nimport { Codes, Util } from '../../utils';\nimport { OFormComponent } from '../form/o-form.component';\nimport { IFormValueOptions } from '../form/OFormValue';\nimport {\n  DEFAULT_INPUTS_O_FORM_DATA_COMPONENT,\n  DEFAULT_OUTPUTS_O_FORM_DATA_COMPONENT,\n  OFormDataComponent,\n} from '../o-form-data-component.class';\nimport { ServiceUtils } from '../service.utils';\n\nexport const DEFAULT_INPUTS_O_FORM_SERVICE_COMPONENT = [\n  ...DEFAULT_INPUTS_O_FORM_DATA_COMPONENT,\n  // static-data [Array<any>] : way to populate with static data. Default: no value.\n  'staticData: static-data',\n  'entity',\n  'service',\n  'columns',\n  'valueColumn: value-column',\n  'valueColumnType: value-column-type',\n  'parentKeys: parent-keys',\n  // Visible columns into selection dialog from parameter 'columns'. With empty parameter all columns are visible.\n  'visibleColumns: visible-columns',\n  // Visible columns in text field. By default, it is the parameter value of visible columns.\n  'descriptionColumns: description-columns',\n\n  'separator',\n\n  'queryOnInit: query-on-init',\n  'queryOnBind: query-on-bind',\n  'queryOnEvent: query-on-event',\n\n  // query-method [string]: name of the service method to perform queries. Default: query.\n  'queryMethod: query-method',\n\n  'serviceType: service-type',\n\n  // query-with-null-parent-keys [string][yes|no|true|false]: Indicates whether or not to trigger query method when parent-keys filter is null. Default: false\n  'queryWithNullParentKeys: query-with-null-parent-keys',\n\n  // set-value-on-value-change [string]: Form component attributes whose value will be set when the value of the current component changes due to user interaction. Separated by ';'. Accepted format: attr | columnName:attr\n  'setValueOnValueChange: set-value-on-value-change'\n];\n\nexport const DEFAULT_OUTPUTS_O_FORM_SERVICE_COMPONENT = [\n  ...DEFAULT_OUTPUTS_O_FORM_DATA_COMPONENT,\n  'onSetValueOnValueChange',\n  'onDataLoaded'\n];\n\nexport class OFormServiceComponent extends OFormDataComponent {\n\n  public static DEFAULT_INPUTS_O_FORM_SERVICE_COMPONENT = DEFAULT_INPUTS_O_FORM_SERVICE_COMPONENT;\n  public static DEFAULT_OUTPUTS_O_FORM_SERVICE_COMPONENT = DEFAULT_OUTPUTS_O_FORM_SERVICE_COMPONENT;\n\n  /* Inputs */\n  protected staticData: Array<any>;\n  protected entity: string;\n  protected service: string;\n  protected columns: string;\n  protected valueColumn: string;\n  protected valueColumnType: string = Codes.TYPE_INT;\n  protected parentKeys: string;\n  protected visibleColumns: string;\n  protected descriptionColumns: string;\n  protected separator: string = Codes.SPACE_SEPARATOR;\n  @InputConverter()\n  protected queryOnInit: boolean = true;\n  @InputConverter()\n  protected queryOnBind: boolean = false;\n  protected queryOnEvent: any;\n  protected queryMethod: string = Codes.QUERY_METHOD;\n  protected serviceType: string;\n  @InputConverter()\n  queryWithNullParentKeys: boolean = false;\n  public setValueOnValueChange: string;\n\n  /* Outputs */\n  public onSetValueOnValueChange: EventEmitter<Object> = new EventEmitter<Object>();\n  public onDataLoaded: EventEmitter<Object> = new EventEmitter<Object>();\n\n  /* Internal variables */\n  protected dataArray: any[] = [];\n  protected colArray: string[] = [];\n  protected visibleColArray: string[] = [];\n  protected descriptionColArray: string[] = [];\n  protected dataService: OntimizeService;\n  public loaderSubscription: Subscription;\n  loading: boolean = false;\n\n  protected querySuscription: Subscription;\n  protected cacheQueried: boolean = false;\n  protected _pKeysEquiv = {};\n  protected _setValueOnValueChangeEquiv = {};\n  protected _formDataSubcribe;\n  protected _currentIndex;\n  protected dialogService: DialogService;\n\n  protected queryOnEventSubscription: Subscription;\n  public delayLoad = 250;\n  public loadingSubject = new BehaviorSubject<boolean>(false);\n\n  constructor(\n    form: OFormComponent,\n    elRef: ElementRef,\n    injector: Injector\n  ) {\n    super(form, elRef, injector);\n    this.form = form;\n    this.elRef = elRef;\n    this.dialogService = injector.get(DialogService);\n  }\n\n  initialize() {\n    super.initialize();\n\n    this.cacheQueried = false;\n    this.colArray = Util.parseArray(this.columns, true);\n\n    this.visibleColArray = Util.parseArray(this.visibleColumns, true);\n    if (Util.isArrayEmpty(this.visibleColArray)) {\n      // It is necessary to assing value to visibleColumns to propagate the parameter.\n      this.visibleColumns = this.columns;\n      this.visibleColArray = this.colArray;\n    }\n\n    this.descriptionColArray = Util.parseArray(this.descriptionColumns);\n    if (Util.isArrayEmpty(this.descriptionColArray)) {\n      this.descriptionColArray = this.visibleColArray;\n    }\n\n    let pkArray = Util.parseArray(this.parentKeys);\n    this._pKeysEquiv = Util.parseParentKeysEquivalences(pkArray);\n\n    let setValueSetArray = Util.parseArray(this.setValueOnValueChange);\n    this._setValueOnValueChangeEquiv = Util.parseParentKeysEquivalences(setValueSetArray);\n\n    if (this.form && this.queryOnBind) {\n      const self = this;\n      this._formDataSubcribe = this.form.onDataLoaded.subscribe(() => self.queryData());\n    }\n\n    if (this.staticData) {\n      this.queryOnBind = false;\n      this.queryOnInit = false;\n      this.setDataArray(this.staticData);\n    } else {\n      this.configureService();\n    }\n\n    if (this.queryOnEvent !== undefined && this.queryOnEvent.subscribe !== undefined) {\n      const self = this;\n      this.queryOnEventSubscription = this.queryOnEvent.subscribe((value) => {\n        if (Util.isDefined(value) || this.queryWithNullParentKeys) {\n          self.queryData();\n        }\n      });\n    }\n  }\n\n  destroy() {\n    super.destroy();\n    if (this._formDataSubcribe) {\n      this._formDataSubcribe.unsubscribe();\n    }\n    if (this.queryOnEventSubscription) {\n      this.queryOnEventSubscription.unsubscribe();\n    }\n    if (this.loaderSubscription) {\n      this.loaderSubscription.unsubscribe();\n    }\n  }\n\n  protected emitOnValueChange(type, newValue, oldValue) {\n    super.emitOnValueChange(type, newValue, oldValue);\n    // Set value for 'set-value-on-value-change' components\n    let record = this.getSelectedRecord();\n    this.onSetValueOnValueChange.emit(record);\n    let setValueSetKeys = Object.keys(this._setValueOnValueChangeEquiv);\n    if (setValueSetKeys.length) {\n      let formComponents = this.form.getComponents();\n      if (Util.isDefined(record)) {\n        setValueSetKeys.forEach(key => {\n          let comp = formComponents[this._setValueOnValueChangeEquiv[key]];\n          if (Util.isDefined(comp)) {\n            comp.setValue(record[key]);\n          }\n        });\n      }\n    }\n  }\n\n  /* Utility methods */\n  configureService() {\n    let loadingService: any = OntimizeService;\n    if (this.serviceType) {\n      loadingService = this.serviceType;\n    }\n    try {\n      this.dataService = this.injector.get(loadingService);\n\n      if (Util.isDataService(this.dataService)) {\n        let serviceCfg = this.dataService.getDefaultServiceConfiguration(this.service);\n        if (this.entity) {\n          serviceCfg['entity'] = this.entity;\n        }\n        this.dataService.configureService(serviceCfg);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  getAttributesValuesToQuery(columns?: Array<any>) {\n    let result = Util.isDefined(columns) ? columns : this.colArray;\n    if (result.indexOf(this.valueColumn) === -1) {\n      result.push(this.valueColumn);\n    }\n    return result;\n  }\n\n  queryData(filter: any = undefined) {\n    const self = this;\n    if (!this.dataService || !(this.queryMethod in this.dataService) || !this.entity) {\n      console.warn('Service not properly configured! aborting query');\n      return;\n    }\n    filter = Object.assign(filter || {}, ServiceUtils.getParentKeysFromForm(this._pKeysEquiv, this.form));\n    if (!ServiceUtils.filterContainsAllParentKeys(filter, this._pKeysEquiv) && !this.queryWithNullParentKeys) {\n      this.setDataArray([]);\n    } else {\n      if (this.querySuscription) {\n        this.querySuscription.unsubscribe();\n      }\n      if (this.loaderSubscription) {\n        this.loaderSubscription.unsubscribe();\n      }\n\n      const queryCols = this.getAttributesValuesToQuery();\n\n      this.loaderSubscription = this.load();\n      this.querySuscription = this.dataService[this.queryMethod](filter, queryCols, this.entity).subscribe(resp => {\n        if (resp.code === Codes.ONTIMIZE_SUCCESSFUL_CODE) {\n          self.cacheQueried = true;\n          self.setDataArray(resp.data);\n        }\n        //window.setTimeout(() => { this.loading = false; self.loadingSubject.next(false); self.loaderSubscription.unsubscribe(); }, 10000);\n        self.loadingSubject.next(false);\n        self.loaderSubscription.unsubscribe();\n      }, err => {\n        console.error(err);\n        self.loadingSubject.next(false);\n        self.loaderSubscription.unsubscribe();\n        if (err && !Util.isObject(err)) {\n          this.dialogService.alert('ERROR', err);\n        } else {\n          this.dialogService.alert('ERROR', 'MESSAGES.ERROR_QUERY');\n        }\n      });\n    }\n  }\n\n  getDataArray(): any[] {\n    return this.dataArray;\n  }\n\n  setDataArray(data: any): void {\n    if (Util.isArray(data)) {\n      this.dataArray = data;\n      this.syncDataIndex(false);\n    } else if (Util.isObject(data) && Object.keys(data).length > 0) {\n      this.dataArray = [data];\n    } else {\n      console.warn('Component has received not supported service data. Supported data are Array or not empty Object');\n      this.dataArray = [];\n    }\n    this.onDataLoaded.emit(this.dataArray);\n  }\n\n  syncDataIndex(queryIfNotFound: boolean = true) {\n    this._currentIndex = undefined;\n    if (this.value && this.value.value && this.dataArray) {\n      const self = this;\n      this.dataArray.forEach((item, index) => {\n        if (this.value.value instanceof Array) {\n          this._currentIndex = [];\n          this.value.value.forEach((itemValue, indexValue) => {\n            if (item[self.valueColumn] === itemValue) {\n              this._currentIndex[this._currentIndex.length] = indexValue;\n            }\n          });\n        } else if (item[self.valueColumn] === this.value.value) {\n          self._currentIndex = index;\n        }\n        if (item[self.valueColumn] === this.value.value) {\n          self._currentIndex = index;\n        }\n      });\n\n      if (this._currentIndex === undefined && queryIfNotFound) {\n        if (this.queryOnBind && this.dataArray && this.dataArray.length === 0\n          && !this.cacheQueried && !this.isEmpty()) {\n          this.queryData();\n        }\n        return;\n      }\n    }\n  }\n\n  protected parseByValueColumnType(val: any) {\n    let value = val;\n\n    if (this.valueColumnType === Codes.TYPE_INT) {\n      const parsed = parseInt(value);\n      if (!isNaN(parsed)) {\n        value = parsed;\n      }\n    }\n    return value;\n  }\n\n  setValue(val: any, options?: IFormValueOptions) {\n    const value = this.parseByValueColumnType(val);\n    super.setValue(value, options);\n  }\n\n  setData(val: any) {\n    const value = this.parseByValueColumnType(val);\n    super.setData(value);\n  }\n\n  getSelectedRecord() {\n    let result = undefined;\n    const selectedValue = this.getValue();\n    if (Util.isDefined(selectedValue)) {\n      result = this.getDataArray().find(item => item[this.valueColumn] === selectedValue);\n    }\n    return result;\n  }\n\n  load(): any {\n    var self = this;\n    var zone = this.injector.get(NgZone);\n    var loadObservable = new Observable(observer => {\n      var timer = window.setTimeout(() => {\n        observer.next(true);\n      }, self.delayLoad);\n\n      return () => {\n        window.clearTimeout(timer);\n        zone.run(() => {\n          observer.next(false);\n          self.loading = false;\n        });\n      };\n\n    });\n    var subscription = loadObservable.subscribe(val => {\n      zone.run(() => {\n        self.loading = val as boolean;\n        self.loadingSubject.next(val as boolean);\n      });\n    });\n    return subscription;\n  }\n\n  onFormControlChange(value: any) {\n    if (this.oldValue === value) {\n      return;\n    }\n    super.onFormControlChange(value);\n  }\n\n}\n"]}
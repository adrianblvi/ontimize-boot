var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { SelectionModel } from '@angular/cdk/collections';
import { CommonModule } from '@angular/common';
import { Component, ContentChildren, ElementRef, EventEmitter, forwardRef, Inject, Injector, NgModule, Optional, QueryList, ViewEncapsulation } from '@angular/core';
import { MatCheckbox } from '@angular/material';
import { RouterModule } from '@angular/router';
import { merge, Subscription } from 'rxjs';
import { InputConverter } from '../../decorators';
import { OntimizeService } from '../../services';
import { dataServiceFactory } from '../../services/data-service.provider';
import { OSharedModule } from '../../shared';
import { ObservableWrapper } from '../../util/async';
import { Codes, Util } from '../../utils';
import { OFormComponent } from '../form/o-form.component';
import { OSearchInputModule } from '../input/search-input/o-search-input.component';
import { OServiceComponent } from '../o-service-component.class';
import { ServiceUtils } from '../service.utils';
import { OListItemComponent, OListItemModule } from './list-item/o-list-item.component';
import { OListItemDirective } from './list-item/o-list-item.directive';
export var DEFAULT_INPUTS_O_LIST = OServiceComponent.DEFAULT_INPUTS_O_SERVICE_COMPONENT.concat([
    'quickFilterColumns: quick-filter-columns',
    'refreshButton: refresh-button',
    'route',
    'selectable',
    'odense : dense',
    'deleteButton: delete-button',
    'sortColumns: sort-columns',
    'insertButtonPosition:insert-button-position',
    'insertButtonFloatable:insert-button-floatable'
]);
export var DEFAULT_OUTPUTS_O_LIST = [
    'onClick',
    'onDoubleClick',
    'onInsertButtonClick',
    'onItemDeleted',
    'onDataLoaded',
    'onPaginatedDataLoaded'
];
var Éµ0 = dataServiceFactory;
var OListComponent = (function (_super) {
    __extends(OListComponent, _super);
    function OListComponent(injector, elRef, form) {
        var _this = _super.call(this, injector, elRef, form) || this;
        _this.refreshButton = true;
        _this.selectable = false;
        _this.odense = false;
        _this.deleteButton = true;
        _this.insertButtonFloatable = true;
        _this.sortColArray = [];
        _this.onClick = new EventEmitter();
        _this.onDoubleClick = new EventEmitter();
        _this.onInsertButtonClick = new EventEmitter();
        _this.onItemDeleted = new EventEmitter();
        _this.onDataLoaded = new EventEmitter();
        _this.onPaginatedDataLoaded = new EventEmitter();
        _this.selection = new SelectionModel(true, []);
        _this.enabledDeleteButton = false;
        _this.insertButtonPosition = 'bottom';
        _this.dataResponseArray = [];
        _this.storePaginationState = false;
        _this.subscription = new Subscription();
        return _this;
    }
    OListComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.initialize();
        this.subscription.add(this.selection.changed.subscribe(function () { return _this.enabledDeleteButton = !_this.selection.isEmpty(); }));
    };
    OListComponent.prototype.ngAfterViewInit = function () {
        _super.prototype.afterViewInit.call(this);
        this.parseSortColumns();
        this.filterCaseSensitive = this.state.hasOwnProperty('filter-case-sensitive') ?
            this.state['filter-case-sensitive'] : this.filterCaseSensitive;
        if (Util.isDefined(this.searchInputComponent)) {
            this.registerQuickFilter(this.searchInputComponent);
        }
    };
    OListComponent.prototype.ngAfterContentInit = function () {
        var _this = this;
        this.setListItemsData();
        this.listItemComponents.changes.subscribe(function () { return _this.setListItemsData(); });
        this.setListItemDirectivesData();
        this.listItemDirectives.changes.subscribe(function () { return _this.setListItemDirectivesData(); });
    };
    OListComponent.prototype.ngOnDestroy = function () {
        this.destroy();
        this.subscription.unsubscribe();
    };
    OListComponent.prototype.ngOnChanges = function (changes) {
        if (typeof (changes['staticData']) !== 'undefined') {
            this.dataResponseArray = changes['staticData'].currentValue;
            var filter = (this.state && this.state.filterValue) ? this.state.filterValue : undefined;
            this.filterData(filter);
        }
    };
    OListComponent.prototype.getComponentKey = function () {
        return 'OListComponent_' + this.oattr;
    };
    OListComponent.prototype.initialize = function () {
        _super.prototype.initialize.call(this);
        if (this.staticData && this.staticData.length) {
            this.dataResponseArray = this.staticData;
        }
        if (!Util.isDefined(this.quickFilterColumns)) {
            this.quickFilterColumns = this.columns;
        }
        this.quickFilterColArray = Util.parseArray(this.quickFilterColumns, true);
        var initialQueryLength;
        if (this.state.hasOwnProperty('queryRecordOffset')) {
            initialQueryLength = this.state.queryRecordOffset;
        }
        this.state.queryRecordOffset = 0;
        if (!this.state.hasOwnProperty('totalQueryRecordsNumber')) {
            this.state.totalQueryRecordsNumber = 0;
        }
        if (this.queryOnInit) {
            var queryArgs = {
                offset: 0,
                length: initialQueryLength || this.queryRows
            };
            this.queryData(void 0, queryArgs);
        }
    };
    OListComponent.prototype.reinitialize = function (options) {
        _super.prototype.reinitialize.call(this, options);
    };
    OListComponent.prototype.registerListItemDirective = function (item) {
        var _this = this;
        if (item) {
            item.onClick(function (directiveItem) { return _this.onItemDetailClick(directiveItem); });
            item.onDoubleClick(function (directiveItem) { return _this.onItemDetailDoubleClick(directiveItem); });
        }
    };
    OListComponent.prototype.getDense = function () {
        return this.odense;
    };
    OListComponent.prototype.onListItemClicked = function (onNext) {
        return ObservableWrapper.subscribe(this.onClick, onNext);
    };
    OListComponent.prototype.onItemDetailClick = function (item) {
        var data = item.getItemData();
        if (this.oenabled && this.detailMode === Codes.DETAIL_MODE_CLICK) {
            this.saveDataNavigationInLocalStorage();
            this.viewDetail(data);
        }
        ObservableWrapper.callEmit(this.onClick, data);
    };
    OListComponent.prototype.onItemDetailDoubleClick = function (item) {
        var data = item.getItemData();
        if (this.oenabled && Codes.isDoubleClickMode(this.detailMode)) {
            this.saveDataNavigationInLocalStorage();
            this.viewDetail(data);
        }
        ObservableWrapper.callEmit(this.onDoubleClick, data);
    };
    OListComponent.prototype.getDataToStore = function () {
        var dataToStore = _super.prototype.getDataToStore.call(this);
        if (!this.storePaginationState) {
            delete dataToStore['queryRecordOffset'];
        }
        if (this.quickFilter && Util.isDefined(this.quickFilterComponent)) {
            dataToStore['quickFilterActiveColumns'] = this.quickFilterComponent.getActiveColumns().join(Codes.ARRAY_INPUT_SEPARATOR);
        }
        dataToStore['filter-case-sensitive'] = this.isFilterCaseSensitive();
        return dataToStore;
    };
    OListComponent.prototype.reloadData = function () {
        var queryArgs = {};
        if (this.pageable) {
            this.state.queryRecordOffset = 0;
            queryArgs = {
                length: Math.max(this.queryRows, this.dataResponseArray.length),
                replace: true
            };
        }
        if (this.selectable) {
            this.clearSelection();
            this.state.selectedIndexes = [];
        }
        this.queryData(void 0, queryArgs);
    };
    OListComponent.prototype.reloadPaginatedDataFromStart = function () {
        this.dataResponseArray = [];
        this.reloadData();
    };
    OListComponent.prototype.filterData = function (value, loadMore) {
        if (this.state) {
            this.state.filterValue = value;
        }
        if (this.pageable) {
            var queryArgs = {
                offset: 0,
                length: this.queryRows,
                replace: true
            };
            this.queryData(void 0, queryArgs);
        }
        else if (value && value.length > 0 && this.dataResponseArray && this.dataResponseArray.length > 0) {
            var self_1 = this;
            var caseSensitive_1 = this.isFilterCaseSensitive();
            var filteredData = this.dataResponseArray.filter(function (item) {
                return self_1.getQuickFilterColumns().some(function (col) {
                    var regExpStr = Util.escapeSpecialCharacter(Util.normalizeString(value, !caseSensitive_1));
                    return new RegExp(regExpStr).test(Util.normalizeString(item[col] + '', !caseSensitive_1));
                });
            });
            this.setDataArray(filteredData);
        }
        else {
            this.setDataArray(this.dataResponseArray);
        }
    };
    OListComponent.prototype.isItemSelected = function (item) {
        return this.selection.isSelected(item);
    };
    OListComponent.prototype.updateSelectedState = function (item, isSelected) {
        var selectedIndexes = this.state.selectedIndexes || [];
        var itemIndex = this.dataResponseArray.indexOf(item);
        if (isSelected && selectedIndexes.indexOf(itemIndex) === -1) {
            selectedIndexes.push(itemIndex);
        }
        else if (!isSelected) {
            selectedIndexes.splice(selectedIndexes.indexOf(itemIndex), 1);
        }
        this.state.selectedIndexes = selectedIndexes;
    };
    OListComponent.prototype.onScroll = function (e) {
        if (this.pageable) {
            var pendingRegistries = this.dataResponseArray.length < this.state.totalQueryRecordsNumber;
            if (!this.loadingSubject.value && pendingRegistries) {
                var element = e.target;
                if (element.offsetHeight + element.scrollTop + 5 >= element.scrollHeight) {
                    var queryArgs = {
                        offset: this.state.queryRecordOffset,
                        length: this.queryRows
                    };
                    this.queryData(void 0, queryArgs);
                }
            }
        }
    };
    OListComponent.prototype.remove = function (clearSelectedItems) {
        var _this = this;
        if (clearSelectedItems === void 0) { clearSelectedItems = false; }
        var selectedItems = this.getSelectedItems();
        if (selectedItems.length > 0) {
            this.dialogService.confirm('CONFIRM', 'MESSAGES.CONFIRM_DELETE').then(function (res) {
                if (res === true) {
                    if (_this.dataService && (_this.deleteMethod in _this.dataService) && _this.entity && (_this.keysArray.length > 0)) {
                        var filters = ServiceUtils.getArrayProperties(selectedItems, _this.keysArray);
                        merge(filters.map((function (kv) { return _this.dataService[_this.deleteMethod](kv, _this.entity); }))).subscribe(function (obs) { return obs.subscribe(function () {
                            ObservableWrapper.callEmit(_this.onItemDeleted, selectedItems);
                        }, function (error) {
                            _this.dialogService.alert('ERROR', 'MESSAGES.ERROR_DELETE');
                        }, function () {
                            _this.reloadData();
                        }); });
                    }
                    else {
                        _this.deleteLocalItems();
                    }
                }
                else if (clearSelectedItems) {
                    _this.clearSelection();
                }
            });
        }
    };
    OListComponent.prototype.add = function (e) {
        this.onInsertButtonClick.emit(e);
        _super.prototype.insertDetail.call(this);
    };
    OListComponent.prototype.parseSortColumns = function () {
        var sortColumnsParam = this.state['sort-columns'] || this.sortColumns;
        this.sortColArray = ServiceUtils.parseSortColumns(sortColumnsParam);
    };
    OListComponent.prototype.getQueryArguments = function (filter, ovrrArgs) {
        var queryArguments = _super.prototype.getQueryArguments.call(this, filter, ovrrArgs);
        if (this.pageable) {
            queryArguments[6] = this.sortColArray;
        }
        return queryArguments;
    };
    OListComponent.prototype.setListItemsData = function () {
        var _this = this;
        this.listItemComponents.forEach(function (element, index) { return element.setItemData(_this.dataResponseArray[index]); });
    };
    OListComponent.prototype.setListItemDirectivesData = function () {
        var self = this;
        this.listItemDirectives.forEach(function (element, index) {
            element.setItemData(self.dataResponseArray[index]);
            element.setListComponent(self);
            self.registerListItemDirective(element);
        });
    };
    OListComponent.prototype.saveDataNavigationInLocalStorage = function () {
        _super.prototype.saveDataNavigationInLocalStorage.call(this);
        this.storePaginationState = true;
    };
    OListComponent.prototype.setData = function (data, sqlTypes, replace) {
        if (Util.isArray(data)) {
            var respDataArray = data;
            if (this.pageable && !replace) {
                respDataArray = (this.dataResponseArray || []).concat(data);
            }
            var selectedIndexes = this.state.selectedIndexes || [];
            for (var _i = 0, selectedIndexes_1 = selectedIndexes; _i < selectedIndexes_1.length; _i++) {
                var selIndex = selectedIndexes_1[_i];
                if (selIndex < this.dataResponseArray.length) {
                    this.selection.select(this.dataResponseArray[selIndex]);
                }
            }
            this.dataResponseArray = respDataArray;
            if (!this.pageable) {
                this.filterData(this.state.filterValue);
            }
            else {
                this.setDataArray(this.dataResponseArray);
            }
        }
        else {
            this.setDataArray([]);
        }
        if (this.loaderSubscription) {
            this.loaderSubscription.unsubscribe();
        }
        if (this.pageable) {
            ObservableWrapper.callEmit(this.onPaginatedDataLoaded, data);
        }
        ObservableWrapper.callEmit(this.onDataLoaded, this.dataResponseArray);
    };
    OListComponent.DEFAULT_INPUTS_O_LIST = DEFAULT_INPUTS_O_LIST;
    OListComponent.DEFAULT_OUTPUTS_O_LIST = DEFAULT_OUTPUTS_O_LIST;
    OListComponent.decorators = [
        { type: Component, args: [{
                    moduleId: module.id,
                    selector: 'o-list',
                    providers: [
                        { provide: OntimizeService, useFactory: Éµ0, deps: [Injector] }
                    ],
                    inputs: DEFAULT_INPUTS_O_LIST,
                    outputs: DEFAULT_OUTPUTS_O_LIST,
                    template: "\n    <div class=\"o-list-container\" [style.display]=\"isVisible()? '' : 'none'\" fxFill>\n      <div *ngIf=\"loading | async\" fxLayoutAlign=\"center center\"\n        [class.pageable-loading]=\"pageable && state.queryRecordOffset > 0\" class=\"spinner-container\">\n        <mat-progress-spinner strokeWidth=\"3\" mode=\"indeterminate\"></mat-progress-spinner>\n      </div>\n\n      <mat-toolbar *ngIf=\"hasControls()\" [class.dense]=\"odense\">\n        <div class=\"mat-toolbar-tools\" fxLayout=\"row\" fxFill fxLayoutAlign=\"start center\">\n          <button *ngIf=\"insertButton && !insertButtonFloatable\" type=\"button\" mat-icon-button aria-label=\"Insert\"\n            (click)=\"add($event)\">\n            <mat-icon svgIcon=\"ontimize:add\"></mat-icon>\n          </button>\n          <button type=\"button\" mat-icon-button aria-label=\"Refresh\" (click)=\"reloadData()\" *ngIf=\"refreshButton\">\n            <mat-icon svgIcon=\"ontimize:autorenew\"></mat-icon>\n          </button>\n\n          <button *ngIf=\"deleteButton\" type=\"button\" mat-icon-button aria-label=\"Delete\" [disabled]=\"!enabledDeleteButton\"\n            [class.disabled]=\"!enabledDeleteButton\" (click)=\"remove()\">\n            <mat-icon svgIcon=\"ontimize:delete\"></mat-icon>\n          </button>\n          <div fxLayoutAlign=\"center center\" fxFlex>\n            <span *ngIf=\"hasTitle()\" fxLayoutAlign=\"center center\">{{ title | oTranslate }}</span>\n          </div>\n          <o-search-input *ngIf=\"quickFilter\" [filter-case-sensitive]=\"filterCaseSensitive\"\n            [show-case-sensitive-checkbox]=\"showCaseSensitiveCheckbox()\" [columns]=\"quickFilterColumns\" placeholder=\"\">\n          </o-search-input>\n        </div>\n      </mat-toolbar>\n\n      <div fxLayout=\"column\" class=\"o-list-content\" [class.o-list-content-toolbar]=\"hasControls() && !odense\"\n        [class.o-list-content-toolbar-dense]=\"hasControls() && odense\">\n\n        <!--MAT-LIST-->\n        <mat-list [attr.dense]=\"odense || undefined\" (scroll)=\"onScroll($event)\" [class.selectable]=\"selectable\"\n          [class.o-list-item-has-buttons]=\"insertButton && (editButtonInRow || detailButtonInRow)\">\n\n          <mat-list-item *ngIf=\"!getDataArray().length\" fxLayout=\"row\" fxLayoutAlign=\"center center\"\n            style=\"cursor: default;\">\n            <h3 matLine>\n              {{ 'TABLE.EMPTY' | oTranslate }}\n              <ng-container *ngIf=\"getQuickFilterValue().length > 0\">\n                {{ 'TABLE.EMPTY_USING_FILTER' | oTranslate : {values: [getQuickFilterValue()]} }}\n              </ng-container>\n            </h3>\n          </mat-list-item>\n          <ng-content></ng-content>\n        </mat-list>\n\n        <!--INSERT BUTTONcd -->\n        <button type=\"button\" *ngIf=\"insertButton && insertButtonFloatable && odense\" mat-mini-fab (click)=\"add($event)\"\n          class=\"add-button\" [class.add-button-bottom]=\"insertButtonPosition ==='bottom'\"\n          [class.add-button-top]=\"insertButtonPosition ==='top'\">\n          <mat-icon svgIcon=\"ontimize:add\"></mat-icon>\n        </button>\n        <button type=\"button\" *ngIf=\"insertButton && insertButtonFloatable && !odense\" mat-fab (click)=\"add($event)\"\n          class=\"add-button add-button-bottom\" [class.add-button-bottom]=\"insertButtonPosition ==='bottom'\"\n          [class.add-button-top]=\"insertButtonPosition ==='top'\">\n          <mat-icon svgIcon=\"ontimize:add\"></mat-icon>\n        </button>\n      </div>\n    </div>\n  ",
                    styles: ["\n    ::-webkit-input-placeholder{color:#8E0C39}:-moz-placeholder{color:#8E0C39;opacity:1}::-moz-placeholder{color:#8E0C39;opacity:1}:-ms-input-placeholder{color:#8E0C39}:placeholder-shown{color:#8E0C39}.o-list-container{position:relative;flex-direction:column}.o-list-container .mat-toolbar.dense{height:48px}.o-list-container .o-list-content{height:100%}.o-list-container .o-list-content.o-list-content-toolbar{height:calc(100% - 64px)}.o-list-container .o-list-content.o-list-content-toolbar-dense{height:calc(100% - 48px)}.o-list-container .o-list-content.o-list-content-toolbar-dense .add-button.add-button-top{top:60px}.o-list-container .o-list-title{font-size:1.5em}.o-list-container .spinner-container{position:absolute;top:0;bottom:0;left:0;right:0;z-index:500}.o-list-container .spinner-container:not(.pageable-loading){top:0;background:#fff}.o-list-container .spinner-container.pageable-loading{background:rgba(255,255,255,0.5)}.o-list-container .spinner-container path{stroke-width:5px !important}.o-list-container .mat-list{overflow:auto}.o-list-container .mat-list .mat-3-line .o-custom-list-item{position:relative}.o-list-container .mat-list .o-custom-list-item{max-width:100%;width:100%}.o-list-container .mat-list .o-custom-list-item .o-list-item-icon{cursor:pointer;padding-right:6px}.o-list-container .mat-list.o-list-item-has-buttons .o-list-item .mat-list-item-content{padding-right:72px}.o-list-container .mat-list.o-list-item-has-buttons[dense] .o-list-item .mat-list-item-content{padding-right:56px}.o-list-container .mat-list .o-list-item.mat-card,.o-list-container .mat-list .o-list-item.mat-list-item{margin:6px 0}.o-list-container .add-button{right:12px;position:absolute}.o-list-container .add-button.add-button-bottom{bottom:12px}.o-list-container .add-button.add-button-top{top:88px}\n  "],
                    encapsulation: ViewEncapsulation.None,
                    host: {
                        '[class.o-list]': 'true'
                    }
                },] },
    ];
    OListComponent.ctorParameters = function () { return [
        { type: Injector },
        { type: ElementRef },
        { type: OFormComponent, decorators: [{ type: Optional }, { type: Inject, args: [forwardRef(function () { return OFormComponent; }),] }] }
    ]; };
    OListComponent.propDecorators = {
        listItemComponents: [{ type: ContentChildren, args: [OListItemComponent,] }],
        listItemDirectives: [{ type: ContentChildren, args: [OListItemDirective,] }]
    };
    __decorate([
        InputConverter(),
        __metadata("design:type", Boolean)
    ], OListComponent.prototype, "refreshButton", void 0);
    __decorate([
        InputConverter(),
        __metadata("design:type", Boolean)
    ], OListComponent.prototype, "selectable", void 0);
    __decorate([
        InputConverter(),
        __metadata("design:type", Boolean)
    ], OListComponent.prototype, "odense", void 0);
    __decorate([
        InputConverter(),
        __metadata("design:type", Boolean)
    ], OListComponent.prototype, "deleteButton", void 0);
    __decorate([
        InputConverter(),
        __metadata("design:type", Boolean)
    ], OListComponent.prototype, "insertButtonFloatable", void 0);
    return OListComponent;
}(OServiceComponent));
export { OListComponent };
var OListModule = (function () {
    function OListModule() {
    }
    OListModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [OListComponent],
                    imports: [CommonModule, OListItemModule, OSearchInputModule, OSharedModule, RouterModule],
                    exports: [OListComponent],
                    entryComponents: [MatCheckbox]
                },] },
    ];
    return OListModule;
}());
export { OListModule };
export { Éµ0 };
//# sourceMappingURL=o-list.component.js.map
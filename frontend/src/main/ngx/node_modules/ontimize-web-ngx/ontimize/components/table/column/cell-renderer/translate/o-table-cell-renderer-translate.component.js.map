{"version":3,"file":"o-table-cell-renderer-translate.component.js","sourceRoot":"","sources":["../../../../../../../tmp/ontimize/components/table/column/cell-renderer/translate/o-table-cell-renderer-translate.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,EAAE,uBAAuB,EAAE,SAAS,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAE,MAAM,eAAe,CAAC;AAErG,OAAO,EAA0B,cAAc,EAAE,MAAM,sBAAsB,CAAC;AAC9E,OAAO,EAAE,sBAAsB,EAAE,MAAM,qCAAqC,CAAC;AAE7E,MAAM,CAAC,IAAM,8CAA8C,GAAG;IAE5D,mCAAmC;CACpC,CAAC;AAEF;IAW0D,wDAAsB;IAY9E,8CAAsB,QAAkB;QAAxC,YACE,kBAAM,QAAQ,CAAC,SAKhB;QANqB,cAAQ,GAAR,QAAQ,CAAU;QAF9B,mBAAa,GAA2B,EAAE,CAAC;QAKnD,KAAI,CAAC,WAAW,CAAC,IAAI,GAAG,WAAW,CAAC;QAEpC,KAAI,CAAC,gBAAgB,EAAE,CAAC;;IAC1B,CAAC;IAEM,+DAAgB,GAAvB;QACE,IAAI,CAAC,aAAa,GAAG,IAAI,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACzD,CAAC;IAEM,0DAAW,GAAlB,UAAmB,SAAc,EAAE,QAAc;QAC/C,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;QAC5F,OAAO,iBAAM,WAAW,YAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;IAChD,CAAC;IAzBa,kFAA6C,GAAG,8CAA8C,CAAC;;gBAb9G,SAAS,SAAC;oBACT,QAAQ,EAAE,MAAM,CAAC,EAAE;oBACnB,QAAQ,EAAE,iCAAiC;oBAC3C,QAAQ,EAAE,8JAIT;oBACD,eAAe,EAAE,uBAAuB,CAAC,MAAM;oBAC/C,MAAM,EAAE,8CAA8C;iBACvD;;;gBApB4C,QAAQ;;;8BAyBlD,SAAS,SAAC,aAAa,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE;;IAyBjD,2CAAC;CAAA,AAxCD,CAW0D,sBAAsB,GA6B/E;SA7BY,oCAAoC","sourcesContent":["import { ChangeDetectionStrategy, Component, Injector, TemplateRef, ViewChild } from '@angular/core';\n\nimport { ITranslatePipeArgument, OTranslatePipe } from '../../../../../pipes';\nimport { OBaseTableCellRenderer } from '../o-base-table-cell-renderer.class';\n\nexport const DEFAULT_INPUTS_O_TABLE_CELL_RENDERER_TRANSLATE = [\n  // translate-params [(rowData: any) => any[]]: function that receives the row data and return the parameters for the translate pipe.\n  'translateArgsFn: translate-params'\n];\n\n@Component({\n  moduleId: module.id,\n  selector: 'o-table-cell-renderer-translate',\n  template: `\n    <ng-template #templateref let-cellvalue=\"cellvalue\" let-rowvalue=\"rowvalue\">\n      {{ getCellData(cellvalue, rowvalue) }}\n    </ng-template>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: DEFAULT_INPUTS_O_TABLE_CELL_RENDERER_TRANSLATE\n})\nexport class OTableCellRendererTranslateComponent extends OBaseTableCellRenderer {\n\n  public static DEFAULT_IPUTS_O_TABLE_CELL_RENDERER_TRANSLATE = DEFAULT_INPUTS_O_TABLE_CELL_RENDERER_TRANSLATE;\n\n  @ViewChild('templateref', { read: TemplateRef })\n  public templateref: TemplateRef<any>;\n\n  public translateArgsFn: (rowData: any) => any[];\n\n  protected componentPipe: OTranslatePipe;\n  protected pipeArguments: ITranslatePipeArgument = {};\n\n  constructor(protected injector: Injector) {\n    super(injector);\n\n    this.tableColumn.type = 'translate';\n\n    this.setComponentPipe();\n  }\n\n  public setComponentPipe(): void {\n    this.componentPipe = new OTranslatePipe(this.injector);\n  }\n\n  public getCellData(cellvalue: any, rowvalue?: any): string {\n    this.pipeArguments = this.translateArgsFn ? { values: this.translateArgsFn(rowvalue) } : {};\n    return super.getCellData(cellvalue, rowvalue);\n  }\n\n}\n"]}
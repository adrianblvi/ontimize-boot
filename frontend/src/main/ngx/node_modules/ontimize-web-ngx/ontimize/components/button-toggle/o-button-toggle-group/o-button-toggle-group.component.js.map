{"version":3,"file":"o-button-toggle-group.component.js","sourceRoot":"","sources":["../../../../../tmp/ontimize/components/button-toggle/o-button-toggle-group/o-button-toggle-group.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { AfterViewInit, Component, ComponentFactory, ComponentFactoryResolver, ContentChildren, EventEmitter, forwardRef, OnInit, QueryList, ViewChild, ViewContainerRef, ViewEncapsulation } from '@angular/core';\nimport { MatButtonToggleChange, MatButtonToggleGroup } from '@angular/material';\n\nimport { Util } from '../../../utils';\nimport { InputConverter } from '../../../decorators';\nimport { OButtonToggleComponent } from '../o-button-toggle.component';\n\nexport const DEFAULT_INPUTS_O_BUTTON_TOGGLE_GROUP = [\n  'oattr: attr',\n  'name',\n  'enabled',\n  'layout',\n  'multiple',\n  'value'\n];\n\nexport const DEFAULT_OUTPUTS_O_BUTTON_TOGGLE_GROUP = [\n  'onChange'\n];\n\n@Component({\n  moduleId: module.id,\n  selector: 'o-button-toggle-group',\n  template: `\n    <mat-button-toggle-group [disabled]=\"!enabled\" [name]=\"name\" [value]=\"value\" [vertical]=\"layout==='column'\" [multiple]=\"multiple\"\n      (change)=\"onChange.emit($event)\">\n      <ng-container #childContainer></ng-container>\n    </mat-button-toggle-group>\n  `,\n  styles: [`\n\n  `],\n  inputs: DEFAULT_INPUTS_O_BUTTON_TOGGLE_GROUP,\n  outputs: DEFAULT_OUTPUTS_O_BUTTON_TOGGLE_GROUP,\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    '[class.o-button-toggle-group]': 'true'\n  },\n  entryComponents: [OButtonToggleComponent]\n})\nexport class OButtonToggleGroupComponent implements AfterViewInit, OnInit {\n\n  public DEFAULT_INPUTS_O_BUTTON_TOGGLE_GROUP = DEFAULT_INPUTS_O_BUTTON_TOGGLE_GROUP;\n  public DEFAULT_OUTPUTS_O_BUTTON_TOGGLE_GROUP = DEFAULT_OUTPUTS_O_BUTTON_TOGGLE_GROUP;\n\n  /* Inputs */\n  protected oattr: string;\n  public name: string;\n  get enabled(): boolean {\n    if (this._innerButtonToggleGroup instanceof MatButtonToggleGroup) {\n      return !this._innerButtonToggleGroup.disabled;\n    }\n    return true;\n  }\n  set enabled(val: boolean) {\n    if (this._innerButtonToggleGroup instanceof MatButtonToggleGroup) {\n      val = Util.parseBoolean(String(val));\n      this._innerButtonToggleGroup.disabled = !val;\n    }\n  }\n  protected _enabled: boolean = true;\n  public layout: 'row' | 'column' = 'row';\n  @InputConverter()\n  public multiple: boolean = false;\n  public value: any;\n  /* End inputs */\n\n  /* Outputs */\n  public onChange: EventEmitter<MatButtonToggleChange> = new EventEmitter();\n  /* End outputs */\n\n  @ViewChild(MatButtonToggleGroup)\n  protected _innerButtonToggleGroup: MatButtonToggleGroup;\n  @ViewChild('childContainer', { read: ViewContainerRef })\n  protected _viewContainerRef: ViewContainerRef;\n  @ContentChildren(forwardRef(() => OButtonToggleComponent))\n  protected _children: QueryList<OButtonToggleComponent>;\n\n  constructor(protected resolver: ComponentFactoryResolver) { }\n\n  ngOnInit(): void {\n    if (!Util.isDefined(this.name)) {\n      this.name = this.oattr;\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.buildChildren();\n    this._children.changes.subscribe(() => this.buildChildren());\n  }\n\n  protected buildChildren(): void {\n    const factory: ComponentFactory<OButtonToggleComponent> = this.resolver.resolveComponentFactory(OButtonToggleComponent);\n    this._viewContainerRef.clear();\n    let childList = this._children.map((child) => {\n      let componentRef = this._viewContainerRef.createComponent(factory);\n      componentRef.instance.oattr = child.oattr;\n      componentRef.instance.label = child.label;\n      componentRef.instance.icon = child.icon;\n      componentRef.instance.iconPosition = child.iconPosition;\n      componentRef.instance.checked = child.checked;\n      componentRef.instance.enabled = child.enabled;\n      componentRef.instance.value = child.value;\n      componentRef.instance.name = this.name;\n      componentRef.instance.onChange = child.onChange;\n      componentRef.changeDetectorRef.detectChanges();\n      return componentRef.instance;\n    });\n    this._innerButtonToggleGroup._buttonToggles.reset(childList.map(c => c._innerButtonToggle));\n    this._children.reset(childList);\n  }\n\n  getValue(): any {\n    return this._innerButtonToggleGroup ? this._innerButtonToggleGroup.value : void 0;\n  }\n\n  setValue(val: any): void {\n    this._innerButtonToggleGroup.value = val;\n  }\n\n}\n"]}
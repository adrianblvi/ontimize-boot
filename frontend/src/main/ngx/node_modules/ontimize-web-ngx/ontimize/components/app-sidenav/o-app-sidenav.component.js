var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { ChangeDetectorRef, ChangeDetectionStrategy, Component, ElementRef, EventEmitter, HostListener, Injector, NgModule, ViewEncapsulation, ViewChild } from '@angular/core';
import { CommonModule } from '@angular/common';
import { MatSidenav } from '@angular/material';
import { Router, RouterModule } from '@angular/router';
import { ObservableMedia } from '@angular/flex-layout';
import { Util } from '../../util/util';
import { OSharedModule } from '../../shared';
import { InputConverter } from '../../decorators';
import { OAppSidenavImageModule } from './image/o-app-sidenav-image.component';
import { OAppSidenavMenuItemModule } from './menu-item/o-app-sidenav-menu-item.component';
import { OAppSidenavMenuGroupModule } from './menu-group/o-app-sidenav-menu-group.component';
import { OAppLayoutComponent } from '../../layouts/app-layout/o-app-layout.component';
import { AppMenuService, OUserInfoService } from '../../services';
export var DEFAULT_INPUTS_O_APP_SIDENAV = [
    'opened',
    'showUserInfo: show-user-info',
    'showToggleButton: show-toggle-button',
    'openedSidenavImg: opened-sidenav-image',
    'closedSidenavImg: closed-sidenav-image',
    'layoutMode: layout-mode',
    'sidenavMode: sidenav-mode'
];
export var DEFAULT_OUTPUTS_O_APP_SIDENAV = [
    'onSidenavToggle',
    'afterSidenavToggle'
];
var OAppSidenavComponent = (function () {
    function OAppSidenavComponent(injector, router, elRef, cd, media) {
        this.injector = injector;
        this.router = router;
        this.elRef = elRef;
        this.cd = cd;
        this.media = media;
        this._menuRootArray = [];
        this.opened = true;
        this._showUserInfo = true;
        this._showToggleButton = true;
        this.onSidenavToggle = new EventEmitter();
        this.afterSidenavToggle = new EventEmitter();
        this.manuallyClosed = false;
        this.appMenuService = this.injector.get(AppMenuService);
        this.menuRootArray = this.appMenuService.getMenuRoots();
        this.oUserInfoService = this.injector.get(OUserInfoService);
        var self = this;
        this.mediaWatch = this.media.subscribe(function (change) {
            if (self.isScreenSmall() && self.sidenav) {
                self.sidenav.close();
            }
        });
    }
    OAppSidenavComponent.prototype.onResize = function (event) {
        if (!this.manuallyClosed && !this.isScreenSmall() && !this.isMobileMode()) {
            this.sidenav.open();
        }
    };
    OAppSidenavComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.routerSubscription = this.router.events.subscribe(function () {
            if (_this.isScreenSmall()) {
                _this.sidenav.close();
            }
        });
    };
    OAppSidenavComponent.prototype.ngAfterViewInit = function () {
        var _this = this;
        if (this.showUserInfo && this.showToggleButton) {
            this.userInfo = this.oUserInfoService.getUserInfo();
            this.userInfoSubscription = this.oUserInfoService.getUserInfoObservable().subscribe(function (res) {
                _this.userInfo = res;
                _this.refreshMenuRoots();
            });
        }
        this.refreshMenuRoots();
    };
    Object.defineProperty(OAppSidenavComponent.prototype, "layoutMode", {
        get: function () {
            return this._layoutMode;
        },
        set: function (val) {
            var m = OAppLayoutComponent.OAppLayoutModes.find(function (e) { return e === val; });
            if (Util.isDefined(m)) {
                this._layoutMode = m;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(OAppSidenavComponent.prototype, "sidenavMode", {
        get: function () {
            return this._sidenavMode;
        },
        set: function (val) {
            var m = OAppLayoutComponent.OSidenavModes.find(function (e) { return e === val; });
            if (Util.isDefined(m)) {
                this._sidenavMode = m;
            }
        },
        enumerable: true,
        configurable: true
    });
    OAppSidenavComponent.prototype.refreshMenuRoots = function () {
        if (this.showUserInfo && this.userInfo && this._showToggleButton) {
            var firstRoot = this.menuRootArray[0];
            var alreadyExistsUserInfo = firstRoot ? firstRoot.id === 'user-info' : false;
            if (alreadyExistsUserInfo) {
                var userInfoItem = this.menuRootArray[0].items[0];
                userInfoItem.id = this.userInfo.username;
                userInfoItem.name = this.userInfo.username;
                userInfoItem.user = this.userInfo.username;
                userInfoItem.avatar = this.userInfo.avatar;
            }
            else {
                var userInfoItem = {
                    id: this.userInfo.username,
                    name: this.userInfo.username,
                    user: this.userInfo.username,
                    avatar: this.userInfo.avatar
                };
                var menuGroupUserInfo = {
                    id: 'user-info',
                    name: 'APP_LAYOUT.USER_PROFILE',
                    items: [userInfoItem],
                    opened: true,
                    icon: 'person_pin'
                };
                this.menuRootArray.unshift(menuGroupUserInfo);
            }
        }
    };
    OAppSidenavComponent.prototype.ngOnDestroy = function () {
        if (this.routerSubscription) {
            this.routerSubscription.unsubscribe();
        }
        if (this.userInfoSubscription) {
            this.userInfoSubscription.unsubscribe();
        }
    };
    OAppSidenavComponent.prototype.isScreenSmall = function () {
        return !this.manuallyClosed && this.media.isActive('lt-sm');
    };
    OAppSidenavComponent.prototype.isMobileMode = function () {
        return this._layoutMode === 'mobile';
    };
    OAppSidenavComponent.prototype.isSidenavOpened = function () {
        return this.opened && !this.isMobileMode() && !this.isScreenSmall();
    };
    Object.defineProperty(OAppSidenavComponent.prototype, "menuRootArray", {
        get: function () {
            return this._menuRootArray;
        },
        set: function (val) {
            this._menuRootArray = val;
        },
        enumerable: true,
        configurable: true
    });
    OAppSidenavComponent.prototype.toggleSidenav = function () {
        var promise = this.sidenav.opened ? this.sidenav.close() : this.sidenav.open();
        var self = this;
        promise.then(function () {
            self.afterSidenavToggle.emit(self.sidenav.opened);
        });
        this.cd.detectChanges();
        this.opened = this.sidenav.opened;
        this.manuallyClosed = !this.opened;
        this.onSidenavToggle.emit(this.sidenav.opened);
    };
    Object.defineProperty(OAppSidenavComponent.prototype, "showUserInfo", {
        get: function () {
            return this._showUserInfo;
        },
        set: function (arg) {
            this._showUserInfo = arg;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(OAppSidenavComponent.prototype, "showToggleButton", {
        get: function () {
            return this._showToggleButton;
        },
        set: function (arg) {
            this._showToggleButton = arg;
        },
        enumerable: true,
        configurable: true
    });
    OAppSidenavComponent.prototype.onMenuItemClick = function (e) {
        if (this.isMobileMode()) {
            this.sidenav.close();
        }
    };
    OAppSidenavComponent.DEFAULT_INPUTS_O_APP_LAYOUT = DEFAULT_INPUTS_O_APP_SIDENAV;
    OAppSidenavComponent.DEFAULT_OUTPUTS_O_APP_LAYOUT = DEFAULT_OUTPUTS_O_APP_SIDENAV;
    OAppSidenavComponent.decorators = [
        { type: Component, args: [{
                    moduleId: module.id,
                    selector: 'o-app-sidenav',
                    inputs: DEFAULT_INPUTS_O_APP_SIDENAV,
                    outputs: DEFAULT_OUTPUTS_O_APP_SIDENAV,
                    template: "\n    <mat-sidenav-container class=\"o-app-sidenav-container\" [class.opened]=\"sidenav.opened\"\n      [class.o-app-sidenav-mode-desktop]=\"(layoutMode || 'desktop') === 'desktop'\" [class.o-app-sidenav-mode-mobile]=\"(layoutMode || 'desktop') !== 'desktop'\">\n\n      <mat-sidenav #sidenav class=\"o-app-sidenav-sidenav o-scroll\" [opened]=\"isSidenavOpened()\" [mode]=\"(sidenavMode || ((layoutMode || 'desktop') === 'desktop' ? 'side' : 'over'))\"\n        [class.mat-drawer-opened]=\"sidenav.opened\" [class.mat-drawer-closed]=\"!sidenav.opened\" fxLayout=\"column\"\n        fxLayoutAlign=\"start stretch\">\n\n        <div fxLayout=\"row\" fxLayoutAlign=\"end\" *ngIf=\"showToggleButton\" class=\"sidenav-toggle-container\">\n          <mat-icon class=\"sidenav-toggle\" (click)=\"toggleSidenav()\" svgIcon=\"ontimize:menu\">menu</mat-icon>\n        </div>\n\n        <o-app-sidenav-image [opened-src]=\"openedSidenavImg\" [closed-src]=\"closedSidenavImg\"> </o-app-sidenav-image>\n\n        <ng-content select=\"o-app-layout-sidenav-projection-start\"></ng-content>\n\n        <nav *ngFor=\"let menuRootItem of menuRootArray\">\n\n          <ul *ngIf=\"appMenuService.getMenuItemType(menuRootItem) !== 'group'\">\n            <o-app-sidenav-menu-item [menu-item]=\"menuRootItem\" [menu-item-type]=\"appMenuService.getMenuItemType(menuRootItem)\"\n              [sidenav-opened]=\"sidenav.opened\" (onClick)=\"onMenuItemClick($event)\">\n            </o-app-sidenav-menu-item>\n          </ul>\n\n          <o-app-sidenav-menu-group [menu-group]=\"menuRootItem\" [sidenav-opened]=\"sidenav.opened\" *ngIf=\"appMenuService.getMenuItemType(menuRootItem) === 'group'\"\n            (onItemClick)=\"onMenuItemClick($event)\">\n          </o-app-sidenav-menu-group>\n        </nav>\n\n        <ng-content select=\"o-app-layout-sidenav-projection-end\"></ng-content>\n\n      </mat-sidenav>\n\n      <mat-sidenav-content class=\"o-app-sidenav-content\">\n        <ng-content></ng-content>\n      </mat-sidenav-content>\n    </mat-sidenav-container>\n  ",
                    styles: ["\n    .o-app-sidenav.header-layout .o-app-sidenav-container .mat-drawer.o-app-sidenav-sidenav{box-shadow:3px 56px 6px rgba(0,0,0,0.24)}.o-app-sidenav .o-app-sidenav-menu-group[disabled=true] .mat-button-focus-overlay,.o-app-sidenav .o-app-sidenav-menu-group[disabled=true] .mat-ripple,.o-app-sidenav .o-app-sidenav-menu-item[disabled=true] .mat-button-focus-overlay,.o-app-sidenav .o-app-sidenav-menu-item[disabled=true] .mat-ripple{display:none}.o-app-sidenav .o-app-sidenav-menu-group[disabled=true] .o-app-sidenav-item,.o-app-sidenav .o-app-sidenav-menu-item[disabled=true] .o-app-sidenav-item{opacity:.5}.o-app-sidenav .o-app-sidenav-menu-group[disabled=true] a,.o-app-sidenav .o-app-sidenav-menu-item[disabled=true] a{cursor:initial}.o-app-sidenav .o-app-sidenav-container{width:100%;height:100%}.o-app-sidenav .o-app-sidenav-container.o-app-sidenav-mode-desktop:not(.opened) .o-app-sidenav-sidenav.mat-drawer-closed{visibility:visible !important;transform:translate3d(-191px, 0, 0)}.o-app-sidenav .o-app-sidenav-container.o-app-sidenav-mode-desktop:not(.opened) .o-app-sidenav-content.mat-drawer-content{margin-right:48px !important;transform:translate3d(48px, 0, 0) !important}.o-app-sidenav .o-app-sidenav-container .o-app-sidenav-content{position:absolute;right:0;left:0}.o-app-sidenav .o-app-sidenav-container .mat-drawer.o-app-sidenav-sidenav{box-shadow:3px 0 6px rgba(0,0,0,0.24);padding-bottom:36px;padding-top:5px;width:240px;bottom:0;overflow:auto;height:100%}.o-app-sidenav .o-app-sidenav-container .mat-drawer.o-app-sidenav-sidenav h3{border:none;font-size:16px;font-weight:700;line-height:24px;text-transform:capitalize;margin:0;padding-left:16px}.o-app-sidenav .o-app-sidenav-container .mat-drawer.o-app-sidenav-sidenav ul{list-style-type:none;margin:0;padding:0}.o-app-sidenav .o-app-sidenav-container .mat-drawer.o-app-sidenav-sidenav li{margin:0;padding:0}.o-app-sidenav .o-app-sidenav-container .mat-drawer.o-app-sidenav-sidenav li>a{box-sizing:border-box;display:block;font-size:14px;font-weight:400;line-height:47px;text-decoration:none;padding:0 16px;position:relative}.o-app-sidenav .o-app-sidenav-container .mat-drawer.o-app-sidenav-sidenav .sidenav-toggle{padding:4px 12px 8px;cursor:pointer}.o-app-sidenav .o-app-sidenav-container .mat-drawer.o-app-sidenav-sidenav .o-app-sidenav-menugroup{transition:background-color 500ms}.o-app-sidenav .o-app-sidenav-container .mat-drawer.o-app-sidenav-sidenav .o-app-sidenav-menugroup.active+.o-app-sidenav-menugroup-items-container .o-app-sidenav-menu-item:last-child li{border-color:transparent}.o-app-sidenav .o-app-sidenav-container .mat-drawer.o-app-sidenav-sidenav .o-app-sidenav-menugroup-items-container{overflow:hidden}.o-app-sidenav .o-app-sidenav-container .mat-drawer.o-app-sidenav-sidenav.mat-drawer-closing{transform:translate3d(-191px, 0, 0)}.o-app-sidenav .o-app-sidenav-container .mat-drawer.o-app-sidenav-sidenav.mat-drawer-closed{text-align:center}.o-app-sidenav .o-app-sidenav-container .mat-drawer.o-app-sidenav-sidenav.mat-drawer-closed .o-app-sidenav-item:not(.o-user-info){cursor:pointer}.o-app-sidenav .o-app-sidenav-container .mat-drawer.o-app-sidenav-sidenav.mat-drawer-closed .o-app-sidenav-item.o-user-info:focus,.o-app-sidenav .o-app-sidenav-container .mat-drawer.o-app-sidenav-sidenav.mat-drawer-closed .o-app-sidenav-item.o-user-info:hover{color:inherit}.o-app-sidenav .o-app-sidenav-container .mat-drawer.o-app-sidenav-sidenav.mat-drawer-closed .o-app-sidenav-item.o-app-sidenav-menuitem a{width:48px;max-width:48px;min-width:48px;line-height:48px;padding:0 8px;height:48px}.o-app-sidenav .o-app-sidenav-container .mat-drawer.o-app-sidenav-sidenav.mat-drawer-closed .o-app-sidenav-item.o-app-sidenav-menugroup{padding:8px 8px 8px 12px;height:48px;-webkit-box-pack:center !important;-ms-flex-pack:center !important;justify-content:center !important}.o-app-sidenav .o-app-sidenav-container .mat-drawer.o-app-sidenav-sidenav.mat-drawer-closed>nav{width:48px;min-width:48px;margin-left:auto}.o-app-sidenav .o-app-sidenav-container .mat-drawer.o-app-sidenav-sidenav.mat-drawer-closed .o-app-sidenav-image .o-app-sidenav-image-container{padding:0;text-align:end;max-height:48px}.o-app-sidenav .o-app-sidenav-container .mat-drawer.o-app-sidenav-sidenav.mat-drawer-closed .o-app-sidenav-image .o-app-sidenav-image-container .o-app-sidenav-image{max-height:48px;margin:8px 8px 0 0}.o-app-sidenav .o-app-sidenav-container .mat-drawer.o-app-sidenav-sidenav:not(.mat-drawer-closed) .o-app-sidenav-item{border-bottom-width:0;border-bottom-style:solid}.o-app-sidenav .o-app-sidenav-container .mat-drawer.o-app-sidenav-sidenav:not(.mat-drawer-closed) .o-app-sidenav-menugroup{padding:16px;transition:padding 500ms 0s}.o-app-sidenav .o-app-sidenav-container .mat-drawer.o-app-sidenav-sidenav:not(.mat-drawer-closed) .o-app-sidenav-menugroup .o-app-sidenav-menugroup-arrow{position:absolute;right:16px;transition:500ms transform cubic-bezier(0.25, 0.8, 0.25, 1)}.o-app-sidenav .o-app-sidenav-container .mat-drawer.o-app-sidenav-sidenav:not(.mat-drawer-closed) .o-app-sidenav-menugroup.active .o-app-sidenav-menugroup-arrow{transform:rotate(90deg)}.o-app-sidenav .o-app-sidenav-container .mat-drawer.o-app-sidenav-sidenav:not(.mat-drawer-closed) .o-app-sidenav-menugroup.active+.o-app-sidenav-menugroup-items-container ul li>a{padding-left:32px}.o-app-sidenav .o-app-sidenav-container .mat-drawer.o-app-sidenav-sidenav:not(.mat-drawer-closed) .o-app-sidenav-menuitem mat-icon{margin-right:16px}.o-app-sidenav .o-app-sidenav-container .o-app-sidenav-content{min-height:100%;display:flex;flex-direction:column}.o-app-sidenav .o-app-sidenav-container .o-app-sidenav-content router-outlet+*{flex-grow:1}\n  "],
                    encapsulation: ViewEncapsulation.None,
                    host: {
                        '[class.o-app-sidenav]': 'true'
                    },
                    changeDetection: ChangeDetectionStrategy.OnPush
                },] },
    ];
    OAppSidenavComponent.ctorParameters = function () { return [
        { type: Injector },
        { type: Router },
        { type: ElementRef },
        { type: ChangeDetectorRef },
        { type: ObservableMedia }
    ]; };
    OAppSidenavComponent.propDecorators = {
        sidenav: [{ type: ViewChild, args: [MatSidenav,] }],
        onResize: [{ type: HostListener, args: ['window:resize', ['$event'],] }]
    };
    __decorate([
        InputConverter(),
        __metadata("design:type", Boolean)
    ], OAppSidenavComponent.prototype, "opened", void 0);
    return OAppSidenavComponent;
}());
export { OAppSidenavComponent };
var OAppSidenavModule = (function () {
    function OAppSidenavModule() {
    }
    OAppSidenavModule.decorators = [
        { type: NgModule, args: [{
                    imports: [CommonModule, OAppSidenavMenuGroupModule, OAppSidenavImageModule, OAppSidenavMenuItemModule, OSharedModule, RouterModule],
                    declarations: [OAppSidenavComponent],
                    exports: [OAppSidenavComponent]
                },] },
    ];
    return OAppSidenavModule;
}());
export { OAppSidenavModule };
//# sourceMappingURL=o-app-sidenav.component.js.map
{"version":3,"file":"o-radio.component.js","sourceRoot":"","sources":["../../../../../tmp/ontimize/components/input/radio/o-radio.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { AfterViewInit, Component, ElementRef, forwardRef, Inject, Injector, NgModule, Optional, ViewEncapsulation } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatRadioChange } from '@angular/material';\n\nimport { Util } from '../../../util/util';\nimport { OFormValue } from '../../form/OFormValue';\nimport { OFormComponent } from '../../form/form-components';\nimport { OSharedModule } from '../../../shared/shared.module';\nimport { InputConverter } from '../../../decorators/input-converter';\nimport { OntimizeService } from '../../../services/ontimize.service';\nimport { OFormServiceComponent } from '../o-form-service-component.class';\nimport { dataServiceFactory } from '../../../services/data-service.provider';\nimport { OValueChangeEvent } from '../../o-form-data-component.class';\n\nexport const DEFAULT_INPUTS_O_RADIO = [\n  ...OFormServiceComponent.DEFAULT_INPUTS_O_FORM_SERVICE_COMPONENT,\n  'translate',\n  'layout',\n  'labelPosition: label-position'\n];\n\nexport const DEFAULT_OUTPUTS_O_RADIO = [\n  ...OFormServiceComponent.DEFAULT_OUTPUTS_O_FORM_SERVICE_COMPONENT\n];\n\n@Component({\n  selector: 'o-radio',\n  template: `\n    <div [formGroup]=\"getFormGroup()\" [matTooltip]=\"tooltip\" [matTooltipClass]=\"tooltipClass\"\n      [matTooltipPosition]=\"tooltipPosition\" [matTooltipShowDelay]=\"tooltipShowDelay\"\n      [matTooltipHideDelay]=\"tooltipHideDelay\" class=\"relative\">\n      <!-- mat-form-field and hidden input are used only for displaying component label and errors as mat-radio is not supported inside form-field -->\n      <!-- https://github.com/angular/material2/issues/7891 -->\n      <mat-form-field [appearance]=\"appearance\" [floatLabel]=\"floatLabel\" [hideRequiredMarker]=\"hideRequiredMarker\"\n        [class.read-only]=\"isReadOnly\" [class.custom-width]=\"hasCustomWidth\" [class.o-radio-from-field-row]=\"layout==='row'\"\n        floatLabel=\"always\" class=\"mat-form-field--no-underline\" fxFill>\n        <mat-label *ngIf=\"labelVisible\">{{ olabel | oTranslate }}</mat-label>\n        <input matInput [id]=\"getAttribute()\" [formControlName]=\"getAttribute()\" [placeholder]=\"placeHolder\"\n          [required]=\"isRequired\" style=\"display: none\" />\n        <mat-radio-group [id]=\"getAttribute()\" [formControlName]=\"getAttribute()\" [name]=\"getAttribute()\"\n          [value]=\"getValue()\" [required]=\"isRequired\" [labelPosition]=\"labelPosition\"\n          (change)=\"onMatRadioGroupChange($event)\" [fxLayout]=\"layout\" fxLayoutGap=\"8px\">\n          <mat-radio-button *ngFor=\"let item of getDataArray()\" [value]=\"getValueColumn(item)\" [disabled]=\"!enabled\">\n            {{ getOptionDescriptionValue(item) }}\n          </mat-radio-button>\n        </mat-radio-group>\n        <mat-error *ngIf=\"hasError('required')\" text=\"{{ 'FORM_VALIDATION.REQUIRED' | oTranslate }}\"></mat-error>\n        <mat-error *ngFor=\"let oError of getActiveOErrors()\" text=\"{{ oError.text | oTranslate }}\"></mat-error>\n      </mat-form-field>\n      <div *ngIf=\"isReadOnly\" (click)=\"$event.stopPropagation()\" class=\"read-only-blocker\" fxFill></div>\n    </div>\n  `,\n  styles: [`\n    .o-radio .mat-form-field--no-underline .mat-form-field-underline,.o-radio .mat-form-field--no-underline .mat-form-field-underline .mat-form-field-ripple{background-image:none;background-color:transparent}.o-radio .mat-form-field:not(.custom-width).o-radio-from-field-row .mat-form-field-infix{width:auto}.o-radio .read-only-blocker{z-index:2;position:absolute;top:0;left:0;right:0}\n  `],\n  inputs: DEFAULT_INPUTS_O_RADIO,\n  outputs: DEFAULT_OUTPUTS_O_RADIO,\n  providers: [\n    { provide: OntimizeService, useFactory: dataServiceFactory, deps: [Injector] }\n  ],\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    '[class.o-radio]': 'true'\n  }\n})\nexport class ORadioComponent extends OFormServiceComponent implements AfterViewInit {\n\n  public static DEFAULT_INPUTS_O_RADIO = DEFAULT_INPUTS_O_RADIO;\n  public static DEFAULT_OUTPUTS_O_RADIO = DEFAULT_OUTPUTS_O_RADIO;\n\n  /* Inputs */\n  @InputConverter()\n  public translate: boolean = false;\n  public layout: 'row' | 'column' = 'column';\n  public labelPosition: 'before' | 'after' = 'after';\n  /* End inputs*/\n\n  value: OFormValue;\n\n  constructor(\n    @Optional() @Inject(forwardRef(() => OFormComponent)) form: OFormComponent,\n    elRef: ElementRef,\n    injector: Injector\n  ) {\n    super(form, elRef, injector);\n  }\n\n  ngAfterViewInit(): void {\n    super.ngAfterViewInit();\n    if (this.queryOnInit) {\n      this.queryData();\n    }\n  }\n\n  onMatRadioGroupChange(e: MatRadioChange): void {\n    var newValue = e.value;\n    this.setValue(newValue, {\n      changeType: OValueChangeEvent.USER_CHANGE,\n      emitEvent: false,\n      emitModelToViewChange: false\n    });\n  }\n\n  getOptionDescriptionValue(item: any = {}) {\n    let descTxt = '';\n    if (this.descriptionColArray && this.descriptionColArray.length > 0) {\n      var self = this;\n      this.descriptionColArray.forEach((col, index) => {\n        let txt = item[col];\n        if (txt) {\n          if (self.translate && self.translateService) {\n            txt = self.translateService.get(txt);\n          }\n          descTxt += txt;\n        }\n        if (index < self.descriptionColArray.length - 1) {\n          descTxt += self.separator;\n        }\n      });\n    }\n    return descTxt;\n  }\n\n  getValueColumn(item: any) {\n    if (item && item.hasOwnProperty(this.valueColumn)) {\n      let option = item[this.valueColumn];\n      if (option === 'undefined') {\n        option = null;\n      }\n      return option;\n    }\n    return void 0;\n  }\n\n  getDescriptionValue() {\n    if (Util.isDefined(this.descriptionColArray) && this.descriptionColArray.length) {\n      let currItem = this.dataArray.find(e => e[this.valueColumn] === this.getValue());\n      if (Util.isDefined(currItem)) {\n        return this.descriptionColArray.map(col => (this.translate && this.translateService) ? this.translateService.get(currItem[col]) : currItem[col]).join(this.separator);\n      }\n    }\n    return '';\n  }\n\n}\n\n@NgModule({\n  declarations: [ORadioComponent],\n  imports: [CommonModule, OSharedModule],\n  exports: [ORadioComponent]\n})\nexport class ORadioModule { }\n"]}
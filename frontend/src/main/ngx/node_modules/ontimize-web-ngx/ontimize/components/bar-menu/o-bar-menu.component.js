import { Component, Injector, NgModule, ElementRef, ViewEncapsulation } from '@angular/core';
import { CommonModule } from '@angular/common';
import { OTranslateService, PermissionsService } from '../../services';
import { OSharedModule } from '../../shared';
import { AppMenuService } from '../../services/app-menu.service';
import { OLocaleBarMenuItemModule } from './locale-menu-item/o-locale-bar-menu-item.component';
import { OBarMenuGroupModule } from './menu-group/o-bar-menu-group.component';
import { OBarMenuItemModule } from './menu-item/o-bar-menu-item.component';
import { OBarMenuNestedModule } from './menu-nested/o-bar-menu-nested.component';
import { OBarMenuSeparatorModule } from './menu-separator/o-bar-menu-separator.component';
export var DEFAULT_INPUTS_O_BAR_MENU = [
    'menuTitle: title',
    'tooltip',
];
var OBarMenuComponent = (function () {
    function OBarMenuComponent(elRef, injector) {
        this.elRef = elRef;
        this.injector = injector;
        this.id = 'm_' + String((new Date()).getTime() + Math.random());
        this.permissionsService = this.injector.get(PermissionsService);
        this.translateService = this.injector.get(OTranslateService);
        this.appMenuService = this.injector.get(AppMenuService);
        this.menuRoots = this.appMenuService.getMenuRoots();
    }
    OBarMenuComponent.prototype.ngOnInit = function () {
        var _this = this;
        if (!this.tooltip) {
            this.tooltip = this.menuTitle;
        }
        if (this.translateService) {
            this.translateService.onLanguageChanged.subscribe(function () {
                _this.setDOMTitle();
            });
            this.setDOMTitle();
        }
    };
    OBarMenuComponent.prototype.setDOMTitle = function () {
        var tooltip = this.translateService.get(this.tooltip);
        this.elRef.nativeElement.setAttribute('title', tooltip);
    };
    OBarMenuComponent.prototype.collapseAll = function () {
        var inputs = this.elRef.nativeElement.querySelectorAll('input');
        if (inputs) {
            inputs.forEach(function (element) {
                element.checked = false;
            });
        }
        var fakeLis = this.elRef.nativeElement.querySelectorAll('.fake-li-hover');
        if (fakeLis) {
            fakeLis.forEach(function (element) {
                element.classList.remove('fake-li-hover');
            });
        }
    };
    OBarMenuComponent.prototype.getPermissionsService = function () {
        return this.permissionsService;
    };
    Object.defineProperty(OBarMenuComponent.prototype, "menuTitle", {
        get: function () {
            return this._menuTitle;
        },
        set: function (val) {
            this._menuTitle = val;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(OBarMenuComponent.prototype, "tooltip", {
        get: function () {
            return this._tooltip;
        },
        set: function (val) {
            this._tooltip = val;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(OBarMenuComponent.prototype, "id", {
        get: function () {
            return this._id;
        },
        set: function (val) {
            this._id = val;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(OBarMenuComponent.prototype, "menuItems", {
        get: function () {
            return this.menuRoots;
        },
        enumerable: true,
        configurable: true
    });
    OBarMenuComponent.DEFAULT_INPUTS_O_BAR_MENU = DEFAULT_INPUTS_O_BAR_MENU;
    OBarMenuComponent.decorators = [
        { type: Component, args: [{
                    moduleId: module.id,
                    selector: 'o-bar-menu',
                    template: "\n    <mat-toolbar color=\"primary\">\n      <nav>\n        <mat-icon class=\"mat-24 menu-icon toggle\" (click)=\"input.checked = !input.checked\" svgIcon=\"ontimize:menu\"></mat-icon>\n        <label [attr.for]=\"id\" class=\"toggle title-label\">{{ menuTitle | oTranslate }}</label>\n        <input #input [attr.id]=\"id\" type=\"checkbox\" />\n        <div class=\"fake-ul mat-primary menu\">\n          <ng-container>\n            <o-bar-menu-nested [items]=\"menuItems\"> </o-bar-menu-nested>\n          </ng-container>\n          <ng-content></ng-content>\n        </div>\n      </nav>\n    </mat-toolbar>\n  ",
                    styles: ["\n    .o-bar-menu .toggle,.o-bar-menu input{display:none}.o-bar-menu nav{margin:0;padding:0}.o-bar-menu nav:after{content:\"\";display:table;clear:both}.o-bar-menu nav .fake-li a{cursor:pointer}.o-bar-menu nav .fake-ul{float:right;padding:0;margin:0;list-style:none;position:relative}.o-bar-menu nav .fake-ul.menu>.o-bar-menu-item .o-bar-menu-item-title{top:0;padding-left:0}.o-bar-menu nav .fake-ul .fake-li{margin:0;display:inline-block}.o-bar-menu nav .fake-ul .fake-ul{display:none;position:absolute;top:60px}.o-bar-menu nav .fake-ul .fake-ul .fake-li{min-width:250px;width:250px;float:none;display:list-item;position:relative;white-space:nowrap}.o-bar-menu nav .fake-ul .fake-ul .fake-ul{top:0}.o-bar-menu nav .fake-ul .fake-ul .fake-ul .fake-li{position:relative;top:0;left:0}.o-bar-menu nav a{display:flex;align-items:center;padding:0 20px;font-size:20px;line-height:60px;text-decoration:none}.o-bar-menu .fake-li>a:only-child:after{content:''}@media all and (min-width: 768px){.o-bar-menu nav .fake-ul .fake-li-hover>.fake-ul{display:inline-block;z-index:1000}.o-bar-menu nav .fake-ul .fake-ul .fake-li-hover>.fake-ul{display:inline-block;z-index:1000;left:250px}}@media all and (max-width: 767px){.o-bar-menu .mat-toolbar{height:auto !important}.o-bar-menu nav{margin:10px 0;width:100%}.o-bar-menu nav .o-bar-menu-group,.o-bar-menu nav .o-bar-menu-item,.o-bar-menu nav .o-bar-menu-separator,.o-bar-menu nav .o-locale-bar-menu-item{display:flex}.o-bar-menu nav .o-bar-menu-group .mat-list-item,.o-bar-menu nav .o-bar-menu-item .mat-list-item,.o-bar-menu nav .o-bar-menu-separator .mat-list-item,.o-bar-menu nav .o-locale-bar-menu-item .mat-list-item{display:flex;justify-content:flex-start;align-items:center}.o-bar-menu nav .fake-ul{width:100%}.o-bar-menu nav .fake-ul .fake-li{width:100%}.o-bar-menu nav .fake-ul .fake-ul{float:none;position:static;width:100%}.o-bar-menu nav .fake-ul .fake-ul .fake-li{padding-left:20px;width:100%}.o-bar-menu nav .fake-ul .fake-ul .mat-elevation-z4{box-shadow:none}.o-bar-menu .toggle{display:inline-block;padding:0 20px;font-size:20px;line-height:60px;text-decoration:none;border:none;cursor:pointer}.o-bar-menu .toggle+a{display:none !important}.o-bar-menu .menu{display:none;float:left !important}.o-bar-menu label.title-label{display:inline-block}.o-bar-menu .mat-icon.menu-icon{vertical-align:middle;display:inline-block;line-height:1;padding:0 4px}.o-bar-menu input:checked+.fake-ul{display:block}}@media all and (max-width: 330px){.o-bar-menu nav .fake-ul .fake-li{width:94%}}\n  "],
                    inputs: DEFAULT_INPUTS_O_BAR_MENU,
                    encapsulation: ViewEncapsulation.None,
                    host: {
                        '[class.o-bar-menu]': 'true'
                    }
                },] },
    ];
    OBarMenuComponent.ctorParameters = function () { return [
        { type: ElementRef },
        { type: Injector }
    ]; };
    return OBarMenuComponent;
}());
export { OBarMenuComponent };
var OBarMenuModule = (function () {
    function OBarMenuModule() {
    }
    OBarMenuModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [OBarMenuComponent],
                    imports: [
                        CommonModule,
                        OSharedModule,
                        OBarMenuGroupModule,
                        OBarMenuItemModule,
                        OLocaleBarMenuItemModule,
                        OBarMenuSeparatorModule,
                        OBarMenuNestedModule
                    ],
                    exports: [OBarMenuComponent]
                },] },
    ];
    return OBarMenuModule;
}());
export { OBarMenuModule };
//# sourceMappingURL=o-bar-menu.component.js.map
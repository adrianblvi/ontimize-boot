{"version":3,"file":"o-list-picker.component.js","sourceRoot":"","sources":["../../../../../tmp/ontimize/components/input/listpicker/o-list-picker.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { CommonModule } from '@angular/common';\nimport { AfterViewInit, Component, ElementRef, EventEmitter, forwardRef, Inject, Injector, NgModule, OnChanges, OnInit, Optional, SimpleChange, ViewChild } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { MatDialog, MatDialogConfig, MatDialogRef, MatInput } from '@angular/material';\nimport { InputConverter } from '../../../decorators';\nimport { OntimizeService } from '../../../services';\nimport { dataServiceFactory } from '../../../services/data-service.provider';\nimport { OSharedModule } from '../../../shared';\nimport { ODialogModule } from '../../dialog/o-dialog.component';\nimport { IFormValueOptions } from '../../form/form-components';\nimport { OFormComponent } from '../../form/o-form.component';\nimport { OSearchInputModule } from '../../input/search-input/o-search-input.component';\nimport { OValueChangeEvent } from '../../o-form-data-component.class';\nimport { OFormControl } from '../o-form-control.class';\nimport { OFormServiceComponent } from '../o-form-service-component.class';\nimport { OListPickerDialogComponent } from './o-list-picker-dialog.component';\n\n\nexport const DEFAULT_INPUTS_O_LIST_PICKER = [\n  ...OFormServiceComponent.DEFAULT_INPUTS_O_FORM_SERVICE_COMPONENT,\n  'filter',\n  'dialogWidth : dialog-width',\n  'dialogHeight : dialog-height',\n  'queryRows: query-rows',\n  'textInputEnabled: text-input-enabled',\n  'dialogDisableClose: dialog-disable-close',\n  'dialogClass: dialog-class'\n];\n\nexport const DEFAULT_OUTPUTS_O_LIST_PICKER = [\n  ...OFormServiceComponent.DEFAULT_OUTPUTS_O_FORM_SERVICE_COMPONENT,\n  'onDialogAccept',\n  'onDialogCancel'\n];\n\n@Component({\n  moduleId: module.id,\n  selector: 'o-list-picker',\n  template: `\n    <div (click)=\"onClickInput($event)\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\" [formGroup]=\"getFormGroup()\"\n      [matTooltip]=\"tooltip\" [matTooltipClass]=\"tooltipClass\" [matTooltipPosition]=\"tooltipPosition\"\n      [matTooltipShowDelay]=\"tooltipShowDelay\" [matTooltipHideDelay]=\"tooltipHideDelay\"\n      class=\"custom-error o-list-picker-content\">\n      <input #inputModel class=\"input-model\" type=\"text\" [id]=\"getAttribute()\" [formControlName]=\"getAttribute()\">\n\n      <mat-form-field [appearance]=\"appearance\" [floatLabel]=\"floatLabel\" [class.custom-width]=\"hasCustomWidth\"\n        [hideRequiredMarker]=\"hideRequiredMarker\" class=\"icon-field\" #innerInputContainer fxFlexFill>\n        <mat-label *ngIf=\"labelVisible\">{{ olabel | oTranslate }}</mat-label>\n        <input #visibleInput matInput type=\"text\" [attr.id]=\"'desc_' + getAttribute()\" [id]=\"'desc_' + getAttribute()\"\n          [formControl]=\"stateCtrl\" [placeholder]=\"placeHolder\" [value]=\"getDescriptionValue()\"\n          (input)=\"onVisibleInputChange($event)\" (focus)=\"innerOnFocus($event)\" (blur)=\"innerOnBlur($event)\"\n          [readonly]=\"isReadOnly || !textInputEnabled\" [required]=\"isRequired\"\n          (keydown.enter)=\"onKeydownEnter(visibleInput.value)\" (change)=\"onChangeEvent($event)\">\n\n        <button type=\"button\" [disabled]=\"isReadOnly || !enabled\" [class.read-only]=\"isReadOnly\" matSuffix mat-icon-button\n          (click)=\"onClickListpicker($event)\">\n          <mat-icon svgIcon=\"ontimize:search\"></mat-icon>\n        </button>\n\n        <button type=\"button\" [disabled]=\"isReadOnly || !enabled\" [class.read-only]=\"isReadOnly\" matSuffix mat-icon-button\n          (click)=\"onClickClearValue($event)\" *ngIf=\"showClearButton\">\n          <mat-icon svgIcon=\"ontimize:clear\"></mat-icon>\n        </button>\n\n        <mat-error *ngIf=\"hasError('required')\" text=\"{{ 'FORM_VALIDATION.REQUIRED' | oTranslate }}\"></mat-error>\n        <mat-error *ngFor=\"let oError of getActiveOErrors()\" text=\"{{ oError.text | oTranslate }}\"></mat-error>\n      </mat-form-field>\n    </div>\n  `,\n  styles: [`\n    .o-list-picker-content .input-model{display:none !important}.o-list-picker-content .mat-button.mat-disabled{cursor:default}\n  `],\n  providers: [\n    { provide: OntimizeService, useFactory: dataServiceFactory, deps: [Injector] },\n    { provide: OFormServiceComponent, useExisting: forwardRef(() => OListPickerComponent) }\n  ],\n  inputs: DEFAULT_INPUTS_O_LIST_PICKER,\n  outputs: DEFAULT_OUTPUTS_O_LIST_PICKER\n})\nexport class OListPickerComponent extends OFormServiceComponent implements AfterViewInit, OnChanges, OnInit {\n\n  public static DEFAULT_INPUTS_O_LIST_PICKER = DEFAULT_INPUTS_O_LIST_PICKER;\n  public static DEFAULT_OUTPUTS_O_LIST_PICKER = DEFAULT_OUTPUTS_O_LIST_PICKER;\n\n  /* Outputs */\n  public onDialogAccept: EventEmitter<any> = new EventEmitter();\n  public onDialogCancel: EventEmitter<any> = new EventEmitter();\n  /* End outputs */\n\n  public stateCtrl: FormControl;\n\n  /* Inputs */\n  @InputConverter()\n  public textInputEnabled: boolean = true;\n  @InputConverter()\n  public dialogDisableClose: boolean = false;\n  @InputConverter()\n  protected filter: boolean = true;\n  protected dialogWidth: string;\n  protected dialogHeight: string = '55%';\n  protected dialogClass: string;\n  @InputConverter()\n  protected queryRows: number;\n\n  /*Override clearButton = true */\n  // @InputConverter()\n  // public clearButton: boolean = true;\n  /* End inputs */\n\n  protected matDialog: MatDialog;\n  protected dialogRef: MatDialogRef<OListPickerDialogComponent>;\n\n  @ViewChild('inputModel') protected inputModel: MatInput;\n  @ViewChild('visibleInput') protected visibleInput: ElementRef;\n  protected visibleInputValue: any;\n\n  protected blurTimer;\n  protected blurDelay = 200;\n  protected blurPrevent = false;\n\n  constructor(\n    @Optional() @Inject(forwardRef(() => OFormComponent)) form: OFormComponent,\n    elRef: ElementRef,\n    injector: Injector) {\n    super(form, elRef, injector);\n    this.matDialog = this.injector.get(MatDialog);\n    this.stateCtrl = new FormControl();\n    /* overwritte clearButton to true */\n    this.clearButton = true;\n  }\n\n  public ngOnInit(): void {\n    this.initialize();\n  }\n\n  public ngOnChanges(changes: { [propName: string]: SimpleChange }): void {\n    super.ngOnChanges(changes);\n    if (typeof (changes['staticData']) !== 'undefined') {\n      this.cacheQueried = true;\n      this.setDataArray(changes['staticData'].currentValue);\n    }\n  }\n\n  public createFormControl(): OFormControl {\n    this._fControl = super.createFormControl();\n    this._fControl.fControlChildren = [this.stateCtrl];\n    return this._fControl;\n  }\n\n  public ensureOFormValue(value: any): void {\n    super.ensureOFormValue(value);\n    // This call make the component querying its data multiple times, but getting description value is needed\n    this.syncDataIndex(false);\n  }\n\n  public setEnabled(value: boolean): void {\n    super.setEnabled(value);\n    value ? this.stateCtrl.enable() : this.stateCtrl.disable();\n  }\n\n  public ngAfterViewInit(): void {\n    super.ngAfterViewInit();\n    if (this.queryOnInit) {\n      this.queryData();\n    } else if (this.queryOnBind) {\n      // TODO do it better. When changing tabs it is necessary to invoke new query\n      this.syncDataIndex();\n    }\n  }\n\n  public getDescriptionValue(): string {\n    let descTxt = '';\n    if (this.descriptionColArray && this._currentIndex !== undefined) {\n      const self = this;\n      this.descriptionColArray.forEach((descCol, index) => {\n        const txt = self.dataArray[self._currentIndex][descCol];\n        if (txt) {\n          descTxt += txt;\n        }\n        if (index < self.descriptionColArray.length - 1) {\n          descTxt += self.separator;\n        }\n      });\n    }\n    return descTxt;\n  }\n\n  public onClickClear(e: Event): void {\n    e.preventDefault();\n    e.stopPropagation();\n    if (!this.isReadOnly && this.enabled) {\n      clearTimeout(this.blurTimer);\n      this.blurPrevent = true;\n      this.setValue(undefined);\n    }\n  }\n\n  public onClickInput(e: Event): void {\n    if (!this.textInputEnabled) {\n      this.onClickListpicker(e);\n    }\n  }\n\n  public onClickListpicker(e: Event): void {\n    e.preventDefault();\n    e.stopPropagation();\n    if (!this.isReadOnly && this.enabled) {\n      clearTimeout(this.blurTimer);\n      this.openDialog();\n    }\n  }\n\n  public onDialogClose(evt: any): void {\n    this.dialogRef = null;\n    this.visibleInputValue = undefined;\n    if (evt instanceof Object && typeof evt[this.valueColumn] !== 'undefined') {\n      const self = this;\n      window.setTimeout(() => {\n        self.setValue(evt[self.valueColumn], { changeType: OValueChangeEvent.USER_CHANGE });\n        if (self._fControl) {\n          self._fControl.markAsTouched();\n          self._fControl.markAsDirty();\n        }\n        self.onDialogAccept.emit();\n      }, 0);\n    } else {\n      this.onDialogCancel.emit();\n    }\n  }\n\n  public innerOnBlur(evt: any): void {\n    if (!this.isReadOnly && this.enabled) {\n      const self = this;\n      this.blurTimer = setTimeout(() => {\n        if (!self.blurPrevent) {\n          self._fControl.markAsTouched();\n          self.onBlur.emit(evt);\n          if (self.visibleInputValue !== undefined && self.visibleInputValue.length > 0) {\n            self.openDialog();\n          } else if (self.visibleInputValue !== undefined) {\n            self.setValue(undefined);\n            self.visibleInputValue = undefined;\n          } else {\n            self._fControl.markAsTouched();\n          }\n        }\n        self.blurPrevent = false;\n      }, this.blurDelay);\n    }\n  }\n\n  public onVisibleInputChange(event: any): void {\n    this.visibleInputValue = event.target.value;\n  }\n\n  public onKeydownEnter(val: any): void {\n    clearTimeout(this.blurTimer);\n    this.blurPrevent = true;\n    this.visibleInputValue = val;\n    this.openDialog();\n  }\n\n  protected setFormValue(val: any, options?: IFormValueOptions, setDirty: boolean = false): void {\n    super.setFormValue(val, options, setDirty);\n    this.stateCtrl.setValue(this.getDescriptionValue());\n  }\n\n  protected openDialog(): void {\n    const cfg: MatDialogConfig = {\n      role: 'dialog',\n      disableClose: this.dialogDisableClose,\n      panelClass: ['cdk-overlay-list-picker', 'o-dialog-class', this.dialogClass],\n      data: {\n        data: this.getDialogDataArray(this.dataArray),\n        filter: this.filter,\n        searchVal: this.visibleInputValue,\n        menuColumns: this.visibleColumns, // TODO: improve this, this is passed to `o-search-input` of the dialog\n        visibleColumns: this.visibleColArray,\n        queryRows: this.queryRows\n      }\n    };\n    if (this.dialogWidth !== undefined) {\n      cfg.width = this.dialogWidth;\n    }\n    if (this.dialogHeight !== undefined) {\n      cfg.height = this.dialogHeight;\n    }\n    this.dialogRef = this.matDialog.open(OListPickerDialogComponent, cfg);\n\n    this.dialogRef.afterClosed().subscribe(result => {\n      this.onDialogClose(result);\n    });\n  }\n\n  protected getDialogDataArray(dataArray: any[]): any[] {\n    const result: any[] = [];\n    const self = this;\n    dataArray.forEach((item, itemIndex) => {\n      let element = '';\n      self.visibleColArray.forEach((visibleCol, index) => {\n        element += item[visibleCol];\n        if ((index + 1) < self.visibleColArray.length) {\n          element += self.separator;\n        }\n      });\n      const newItem = Object.assign({}, item);\n      newItem['_parsedVisibleColumnText'] = element;\n      newItem['_parsedIndex'] = itemIndex;\n      result.push(newItem);\n    });\n    return result;\n  }\n\n}\n\n@NgModule({\n  declarations: [OListPickerDialogComponent, OListPickerComponent],\n  imports: [CommonModule, ODialogModule, OSearchInputModule, OSharedModule],\n  exports: [OListPickerComponent],\n  entryComponents: [OListPickerDialogComponent]\n})\nexport class OListPickerModule { }\n"]}
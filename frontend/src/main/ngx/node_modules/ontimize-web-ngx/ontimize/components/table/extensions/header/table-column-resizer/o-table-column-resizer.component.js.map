{"version":3,"file":"o-table-column-resizer.component.js","sourceRoot":"","sources":["../../../../../../../tmp/ontimize/components/table/extensions/header/table-column-resizer/o-table-column-resizer.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { ChangeDetectionStrategy, Component, ElementRef, HostListener, Inject, NgZone, OnDestroy, OnInit, Renderer2, ViewEncapsulation, forwardRef } from '@angular/core';\nimport { OColumn, OTableComponent } from '../../../o-table.component';\n\nimport { InputConverter } from '../../../../../decorators';\nimport { Util } from '../../../../../util/util';\n\nexport const DEFAULT_INPUTS_O_TABLE_COLUMN_RESIZER = [\n  'column'\n];\n\nexport const DEFAULT_OUTPUTS_O_TABLE_COLUMN_RESIZER = [\n  // 'resizing',\n  // 'resized'\n];\n\n@Component({\n  selector: 'o-table-column-resizer',\n  inputs: DEFAULT_INPUTS_O_TABLE_COLUMN_RESIZER,\n  outputs: DEFAULT_OUTPUTS_O_TABLE_COLUMN_RESIZER,\n  template: `\n    <span class=\"resizer\" (click)=\"onClick($event)\"></span>\n  `,\n  styles: [`\n    .o-table-column-resizer{display:inline-block;width:13px;position:absolute;right:0;top:6px;bottom:6px}.o-table-column-resizer:not(.disabled){cursor:col-resize}.o-table-column-resizer span{height:100%;width:1px;display:block;margin-left:auto;margin-right:auto}.o-table-column-resizer.disabled{cursor:default}\n  `],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    '[class.o-table-column-resizer]': 'true',\n    '[class.disabled]': 'isDisabled',\n  }\n})\nexport class OTableColumnResizerComponent implements OnInit, OnDestroy {\n  public static DEFAULT_INPUTS_O_TABLE_COLUMN_RESIZER = DEFAULT_INPUTS_O_TABLE_COLUMN_RESIZER;\n  public static DEFAULT_OUTPUTS_O_TABLE_COLUMN_RESIZER = DEFAULT_OUTPUTS_O_TABLE_COLUMN_RESIZER;\n\n  column: OColumn;\n  @InputConverter()\n  disabled: boolean = false;\n\n  // resizing = new EventEmitter<boolean>();\n  // resized = new EventEmitter<number>();\n  protected startWidth: any;\n  protected minWidth: any;\n  protected maxWidth: any;\n\n  protected startX: any;\n\n  protected headerEl: any;\n\n  protected nextOColumns: OColumn[];\n\n  protected dragListeners: Array<Function> = [];\n  protected isResizing: boolean = false;\n  protected blockedMinCols = [];\n  protected blockedMaxCols = [];\n\n  protected columnsStartWidth = {};\n\n  constructor(\n    @Inject(forwardRef(() => OTableComponent)) public table: OTableComponent,\n    protected elRef: ElementRef,\n    protected ngZone: NgZone,\n    protected renderer: Renderer2\n  ) { }\n\n  ngOnInit(): void {\n    if (!this.isDisabled) {\n      this.headerEl = this.getHeaderEL();\n      if (this.headerEl) {\n        this.nextOColumns = this.getFollowingOColumns();\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.stopDragging();\n  }\n\n  onClick(event: MouseEvent) {\n    event.stopPropagation();\n    event.preventDefault();\n  }\n\n  get isDisabled(): boolean {\n    return this.column && !this.column.resizable;\n  }\n\n  @HostListener('mousedown', ['$event'])\n  onMousedown(e: MouseEvent) {\n    if (!this.isDisabled) {\n      this.startResize(e);\n    }\n  }\n\n  onMouseup() {\n    this.isResizing = false;\n    this.stopDragging();\n    // this.resize.emit(this.element.clientWidth);\n  }\n\n  protected stopDragging() {\n    this.isResizing = false;\n    this.columnsStartWidth = {};\n    while (this.dragListeners.length > 0) {\n      const fct = this.dragListeners.pop();\n      if (fct) {\n        fct();\n      }\n    }\n  }\n\n  startResize(startEvent: MouseEvent): void {\n    startEvent.preventDefault();\n    startEvent.stopPropagation();\n    if (!Util.isDefined(this.headerEl)) {\n      return;\n    }\n    this.startX = startEvent.screenX;\n    this.startWidth = this.column.DOMWidth;\n    this.minWidth = this.column.getMinWidthValue();\n    this.initializeWidthData();\n    this.ngZone.runOutsideAngular(() => {\n      this.dragListeners.push(this.renderer.listen('document', 'mouseup', (e: MouseEvent) => this.stopDragging()));\n    });\n\n    if (!(startEvent instanceof MouseEvent)) {\n      return;\n    }\n    this.ngZone.runOutsideAngular(() => {\n      this.dragListeners.push(this.renderer.listen('document', 'mousemove', (e: MouseEvent) => this.resizeEvent(e)));\n    });\n    this.isResizing = true;\n  }\n\n  protected resizeEvent(event: MouseEvent): void {\n    if (!this.isResizing || !(event instanceof MouseEvent)) {\n      return;\n    }\n    const movementX = (event.screenX - this.startX);\n    if (movementX === 0) {\n      return;\n    }\n    let newColumnWidth = this.startWidth + movementX;\n\n    const lessThanMin = newColumnWidth < this.minWidth;\n    const moreThanMax = newColumnWidth > this.maxWidth;\n    if (lessThanMin || moreThanMax) {\n      return;\n    }\n    if (!this.table.horizontalScroll) {\n      this.calculateNewColumnsWidth(movementX, newColumnWidth);\n      this.updateBlockedCols();\n    } else {\n      this.column.setWidth(newColumnWidth);\n    }\n    this.table.cd.detectChanges();\n  }\n\n  protected getHeaderEL(): Node {\n    let element;\n    let currentEl: Node = this.elRef.nativeElement.parentElement;\n    while (!element && currentEl) {\n      if (currentEl.nodeName === 'TH') {\n        element = currentEl;\n      } else {\n        currentEl = currentEl.parentElement;\n      }\n    }\n    return currentEl;\n  }\n\n  protected getFollowingOColumns(): OColumn[] {\n    let result: OColumn[] = [];\n    let nextTh: any = this.headerEl.nextSibling;\n    const self = this;\n    while (nextTh) {\n      const oCol: OColumn = self.table.getOColumnFromTh(nextTh);\n      if (Util.isDefined(oCol)) {\n        result.push(oCol);\n      }\n      nextTh = nextTh.nextSibling;\n    }\n    return result;\n  }\n\n  protected updateBlockedCols() {\n    const self = this;\n    this.blockedMinCols = [];\n    this.blockedMaxCols = [];\n    const columns = [this.column, ...this.nextOColumns];\n    columns.forEach(oCol => {\n      if (oCol.DOMWidth <= oCol.getMinWidthValue()) {\n        self.blockedMinCols.push(oCol.attr);\n      }\n      const maxW = oCol.getMaxWidthValue();\n      if (Util.isDefined(maxW) && oCol.DOMWidth >= maxW) {\n        self.blockedMaxCols.push(oCol.attr);\n      }\n    });\n  }\n\n  protected calculateNewColumnsWidth(movementX: number, newColumnWidth: number) {\n    const positive = (movementX > 0);\n    if (positive) {\n      this.calculateUsingNextColumnsRestrictions(movementX, newColumnWidth);\n    } else {\n      this.calculateUsingOwnColumnRestriction(movementX, newColumnWidth);\n    }\n  }\n\n  protected calculateUsingNextColumnsRestrictions(movementX: number, newColumnWidth: number) {\n    const availableCols = this.nextOColumns.length - this.blockedMinCols.length;\n    if (availableCols <= 0) {\n      return;\n    }\n    let widthRatio = movementX / availableCols;\n    let cols = this.nextOColumns.filter((oCol: OColumn) => this.blockedMinCols.indexOf(oCol.attr) === -1);\n    cols.forEach(oCol => {\n      let newWidth = (this.columnsStartWidth[oCol.attr] - widthRatio);\n      let minWidth = oCol.getMinWidthValue();\n      if (newWidth <= minWidth) {\n        newWidth = minWidth;\n        this.blockedMinCols.push(oCol.attr);\n      }\n      oCol.setWidth(newWidth);\n    });\n    this.column.setWidth(newColumnWidth);\n  }\n\n  protected calculateUsingOwnColumnRestriction(movementX: number, newColumnWidth: number) {\n    let widthRatio = Math.abs(movementX) / this.nextOColumns.length;\n    let widthDifference = 0;\n    if (widthRatio > 0 && this.blockedMaxCols.length < this.nextOColumns.length) {\n      let cols = this.nextOColumns.filter((oCol: OColumn) => this.blockedMaxCols.indexOf(oCol.attr) === -1);\n      cols.forEach(oCol => {\n        let newWidth = (this.columnsStartWidth[oCol.attr] + widthRatio);\n        let maxWidth = oCol.getMaxWidthValue();\n        if (maxWidth && newWidth > maxWidth) {\n          const diff = newWidth - maxWidth;\n          newWidth = maxWidth;\n          this.blockedMaxCols.push(oCol.attr);\n          const notBlocked = this.nextOColumns.length - this.blockedMaxCols.length;\n          widthRatio += notBlocked > 0 ? Math.floor(diff / notBlocked) : 0;\n        }\n        widthDifference += newWidth - oCol.DOMWidth;\n        oCol.setWidth(newWidth);\n      });\n    }\n    const newWidth = Math.min(this.startWidth - widthDifference, newColumnWidth);\n    this.column.setWidth(newWidth);\n  }\n\n  protected initializeWidthData() {\n    let maxWidth = this.column.getMaxWidthValue();\n    let nextColMinWidthAcum = 0;\n    let nextColWidthAcum = 0;\n    this.nextOColumns.forEach((col: OColumn) => {\n      nextColMinWidthAcum += col.getMinWidthValue();\n      nextColWidthAcum += col.DOMWidth;\n      this.columnsStartWidth[col.attr] = col.DOMWidth;\n    });\n    const calcMaxWidth = this.headerEl.clientWidth + (nextColWidthAcum - nextColMinWidthAcum);\n    if (Util.isDefined(maxWidth)) {\n      maxWidth = Math.min(maxWidth, calcMaxWidth);\n    } else {\n      maxWidth = calcMaxWidth;\n    }\n    this.maxWidth = maxWidth;\n  }\n}\n"]}
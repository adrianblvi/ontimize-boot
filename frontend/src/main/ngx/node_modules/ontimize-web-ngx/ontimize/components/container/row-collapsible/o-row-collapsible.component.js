var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { CommonModule } from '@angular/common';
import { Component, ElementRef, forwardRef, Inject, Injector, NgModule, Optional, ViewEncapsulation } from '@angular/core';
import { MAT_FORM_FIELD_DEFAULT_OPTIONS } from '@angular/material';
import { OSharedModule } from '../../../shared/shared.module';
import { OFormComponent } from '../../form/form-components';
import { OContainerCollapsibleComponent } from '../o-container-collapsible-component.class';
export var DEFAULT_INPUTS_O_ROW_COLLAPSIBLE = OContainerCollapsibleComponent.DEFAULT_INPUTS_O_CONTAINER_COLLAPSIBLE.slice();
var ORowCollapsibleComponent = (function (_super) {
    __extends(ORowCollapsibleComponent, _super);
    function ORowCollapsibleComponent(form, elRef, injector, matFormDefaultOption) {
        var _this = _super.call(this, form, elRef, injector, matFormDefaultOption) || this;
        _this.form = form;
        _this.elRef = elRef;
        _this.injector = injector;
        _this.matFormDefaultOption = matFormDefaultOption;
        return _this;
    }
    ORowCollapsibleComponent.DEFAULT_INPUTS_O_ROW_COLLAPSIBLE = DEFAULT_INPUTS_O_ROW_COLLAPSIBLE;
    ORowCollapsibleComponent.decorators = [
        { type: Component, args: [{
                    moduleId: module.id,
                    selector: 'o-row-collapsible',
                    template: "\n    <mat-expansion-panel #expPanel [expanded]=\"expanded\" class=\"o-container\">\n      <mat-expansion-panel-header #containerTitle [expandedHeight]=\"expandedHeight\" [collapsedHeight]=\"collapsedHeight\">\n        <mat-panel-title fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"o-container-title\">\n          <mat-icon *ngIf=\"icon\">{{ icon }}</mat-icon>\n          <span *ngIf=\"title\">{{ title | oTranslate }}</span>\n        </mat-panel-title>\n        <mat-panel-description fxLayout=\"row\" fxLayoutAlign=\"start center\">\n          <span>{{ description | oTranslate }}</span>\n        </mat-panel-description>\n      </mat-expansion-panel-header>\n      <div #containerContent id=\"innerRow\" fxLayout=\"row\" fxLayoutAlign=\"{{ layoutAlign }}\" fxLayoutGap=\"{{ layoutGap }}\"\n        class=\"o-container-scroll o-scroll\" fxFlex=\"grow\">\n        <ng-content></ng-content>\n      </div>\n    </mat-expansion-panel>\n    <div #container [class.o-container-outline-expanded]=\"expPanel.expanded\" class=\"o-container-outline\"\n      *ngIf=\"isAppearanceOutline()\">\n      <div class=\"o-container-outline-start\"></div>\n      <div class=\"o-container-outline-gap-title\"></div>\n      <div class=\"o-container-outline-gap-empty1\"></div>\n      <div class=\"o-container-outline-gap-description\"></div>\n      <div class=\"o-container-outline-gap-empty2\"></div>\n      <div class=\"o-container-outline-gap-icon\"></div>\n      <div class=\"o-container-outline-end\"></div>\n    </div>\n  ",
                    styles: ["\n\n  "],
                    inputs: DEFAULT_INPUTS_O_ROW_COLLAPSIBLE,
                    encapsulation: ViewEncapsulation.None,
                    host: {
                        '[class.o-row-collapsible]': 'true',
                        '[class.o-appearance-outline]': 'isAppearanceOutline()',
                        '[class.o-appearance-outline-title]': 'hasTitleInAppearanceOutline()'
                    }
                },] },
    ];
    ORowCollapsibleComponent.ctorParameters = function () { return [
        { type: OFormComponent, decorators: [{ type: Optional }, { type: Inject, args: [forwardRef(function () { return OFormComponent; }),] }] },
        { type: ElementRef },
        { type: Injector },
        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD_DEFAULT_OPTIONS,] }] }
    ]; };
    return ORowCollapsibleComponent;
}(OContainerCollapsibleComponent));
export { ORowCollapsibleComponent };
var ORowCollapsibleModule = (function () {
    function ORowCollapsibleModule() {
    }
    ORowCollapsibleModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [ORowCollapsibleComponent],
                    imports: [CommonModule, OSharedModule],
                    exports: [ORowCollapsibleComponent]
                },] },
    ];
    return ORowCollapsibleModule;
}());
export { ORowCollapsibleModule };
//# sourceMappingURL=o-row-collapsible.component.js.map
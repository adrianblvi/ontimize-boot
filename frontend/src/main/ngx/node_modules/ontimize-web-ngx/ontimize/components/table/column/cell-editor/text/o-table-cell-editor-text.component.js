var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { Component, Injector, ViewChild, TemplateRef, ElementRef, ChangeDetectionStrategy } from '@angular/core';
import { OBaseTableCellEditor } from '../o-base-table-cell-editor.class';
export var DEFAULT_INPUTS_O_TABLE_CELL_EDITOR_TEXT = OBaseTableCellEditor.DEFAULT_INPUTS_O_TABLE_CELL_EDITOR.slice();
export var DEFAULT_OUTPUTS_O_TABLE_CELL_EDITOR_TEXT = OBaseTableCellEditor.DEFAULT_OUTPUTS_O_TABLE_CELL_EDITOR.slice();
var OTableCellEditorTextComponent = (function (_super) {
    __extends(OTableCellEditorTextComponent, _super);
    function OTableCellEditorTextComponent(injector) {
        var _this = _super.call(this, injector) || this;
        _this.injector = injector;
        return _this;
    }
    OTableCellEditorTextComponent.DEFAULT_INPUTS_O_TABLE_CELL_EDITOR_TEXT = DEFAULT_INPUTS_O_TABLE_CELL_EDITOR_TEXT;
    OTableCellEditorTextComponent.DEFAULT_OUTPUTS_O_TABLE_CELL_EDITOR_TEXT = DEFAULT_OUTPUTS_O_TABLE_CELL_EDITOR_TEXT;
    OTableCellEditorTextComponent.decorators = [
        { type: Component, args: [{
                    moduleId: module.id,
                    selector: 'o-table-cell-editor-text',
                    template: "\n    <ng-template #templateref let-cellvalue=\"cellvalue\" let-rowvalue=\"rowvalue\">\n      <div [formGroup]=\"formGroup\">\n        <mat-form-field floatLabel=\"never\">\n          <input #input matInput type=\"text\" [placeholder]=\"getPlaceholder()\" [formControl]=\"formControl\"\n            [required]=\"orequired\">\n          <mat-error *ngIf=\"hasError('required')\">{{ 'FORM_VALIDATION.REQUIRED' | oTranslate }}</mat-error>\n        </mat-form-field>\n      </div>\n    </ng-template>\n  ",
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    inputs: DEFAULT_INPUTS_O_TABLE_CELL_EDITOR_TEXT,
                    outputs: DEFAULT_OUTPUTS_O_TABLE_CELL_EDITOR_TEXT
                },] },
    ];
    OTableCellEditorTextComponent.ctorParameters = function () { return [
        { type: Injector }
    ]; };
    OTableCellEditorTextComponent.propDecorators = {
        templateref: [{ type: ViewChild, args: ['templateref', { read: TemplateRef },] }],
        inputRef: [{ type: ViewChild, args: ['input',] }]
    };
    return OTableCellEditorTextComponent;
}(OBaseTableCellEditor));
export { OTableCellEditorTextComponent };
//# sourceMappingURL=o-table-cell-editor-text.component.js.map
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { Component, Inject, forwardRef, Injector, ComponentFactoryResolver, ChangeDetectionStrategy } from '@angular/core';
import { OTableComponent } from '../../o-table.component';
import { OTableColumnComponent, DEFAULT_INPUTS_O_TABLE_COLUMN } from '../o-table-column.component';
export var DEFAULT_INPUTS_O_TABLE_COLUMN_CALCULATED = DEFAULT_INPUTS_O_TABLE_COLUMN.concat([
    'operation',
    'functionOperation: operation-function'
]);
var OColumnCalculated = (function () {
    function OColumnCalculated() {
    }
    return OColumnCalculated;
}());
export { OColumnCalculated };
var OTableColumnCalculatedComponent = (function (_super) {
    __extends(OTableColumnCalculatedComponent, _super);
    function OTableColumnCalculatedComponent(table, resolver, injector) {
        var _this = _super.call(this, table, resolver, injector) || this;
        _this.table = table;
        _this.resolver = resolver;
        _this.injector = injector;
        return _this;
    }
    OTableColumnCalculatedComponent.decorators = [
        { type: Component, args: [{
                    moduleId: module.id,
                    selector: 'o-table-column-calculated',
                    template: "\n    <span #container>\n    </span>\n  ",
                    inputs: DEFAULT_INPUTS_O_TABLE_COLUMN_CALCULATED,
                    providers: [
                        {
                            provide: OTableColumnComponent,
                            useExisting: forwardRef(function () { return OTableColumnCalculatedComponent; })
                        }
                    ],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                },] },
    ];
    OTableColumnCalculatedComponent.ctorParameters = function () { return [
        { type: OTableComponent, decorators: [{ type: Inject, args: [forwardRef(function () { return OTableComponent; }),] }] },
        { type: ComponentFactoryResolver },
        { type: Injector }
    ]; };
    return OTableColumnCalculatedComponent;
}(OTableColumnComponent));
export { OTableColumnCalculatedComponent };
//# sourceMappingURL=o-table-column-calculated.component.js.map
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { CommonModule } from '@angular/common';
import { Component, ElementRef, forwardRef, Inject, Injector, NgModule, Optional, ViewEncapsulation } from '@angular/core';
import { InputConverter } from '../../../decorators';
import { OSharedModule } from '../../../shared';
import { OFormComponent } from '../../form/o-form.component';
import { DEFAULT_INPUTS_O_TEXT_INPUT, DEFAULT_OUTPUTS_O_TEXT_INPUT, OTextInputComponent } from '../text-input/o-text-input.component';
export var DEFAULT_INPUTS_O_TEXTAREA_INPUT = DEFAULT_INPUTS_O_TEXT_INPUT.concat([
    'columns',
    'rows'
]);
export var DEFAULT_OUTPUTS_O_TEXTAREA_INPUT = DEFAULT_OUTPUTS_O_TEXT_INPUT.slice();
var OTextareaInputComponent = (function (_super) {
    __extends(OTextareaInputComponent, _super);
    function OTextareaInputComponent(form, elRef, injector) {
        var _this = _super.call(this, form, elRef, injector) || this;
        _this.rows = 5;
        _this.columns = 3;
        return _this;
    }
    OTextareaInputComponent.prototype.isResizable = function () {
        var resizable = true;
        if (!this.enabled || this.isReadOnly) {
            resizable = false;
        }
        return resizable;
    };
    OTextareaInputComponent.DEFAULT_INPUTS_O_TEXTAREA_INPUT = DEFAULT_INPUTS_O_TEXTAREA_INPUT;
    OTextareaInputComponent.DEFAULT_OUTPUTS_O_TEXTAREA_INPUT = DEFAULT_OUTPUTS_O_TEXTAREA_INPUT;
    OTextareaInputComponent.decorators = [
        { type: Component, args: [{
                    moduleId: module.id,
                    selector: 'o-textarea-input',
                    template: "\n    <div [formGroup]=\"getFormGroup()\" [matTooltip]=\"tooltip\" [matTooltipClass]=\"tooltipClass\"\n      [matTooltipPosition]=\"tooltipPosition\" [matTooltipShowDelay]=\"tooltipShowDelay\"\n      [matTooltipHideDelay]=\"tooltipHideDelay\">\n      <mat-form-field [appearance]=\"appearance\" [floatLabel]=\"floatLabel\" [hideRequiredMarker]=\"hideRequiredMarker\"\n        [class.custom-width]=\"hasCustomWidth\" fxFlexFill>\n        <mat-label *ngIf=\"labelVisible\">{{ olabel | oTranslate }}</mat-label>\n        <textarea matInput class=\"mat-textarea\" type=\"text\" [id]=\"getAttribute()\" [formControlName]=\"getAttribute()\"\n          [placeholder]=\"placeHolder\" (focus)=\"innerOnFocus($event)\" (blur)=\"innerOnBlur($event)\" [readonly]=\"isReadOnly\"\n          [class.no-resize]=\"!isResizable()\" [rows]=\"rows\" [cols]=\"columns\" [required]=\"isRequired\"\n          (change)=\"onChangeEvent($event)\"></textarea>\n        <mat-error *ngIf=\"hasError('required')\" text=\"{{ 'FORM_VALIDATION.REQUIRED' | oTranslate }}\"></mat-error>\n        <mat-error *ngFor=\"let oError of getActiveOErrors()\" text=\"{{ oError.text | oTranslate }}\"></mat-error>\n      </mat-form-field>\n    </div>\n  ",
                    styles: ["\n    .mat-textarea.no-resize{resize:none}.mat-textarea{resize:vertical}\n  "],
                    inputs: DEFAULT_INPUTS_O_TEXTAREA_INPUT,
                    outputs: DEFAULT_OUTPUTS_O_TEXTAREA_INPUT,
                    encapsulation: ViewEncapsulation.None
                },] },
    ];
    OTextareaInputComponent.ctorParameters = function () { return [
        { type: OFormComponent, decorators: [{ type: Optional }, { type: Inject, args: [forwardRef(function () { return OFormComponent; }),] }] },
        { type: ElementRef },
        { type: Injector }
    ]; };
    __decorate([
        InputConverter(),
        __metadata("design:type", Number)
    ], OTextareaInputComponent.prototype, "rows", void 0);
    __decorate([
        InputConverter(),
        __metadata("design:type", Number)
    ], OTextareaInputComponent.prototype, "columns", void 0);
    return OTextareaInputComponent;
}(OTextInputComponent));
export { OTextareaInputComponent };
var OTextareaInputModule = (function () {
    function OTextareaInputModule() {
    }
    OTextareaInputModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [OTextareaInputComponent],
                    imports: [CommonModule, OSharedModule],
                    exports: [OTextareaInputComponent]
                },] },
    ];
    return OTextareaInputModule;
}());
export { OTextareaInputModule };
//# sourceMappingURL=o-textarea-input.component.js.map
import { Component, Injector, Optional, Inject, forwardRef, NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { OSharedModule } from '../../../shared';
import { OValidatorComponent } from './o-validator.component';
export var DEFAULT_INPUTS_O_ERROR = [
    'name',
    'text'
];
var OErrorComponent = (function () {
    function OErrorComponent(oValidator, injector) {
        this.oValidator = oValidator;
        this.injector = injector;
    }
    OErrorComponent.prototype.ngOnInit = function () {
        this.registerValidatorError();
    };
    OErrorComponent.prototype.registerValidatorError = function () {
        if (this.oValidator) {
            this.oValidator.registerError(this);
        }
    };
    OErrorComponent.prototype.getName = function () {
        return this.name;
    };
    OErrorComponent.prototype.getText = function () {
        return this.text;
    };
    OErrorComponent.DEFAULT_INPUTS_O_ERROR = DEFAULT_INPUTS_O_ERROR;
    OErrorComponent.decorators = [
        { type: Component, args: [{
                    moduleId: module.id,
                    selector: 'o-error',
                    template: ' ',
                    inputs: DEFAULT_INPUTS_O_ERROR
                },] },
    ];
    OErrorComponent.ctorParameters = function () { return [
        { type: OValidatorComponent, decorators: [{ type: Optional }, { type: Inject, args: [forwardRef(function () { return OValidatorComponent; }),] }] },
        { type: Injector }
    ]; };
    return OErrorComponent;
}());
export { OErrorComponent };
var OErrorModule = (function () {
    function OErrorModule() {
    }
    OErrorModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [OErrorComponent],
                    imports: [OSharedModule, CommonModule],
                    exports: [OErrorComponent]
                },] },
    ];
    return OErrorModule;
}());
export { OErrorModule };
//# sourceMappingURL=o-error.component.js.map
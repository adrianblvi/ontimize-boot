var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { ChangeDetectionStrategy, Component, Injector, TemplateRef, ViewChild } from '@angular/core';
import { OMomentPipe } from '../../../../../pipes';
import { OBaseTableCellRenderer } from '../o-base-table-cell-renderer.class';
import { Util } from '../../../../../util/util';
export var DEFAULT_INPUTS_O_TABLE_CELL_RENDERER_TIME = [
    'format'
];
var OTableCellRendererTimeComponent = (function (_super) {
    __extends(OTableCellRendererTimeComponent, _super);
    function OTableCellRendererTimeComponent(injector) {
        var _this = _super.call(this, injector) || this;
        _this.injector = injector;
        _this._format = 'L HH:mm a';
        _this.tableColumn.type = 'time';
        _this.setComponentPipe();
        return _this;
    }
    Object.defineProperty(OTableCellRendererTimeComponent.prototype, "format", {
        set: function (value) {
            if (Util.isDefined(value)) {
                this._format = value;
            }
        },
        enumerable: true,
        configurable: true
    });
    OTableCellRendererTimeComponent.prototype.setComponentPipe = function () {
        this.componentPipe = new OMomentPipe(this.injector);
    };
    OTableCellRendererTimeComponent.prototype.ngOnInit = function () {
        this.pipeArguments = {
            format: this._format
        };
    };
    OTableCellRendererTimeComponent.DEFAULT_INPUTS_O_TABLE_CELL_RENDERER_TIME = DEFAULT_INPUTS_O_TABLE_CELL_RENDERER_TIME;
    OTableCellRendererTimeComponent.decorators = [
        { type: Component, args: [{
                    moduleId: module.id,
                    selector: 'o-table-cell-renderer-time',
                    template: "\n    <ng-template #templateref let-cellvalue=\"cellvalue\">\n       {{getCellData(cellvalue)}}\n    </ng-template>\n  ",
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    inputs: DEFAULT_INPUTS_O_TABLE_CELL_RENDERER_TIME
                },] },
    ];
    OTableCellRendererTimeComponent.ctorParameters = function () { return [
        { type: Injector }
    ]; };
    OTableCellRendererTimeComponent.propDecorators = {
        templateref: [{ type: ViewChild, args: ['templateref', { read: TemplateRef },] }]
    };
    return OTableCellRendererTimeComponent;
}(OBaseTableCellRenderer));
export { OTableCellRendererTimeComponent };
//# sourceMappingURL=o-table-cell-renderer-time.component.js.map
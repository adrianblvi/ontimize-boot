[{"__symbolic":"module","version":4,"metadata":{"DEFAULT_INPUTS_O_LIST_PICKER":["data","visibleColumns: visible-columns","filter"],"OListPickerDialogComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":12,"character":1},"arguments":[{"moduleId":{"__symbolic":"select","expression":{"__symbolic":"reference","name":"module"},"member":"id"},"selector":"o-list-picker-dialog","template":"\n    <div class=\"title-container\" *ngIf=\"filter\">\n      <o-search-input #searchInput [columns]=\"menuColumns\" show-menu=\"no\" float-label=\"never\" (onSearch)=\"onFilterList($event)\"\n        class=\"o-list-picker-search\"></o-search-input>\n    </div>\n    <div mat-dialog-content (scroll)=\"onScroll($event)\" [class.o-list-picker-has-filter]=\"filter\" fxFlex>\n      <mat-list>\n        <mat-list-item *ngIf=\"isEmptyData()\">\n          {{ 'LIST.EMPTY' | oTranslate }}\n          <ng-container *ngIf=\"filter && searchInput && searchInput.getValue() && searchInput.getValue().length > 0\">\n            {{ 'LIST.EMPTY_USING_FILTER' | oTranslate : { values: [searchInput.getValue()] } }}\n          </ng-container>\n        </mat-list-item>\n        <mat-list-item (click)=\"onClickListItem($event, item)\" *ngFor=\"let item of visibleData; trackBy: trackByFn\">\n          <span>{{ item['_parsedVisibleColumnText'] }}</span>\n          <mat-divider></mat-divider>\n        </mat-list-item>\n      </mat-list>\n    </div>\n    <mat-dialog-actions align=\"end\">\n      <button type=\"button\" mat-stroked-button mat-dialog-close>{{ 'CANCEL' | oTranslate | uppercase }}</button>\n    </mat-dialog-actions>\n  ","styles":["\n    .cdk-overlay-list-picker .mat-dialog-container{padding:0}.cdk-overlay-list-picker .mat-dialog-container .o-list-picker-dialog{display:flex;flex-direction:column;height:100%}.cdk-overlay-list-picker .mat-dialog-container .o-list-picker-dialog .title-container{padding:5px 20px}.cdk-overlay-list-picker .mat-dialog-container .o-list-picker-dialog .title-container .o-search-input mat-form-field .mat-form-field-wrapper{padding-bottom:0}.cdk-overlay-list-picker .mat-dialog-container .o-list-picker-dialog .title-container .o-search-input mat-form-field .mat-form-field-wrapper .mat-form-field-underline{display:none}.cdk-overlay-list-picker .mat-dialog-container .o-list-picker-dialog .mat-dialog-content{margin:0}.cdk-overlay-list-picker .mat-dialog-container .o-list-picker-dialog .mat-dialog-content mat-list mat-list-item{cursor:pointer}.cdk-overlay-list-picker .mat-dialog-container .o-list-picker-dialog .mat-dialog-actions{padding-top:12px;margin:0 12px}\n  "],"inputs":{"__symbolic":"reference","name":"DEFAULT_INPUTS_O_LIST_PICKER"},"encapsulation":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewEncapsulation","line":42,"character":17},"member":"None"},"host":{"[class.o-list-picker-dialog]":"true","$quoted$":["[class.o-list-picker-dialog]"]}}]}],"members":{"searchInput":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":53,"character":3},"arguments":["searchInput"]}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[null,null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":67,"character":5},"arguments":[{"__symbolic":"reference","module":"@angular/material","name":"MAT_DIALOG_DATA","line":67,"character":12}]}]],"parameters":[{"__symbolic":"reference","module":"@angular/material","name":"MatDialogRef","line":65,"character":22,"arguments":[{"__symbolic":"reference","name":"OListPickerDialogComponent"}]},{"__symbolic":"reference","module":"@angular/core","name":"Injector","line":66,"character":24},{"__symbolic":"reference","name":"any"}]}],"ngAfterViewInit":[{"__symbolic":"method"}],"onClickListItem":[{"__symbolic":"method"}],"trackByFn":[{"__symbolic":"method"}],"onScroll":[{"__symbolic":"method"}],"onFilterList":[{"__symbolic":"method"}],"isEmptyData":[{"__symbolic":"method"}],"transform":[{"__symbolic":"method"}],"_isBlank":[{"__symbolic":"method"}]}}}}]
{"version":3,"file":"o-table-base-dialog.class.js","sourceRoot":"","sources":["../../../../../../tmp/ontimize/components/table/extensions/dialog/o-table-base-dialog.class.ts"],"names":[],"mappings":"AACA,OAAO,EAAY,SAAS,EAAE,YAAY,EAAE,MAAM,eAAe,CAAC;AAElE,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,mBAAmB,CAAC;AAChD,OAAO,EAAE,mBAAmB,EAAE,kBAAkB,EAAoB,MAAM,oBAAoB,CAAC;AAE/F;IAOE,+BACY,QAAkB;QAAlB,aAAQ,GAAR,QAAQ,CAAU;QAE5B,IAAI;YACF,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,mBAAmB,CAAC,IAAI,EAAE,CAAC;SAClE;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;SACxB;IACH,CAAC;IAES,8CAAc,GAAxB,UAAyB,WAA4B;QACnD,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;IACjC,CAAC;IAED,sBAAI,+CAAY;aAAhB;YACE,IAAI,MAAc,CAAC;YACnB,IAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,KAAK,KAAK,CAAC,gBAAgB,CAAC;YACpE,IAAI,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,IAAI,CAAC,oBAAoB,EAAE,EAAE;gBAChF,MAAM,GAAG,uBAAuB,CAAC;aAClC;YACD,OAAO,MAAM,CAAC;QAChB,CAAC;;;OAAA;IAED,sBAAI,8CAAW;aAAf;YACE,IAAI,MAAc,CAAC;YACnB,IAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,KAAK,KAAK,CAAC,gBAAgB,CAAC;YACpE,IAAI,SAAS,IAAI,IAAI,CAAC,oBAAoB,EAAE,IAAI,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,iBAAiB,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC3G,MAAM,GAAG,EAAE,CAAC;gBACZ,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,UAAC,SAA6B;oBAC3D,MAAM,IAAO,SAAS,CAAC,IAAI,OAAI,CAAC;gBAClC,CAAC,CAAC,CAAC;aACJ;YACD,OAAO,MAAM,CAAC;QAChB,CAAC;;;OAAA;IAES,oDAAoB,GAA9B;QACE,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,OAAO,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;IACjH,CAAC;;oCAzCA,YAAY,SAAC,kBAAkB;;IA0ClC,4BAAC;CAAA,AA7CD,IA6CC;SA7CY,qBAAqB","sourcesContent":["\nimport { Injector, QueryList, ViewChildren } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\nimport { Codes, Util } from '../../../../utils';\nimport { O_MAT_ERROR_OPTIONS, OMatErrorComponent, OMatErrorOptions } from '../../../../shared';\n\nexport class OTableBaseDialogClass {\n\n  protected errorOptions: OMatErrorOptions;\n  @ViewChildren(OMatErrorComponent)\n  protected oMatErrorChildren: QueryList<OMatErrorComponent>;\n  protected formControl: AbstractControl;\n\n  constructor(\n    protected injector: Injector\n  ) {\n    try {\n      this.errorOptions = this.injector.get(O_MAT_ERROR_OPTIONS) || {};\n    } catch (e) {\n      this.errorOptions = {};\n    }\n  }\n\n  protected setFormControl(formControl: AbstractControl) {\n    this.formControl = formControl;\n  }\n\n  get tooltipClass(): string {\n    let result: string;\n    const liteError = this.errorOptions.type === Codes.O_MAT_ERROR_LITE;\n    if (liteError && Util.isDefined(this.formControl) && this.formControlHasErrors()) {\n      result = `o-tooltip o-mat-error`;\n    }\n    return result;\n  }\n\n  get tooltipText(): string {\n    let result: string;\n    const liteError = this.errorOptions.type === Codes.O_MAT_ERROR_LITE;\n    if (liteError && this.formControlHasErrors() && this.oMatErrorChildren && this.oMatErrorChildren.length > 0) {\n      result = '';\n      this.oMatErrorChildren.forEach((oMatError: OMatErrorComponent) => {\n        result += `${oMatError.text}\\n`;\n      });\n    }\n    return result;\n  }\n\n  protected formControlHasErrors(): boolean {\n    return Util.isDefined(this.formControl) && this.formControl.touched && Util.isDefined(this.formControl.errors);\n  }\n}\n"]}
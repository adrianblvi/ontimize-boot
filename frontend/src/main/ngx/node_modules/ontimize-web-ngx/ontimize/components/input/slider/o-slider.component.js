var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { CommonModule } from '@angular/common';
import { Component, ElementRef, forwardRef, Inject, Injector, NgModule, Optional, ViewEncapsulation } from '@angular/core';
import { OFormComponent } from '../../../components';
import { InputConverter } from '../../../decorators';
import { OSharedModule } from '../../../shared';
import { DEFAULT_INPUTS_O_FORM_DATA_COMPONENT, DEFAULT_OUTPUTS_O_FORM_DATA_COMPONENT, OFormDataComponent } from '../../o-form-data-component.class';
export var DEFAULT_INPUTS_O_SLIDER_INPUT = DEFAULT_INPUTS_O_FORM_DATA_COMPONENT.concat([
    'color',
    'invert',
    'max',
    'min',
    'step',
    'thumbLabel:thumb-label',
    'tickInterval:tick-interval',
    'layout',
    'oDisplayWith:display-with'
]);
export var DEFAULT_OUTPUTS_O_SLIDER_INPUT = DEFAULT_OUTPUTS_O_FORM_DATA_COMPONENT.slice();
var OSliderComponent = (function (_super) {
    __extends(OSliderComponent, _super);
    function OSliderComponent(form, elRef, injector) {
        var _this = _super.call(this, form, elRef, injector) || this;
        _this.layout = 'row';
        _this.vertical = false;
        _this.invert = false;
        _this.thumbLabel = false;
        _this.step = 1;
        _this._tickInterval = 0;
        return _this;
    }
    Object.defineProperty(OSliderComponent.prototype, "tickInterval", {
        get: function () {
            return this._tickInterval;
        },
        set: function (value) {
            this._tickInterval = value;
        },
        enumerable: true,
        configurable: true
    });
    OSliderComponent.prototype.onClickBlocker = function (evt) {
        evt.stopPropagation();
    };
    OSliderComponent.DEFAULT_INPUTS_O_SLIDER_INPUT = DEFAULT_INPUTS_O_SLIDER_INPUT;
    OSliderComponent.DEFAULT_OUTPUTS_O_SLIDER_INPUT = DEFAULT_OUTPUTS_O_SLIDER_INPUT;
    OSliderComponent.decorators = [
        { type: Component, args: [{
                    moduleId: module.id,
                    selector: 'o-slider',
                    host: {
                        'class': 'o-slider'
                    },
                    template: "\n    <div [formGroup]=\"getFormGroup()\" class=\"relative\" [matTooltip]=\"tooltip\" [matTooltipClass]=\"tooltipClass\"\n      [matTooltipPosition]=\"tooltipPosition\" [matTooltipShowDelay]=\"tooltipShowDelay\" [matTooltipHideDelay]=\"tooltipHideDelay\">\n      <mat-slider [color]=\"color\" [invert]=\"invert\" [max]=\"max\" [min]=\"min\" [step]=\"step\" [thumbLabel]=\"thumbLabel\"\n        [tickInterval]=\"tickInterval\" [vertical]=\"layout==='column'\" [id]=\"getAttribute()\"\n        [formControlName]=\"getAttribute()\" (change)=\"onChangeEvent($event)\" [displayWith]=\"oDisplayWith\"></mat-slider>\n      <div *ngIf=\"isReadOnly\" (click)=\"onClickBlocker($event)\" class=\"read-only-blocker\" fxFill></div>\n    </div>\n  ",
                    styles: ["\n    .o-slider mat-slider{width:100%}.o-slider .read-only-blocker{z-index:2;position:absolute;top:0;left:0;right:0}\n  "],
                    inputs: DEFAULT_INPUTS_O_SLIDER_INPUT,
                    outputs: DEFAULT_OUTPUTS_O_SLIDER_INPUT,
                    encapsulation: ViewEncapsulation.None
                },] },
    ];
    OSliderComponent.ctorParameters = function () { return [
        { type: OFormComponent, decorators: [{ type: Optional }, { type: Inject, args: [forwardRef(function () { return OFormComponent; }),] }] },
        { type: ElementRef },
        { type: Injector }
    ]; };
    __decorate([
        InputConverter(),
        __metadata("design:type", Boolean)
    ], OSliderComponent.prototype, "vertical", void 0);
    __decorate([
        InputConverter(),
        __metadata("design:type", Boolean)
    ], OSliderComponent.prototype, "invert", void 0);
    __decorate([
        InputConverter(),
        __metadata("design:type", Boolean)
    ], OSliderComponent.prototype, "thumbLabel", void 0);
    __decorate([
        InputConverter(),
        __metadata("design:type", Number)
    ], OSliderComponent.prototype, "min", void 0);
    __decorate([
        InputConverter(),
        __metadata("design:type", Number)
    ], OSliderComponent.prototype, "max", void 0);
    __decorate([
        InputConverter(),
        __metadata("design:type", Number)
    ], OSliderComponent.prototype, "step", void 0);
    return OSliderComponent;
}(OFormDataComponent));
export { OSliderComponent };
var OSliderModule = (function () {
    function OSliderModule() {
    }
    OSliderModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [OSliderComponent],
                    imports: [CommonModule, OSharedModule],
                    exports: [OSliderComponent]
                },] },
    ];
    return OSliderModule;
}());
export { OSliderModule };
//# sourceMappingURL=o-slider.component.js.map
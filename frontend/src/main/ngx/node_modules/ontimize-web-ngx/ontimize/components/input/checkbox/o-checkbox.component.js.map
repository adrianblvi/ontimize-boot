{"version":3,"file":"o-checkbox.component.js","sourceRoot":"","sources":["../../../../../tmp/ontimize/components/input/checkbox/o-checkbox.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { CommonModule } from '@angular/common';\nimport { Component, ElementRef, forwardRef, Inject, Injector, NgModule, Optional, ViewEncapsulation } from '@angular/core';\nimport { ThemePalette } from '@angular/material';\nimport { OSharedModule } from '../../../shared';\nimport { Util } from '../../../util/util';\nimport { OFormComponent } from '../../form/o-form.component';\nimport { OFormValue } from '../../form/OFormValue';\nimport { DEFAULT_INPUTS_O_FORM_DATA_COMPONENT, DEFAULT_OUTPUTS_O_FORM_DATA_COMPONENT, OFormDataComponent } from '../../o-form-data-component.class';\nimport { OFormControl } from '../o-form-control.class';\n\n\nexport const DEFAULT_INPUTS_O_CHECKBOX = [\n  // true-value: true value. Default: true.\n  'trueValue: true-value',\n  // false-value: false value. Default: false.\n  'falseValue: false-value',\n  // boolean-type [number|boolean|string]: cellData value type. Default: boolean\n  'booleanType: boolean-type',\n  // color: Theme color palette for the component.\n  'color',\n  // label-position: Whether the label should appear after or before the slide-toggle. Defaults to 'after'\n  'labelPosition: label-position',\n  ...DEFAULT_INPUTS_O_FORM_DATA_COMPONENT\n];\n\nexport const DEFAULT_OUTPUTS_O_CHECKBOX = [\n  ...DEFAULT_OUTPUTS_O_FORM_DATA_COMPONENT\n];\n\n@Component({\n  moduleId: module.id,\n  selector: 'o-checkbox',\n  inputs: DEFAULT_INPUTS_O_CHECKBOX,\n  outputs: DEFAULT_OUTPUTS_O_CHECKBOX,\n  template: `\n    <div [class.custom-width]=\"hasCustomWidth\" [formGroup]=\"getFormGroup()\" class=\"relative\" [matTooltip]=\"tooltip\"\n      [matTooltipClass]=\"tooltipClass\" [matTooltipPosition]=\"tooltipPosition\" [matTooltipShowDelay]=\"tooltipShowDelay\"\n      [matTooltipHideDelay]=\"tooltipHideDelay\" fxLayout=\"row\" fxLayoutAlign=\"start center\" fxFill>\n      <mat-checkbox [id]=\"getAttribute()\" [formControlName]=\"getAttribute()\" (change)=\"onChangeEvent($event)\"\n        [labelPosition]=\"labelPosition\" [color]=\"color\">\n        {{ olabel | oTranslate }}\n        <mat-error *ngIf=\"hasError('required')\" text=\"{{ 'FORM_VALIDATION.REQUIRED' | oTranslate }}\"></mat-error>\n        <mat-error *ngFor=\"let oError of getActiveOErrors()\" text=\"{{ oError.text | oTranslate }}\"></mat-error>\n      </mat-checkbox>\n      <div *ngIf=\"isReadOnly\" (click)=\"onClickBlocker($event)\" class=\"read-only-blocker\" fxFill></div>\n    </div>\n  `,\n  styles: [`\n    .o-checkbox mat-checkbox{z-index:1}.o-checkbox .mat-checkbox-disabled .mat-checkbox-layout .mat-checkbox-label{color:rgba(0,0,0,0.36)}.o-checkbox .custom-width{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.o-checkbox .read-only-blocker{z-index:2;position:absolute;top:0;left:0;right:0}\n  `],\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    '[class.o-checkbox]': 'true'\n  }\n})\nexport class OCheckboxComponent extends OFormDataComponent {\n\n  public static DEFAULT_INPUTS_O_CHECKBOX = DEFAULT_INPUTS_O_CHECKBOX;\n  public static DEFAULT_OUTPUTS_O_CHECKBOX = DEFAULT_OUTPUTS_O_CHECKBOX;\n\n  public trueValue: any = true;\n  public falseValue: any = false;\n  public booleanType: 'number' | 'boolean' | 'string' = 'boolean';\n  public color: ThemePalette;\n  public labelPosition: 'before' | 'after' = 'after';\n\n  constructor(\n    @Optional() @Inject(forwardRef(() => OFormComponent)) form: OFormComponent,\n    elRef: ElementRef,\n    injector: Injector\n  ) {\n    super(form, elRef, injector);\n    this._defaultSQLTypeKey = 'BOOLEAN';\n  }\n\n  initialize() {\n    super.initialize();\n    if (!Util.isDefined(this.sqlType)) {\n      switch (this.booleanType) {\n        case 'number':\n          this.sqlType = 'INTEGER';\n          break;\n        case 'string':\n          this.sqlType = 'VARCHAR';\n          break;\n        case 'boolean':\n        default:\n          this.sqlType = 'BOOLEAN';\n      }\n    }\n\n    const context = this;\n    (this.getFormControl() as OFormControl).getValue.bind(context);\n    (this.getFormControl() as OFormControl).getValue = function () {\n      return this.value ? context.trueValue : context.falseValue;\n    };\n  }\n\n  ensureOFormValue(value: any) {\n    this.parseInputs();\n    if (value instanceof OFormValue) {\n      if (value.value === undefined) {\n        value.value = false;\n      }\n      this.value = new OFormValue(this.parseValueByType(value.value) === this.trueValue);\n    } else if (typeof value === 'boolean') {\n      this.value = new OFormValue(value);\n    } else {\n      this.value = new OFormValue(this.parseValueByType(value) === this.trueValue);\n    }\n  }\n\n  onClickBlocker(evt: Event) {\n    evt.stopPropagation();\n  }\n\n\n  parseValueByType(value: any) {\n    let result: any;\n    switch (this.booleanType) {\n      case 'string':\n        result = value + '';\n        break;\n      case 'number':\n        result = parseInt(value);\n        break;\n      default:\n        result = value;\n        break;\n    }\n    return result;\n  }\n\n  protected parseStringInputs() {\n    if ((this.trueValue || '').length === 0) {\n      this.trueValue = undefined;\n    }\n    if ((this.falseValue || '').length === 0) {\n      this.falseValue = undefined;\n    }\n  }\n\n  protected parseNumberInputs() {\n    this.trueValue = parseInt(this.trueValue);\n    if (isNaN(this.trueValue)) {\n      this.trueValue = 1;\n    }\n    this.falseValue = parseInt(this.falseValue);\n    if (isNaN(this.falseValue)) {\n      this.falseValue = 0;\n    }\n  }\n\n  protected parseInputs() {\n    switch (this.booleanType) {\n      case 'string':\n        this.parseStringInputs();\n        break;\n      case 'number':\n        this.parseNumberInputs();\n        break;\n      default:\n        this.trueValue = true;\n        this.falseValue = false;\n        break;\n    }\n  }\n\n}\n\n@NgModule({\n  declarations: [OCheckboxComponent],\n  imports: [CommonModule, OSharedModule],\n  exports: [OCheckboxComponent]\n})\nexport class OCheckboxModule { }\n"]}
{"version":3,"file":"o-breadcrumb.component.js","sourceRoot":"","sources":["../../../../tmp/ontimize/components/breadcrumb/o-breadcrumb.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { AfterViewInit, Component, Injector, NgModule, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ActivatedRouteSnapshot, Router, RouterModule } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nimport { Codes } from '../../utils';\nimport { OSharedModule } from '../../shared';\nimport { NavigationService, OFormComponent, ONavigationItem, Util } from '../../../index';\n\nexport const DEFAULT_INPUTS_O_BREADCRUMB = [\n  // form [OFormComponent]: Ontimize Web Form reference.\n  '_formRef: form',\n\n  // label-columns [string]: Form values shown on each element. Separated by ';'. Default: no value.\n  'labelColumns: label-columns',\n\n  // separator [string]: Form values shown on each element. Separated by ';'. Default: no value.\n  'separator'\n];\n\n@Component({\n  moduleId: module.id,\n  selector: 'o-breadcrumb',\n  template: `\n    <mat-toolbar class=\"toolbar-breadcrumb\">\n      <ng-template ngFor let-route let-i=\"index\" [ngForOf]=\"breadcrumbs\">\n        <ng-container *ngIf=\"!isNotInsideFormLayoutManager(route, i)\">\n          <a *ngIf=\"!route.terminal\" class=\"breadcrumb-item\" (click)=\"onRouteClick(route)\" layout-padding>\n            {{ route.displayText ? route.displayText : route.text | uppercase | oTranslate }}\n          </a>\n          <span *ngIf=\"showBreadcrumbItem(route)\" class=\"breadcrumb-item active\" layout-padding>\n            {{ route.displayText ? route.displayText : route.text | uppercase | oTranslate }}\n          </span>\n          <mat-icon *ngIf=\"!route.terminal\" svgIcon=\"ontimize:keyboard_arrow_right\"></mat-icon>\n        </ng-container>\n      </ng-template>\n    </mat-toolbar>\n  `,\n  styles: [`\n    .o-breadcrumb{display:flex;height:50px;min-height:50px;padding-bottom:8px}.o-breadcrumb .mat-toolbar{box-shadow:2px 2px 6px rgba(0,0,0,0.24);background:#ffffff;border-radius:6px;min-height:50px;max-height:50px}.o-breadcrumb .mat-toolbar .mat-toolbar-row{height:50px}.o-breadcrumb .mat-toolbar a{text-decoration:none;cursor:pointer}.o-breadcrumb .mat-toolbar span{cursor:default}.o-breadcrumb .mat-toolbar a,.o-breadcrumb .mat-toolbar span{padding-top:0;padding-bottom:0}\n  `],\n  inputs: DEFAULT_INPUTS_O_BREADCRUMB,\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    '[class.o-breadcrumb]': 'true'\n  }\n})\nexport class OBreadcrumbComponent implements AfterViewInit, OnDestroy, OnInit {\n\n  public labelColumns: string;\n  public separator: string = ' ';\n  public breadcrumbs: Array<ONavigationItem>;\n\n  protected router: Router;\n  protected _formRef: OFormComponent;\n  protected labelColsArray: Array<string> = [];\n  protected navigationService: NavigationService;\n  protected onDataLoadedSubscription: Subscription;\n  protected navigationServiceSubscription: Subscription;\n\n  protected _displayTextloaded: boolean = false;\n\n  constructor(\n    protected injector: Injector\n  ) {\n    this.router = this.injector.get(Router);\n    this.navigationService = this.injector.get(NavigationService);\n  }\n\n  ngOnInit() {\n    const self = this;\n\n    this.labelColsArray = Util.parseArray(this.labelColumns);\n\n    if (this.navigationService && this.navigationService.navigationEvents$) {\n      this.navigationServiceSubscription = this.navigationService.navigationEvents$.subscribe(e => {\n        // setting loaded to false if the breadcrumb is inside a form (and later it will find its displayText)\n        self.displayTextloaded = !(self._formRef && self.labelColsArray.length);\n        self.breadcrumbs = e;\n      });\n    }\n  }\n\n  ngAfterViewInit() {\n    if (this._formRef && this.labelColsArray.length) {\n      let self = this;\n      this.onDataLoadedSubscription = this._formRef.onDataLoaded.subscribe((value: any) => {\n        if (self.breadcrumbs.length) {\n          let displayText = self.labelColsArray.map(element => value[element]).join(self.separator);\n          self.breadcrumbs[self.breadcrumbs.length - 1].displayText = displayText;\n          self.displayTextloaded = true;\n        }\n      });\n    }\n  }\n\n  showBreadcrumbItem(item: ONavigationItem): boolean {\n    return this.displayTextloaded && item.terminal;\n  }\n\n  isNotInsideFormLayoutManager(item: ONavigationItem, index: number): boolean {\n    const previousItem: ONavigationItem = this.breadcrumbs[index - 1];\n    return (previousItem && previousItem.isMainFormLayoutManagerComponent());\n  }\n\n  protected isTerminal(route: ActivatedRouteSnapshot) {\n    return route.firstChild === null || route.firstChild.routeConfig === null;\n  }\n\n  ngOnDestroy() {\n    if (this.onDataLoadedSubscription) {\n      this.onDataLoadedSubscription.unsubscribe();\n    }\n    if (this.navigationServiceSubscription) {\n      this.navigationServiceSubscription.unsubscribe();\n    }\n  }\n\n  onRouteClick(route) {\n    let extras = {};\n    if (route.queryParams) {\n      extras[Codes.QUERY_PARAMS] = route.queryParams;\n    }\n    this.router.navigate([route.url], extras);\n  }\n\n  get displayTextloaded(): boolean {\n    return this._displayTextloaded;\n  }\n\n  set displayTextloaded(arg: boolean) {\n    this._displayTextloaded = arg;\n  }\n}\n\n@NgModule({\n  imports: [CommonModule, OSharedModule, RouterModule],\n  exports: [OBreadcrumbComponent],\n  declarations: [OBreadcrumbComponent]\n})\nexport class OBreadcrumbModule { }\n"]}
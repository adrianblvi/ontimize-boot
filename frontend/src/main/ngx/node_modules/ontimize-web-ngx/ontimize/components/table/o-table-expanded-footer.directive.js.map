{"version":3,"file":"o-table-expanded-footer.directive.js","sourceRoot":"","sources":["../../../../tmp/ontimize/components/table/o-table-expanded-footer.directive.ts"],"names":[],"mappings":"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","sourcesContent":["import { Directive, ElementRef, Inject, Renderer2, forwardRef } from '@angular/core';\n\nimport { Injector } from '@angular/core';\nimport { OTableComponent } from './table-components';\nimport { OTranslateService } from '../../services';\nimport { Subscription } from 'rxjs';\n\n@Directive({\n  selector: '[oTableExpandedFooter]'\n})\nexport class OTableExpandedFooter {\n\n  spanMessageNotResults;\n  translateService: OTranslateService;\n  tableBody: any;\n  tableHeader: any;\n  tdTableWithMessage;\n  protected onContentChangeSubscription: Subscription;\n\n  constructor(\n    @Inject(forwardRef(() => OTableComponent)) public table: OTableComponent,\n    public element: ElementRef,\n    private renderer: Renderer2,\n    protected injector: Injector\n  ) {\n    this.translateService = this.injector.get(OTranslateService);\n  }\n\n\n  ngAfterViewInit() {\n    if (this.element.nativeElement.childNodes[2]) {\n      this.tableBody = this.element.nativeElement.childNodes[1];\n      this.tableHeader = this.element.nativeElement.childNodes[0];\n    }\n    this.registerContentChange();\n  }\n\n  registerContentChange() {\n    /**Create a tr with a td and inside put the message and add to tbody\n     * <tr><td><span> {message}</span><td><tr>\n    */\n    let tr = this.renderer.createElement('tr');\n    this.tdTableWithMessage = this.renderer.createElement('td');\n    this.renderer.addClass(tr, 'o-table-no-results');\n    tr.appendChild(this.tdTableWithMessage);\n    this.renderer.appendChild(this.tableBody, tr);\n\n    const self = this;\n    this.onContentChangeSubscription = this.table.onContentChange.subscribe((data) => {\n      self.updateMessageNotResults(data);\n    });\n\n  }\n\n  updateMessageNotResults(data) {\n    //reset span message\n    if (this.spanMessageNotResults) {\n      this.renderer.removeChild(this.element.nativeElement, this.spanMessageNotResults);\n    }\n\n    //generate new message\n    if (data.length === 0) {\n      let result = '';\n      result = this.translateService.get('TABLE.EMPTY');\n      if (this.table.quickFilter && this.table.oTableQuickFilterComponent &&\n        this.table.oTableQuickFilterComponent.value && this.table.oTableQuickFilterComponent.value.length > 0) {\n        result += this.translateService.get('TABLE.EMPTY_USING_FILTER', [(this.table.oTableQuickFilterComponent.value)]);\n        this.spanMessageNotResults = this.renderer.createElement('span');\n        let messageNotResults = this.renderer.createText(result);\n        this.tdTableWithMessage.setAttribute('colspan', this.tableHeader.querySelectorAll('th').length);\n        this.renderer.appendChild(this.spanMessageNotResults, messageNotResults);\n        this.renderer.appendChild(this.tdTableWithMessage, this.spanMessageNotResults);\n      }\n    }\n  }\n\n  // updateColspanTr() {\n  // TODO\n  //LAUNCH  WHEN HAVE OBSERVER OVER VISIBLE COLUMNS\n  //   if (this.spanMessageNotResults) {\n  //     this.td.setAttribute('colspan', this.tableHeader.querySelectorAll('th').length);\n  //     this.renderer.appendChild(this.td, this.spanMessageNotResults);\n  //   }\n  // }\n\n  destroy() {\n    if (this.onContentChangeSubscription) {\n      this.onContentChangeSubscription.unsubscribe();\n    }\n  }\n}\n"]}
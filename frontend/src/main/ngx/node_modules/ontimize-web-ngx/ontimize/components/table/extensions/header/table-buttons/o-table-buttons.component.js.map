{"version":3,"file":"o-table-buttons.component.js","sourceRoot":"","sources":["../../../../../../../tmp/ontimize/components/table/extensions/header/table-buttons/o-table-buttons.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { ChangeDetectionStrategy, Component, forwardRef, Inject, Injector, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { BehaviorSubject, Subscription } from 'rxjs';\n\nimport { InputConverter } from '../../../../../decorators';\nimport { OPermissions } from '../../../../../services';\nimport { PermissionsUtils } from '../../../../../util/permissions';\nimport { OTableComponent } from '../../../o-table.component';\nimport { OTableButtonComponent } from '../table-button/o-table-button.component';\n\nexport const DEFAULT_INPUTS_O_TABLE_BUTTONS = [\n  // insert-button [no|yes]: show insert button. Default: yes.\n  'insertButton: insert-button',\n  // refresh-button [no|yes]: show refresh button. Default: yes.\n  'refreshButton: refresh-button',\n  // delete-button [no|yes]: show delete button. Default: yes.\n  'deleteButton: delete-button'\n];\n\nexport const DEFAULT_OUTPUTS_O_TABLE_BUTTONS = [];\n\n@Component({\n  moduleId: module.id,\n  selector: 'o-table-buttons',\n  template: `\n    <div class=\"buttons\" fxLayout>\n      <o-table-button *ngIf=\"showInsertOButton\" [enabled]=\"enabledInsertButton | async\" label=\"TABLE.BUTTONS.ADD\"\n        svg-icon=\"ontimize:add\" (onClick)=\"add()\" class=\"o-table-button-add\"></o-table-button>\n      <o-table-button *ngIf=\"showRefreshOButton\" [enabled]=\"enabledRefreshButton | async\" label=\"TABLE.BUTTONS.REFRESH\"\n        svg-icon=\"ontimize:autorenew\" (onClick)=\"reloadData()\" class=\"o-table-button-refresh\">\n      </o-table-button>\n      <o-table-button *ngIf=\"showDeleteOButton\" [enabled]=\"enabledDeleteButton | async\" label=\"TABLE.BUTTONS.DELETE\"\n        svg-icon=\"ontimize:delete\" (onClick)=\"remove()\" class=\"o-table-button-delete\"></o-table-button>\n      <ng-content></ng-content>\n    </div>\n  `,\n  styles: [`\n\n  `],\n  inputs: DEFAULT_INPUTS_O_TABLE_BUTTONS,\n  outputs: DEFAULT_OUTPUTS_O_TABLE_BUTTONS,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    '[class.o-table-buttons]': 'true',\n  }\n})\nexport class OTableButtonsComponent implements OnInit, OnDestroy {\n\n  public static DEFAULT_INPUTS_O_TABLE_BUTTONS = DEFAULT_INPUTS_O_TABLE_BUTTONS;\n  public static DEFAULT_OUTPUTS_O_TABLE_BUTTONS = DEFAULT_OUTPUTS_O_TABLE_BUTTONS;\n\n  /* Inputs */\n  @InputConverter()\n  public insertButton: boolean = true;\n  @InputConverter()\n  public refreshButton: boolean = true;\n  @InputConverter()\n  public deleteButton: boolean = true;\n  /* End of inputs */\n\n  public enabledInsertButton: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(true);\n  public enabledRefreshButton: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(true);\n  public enabledDeleteButton: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n\n  protected permissions: OPermissions[];\n  protected mutationObservers: MutationObserver[] = [];\n  protected subscription: Subscription;\n\n  constructor(\n    protected injector: Injector,\n    @Inject(forwardRef(() => OTableComponent)) protected table: OTableComponent\n  ) {\n    this.permissions = this.table.getActionsPermissions();\n  }\n\n  public ngOnInit(): void {\n    const insertPerm: OPermissions = this.getPermissionByAttr('insert');\n    const refreshPerm: OPermissions = this.getPermissionByAttr('refresh');\n    const deletePerm: OPermissions = this.getPermissionByAttr('delete');\n\n    if (this.insertButton && (insertPerm && insertPerm.enabled === false)) {\n      this.enabledInsertButton.next(false);\n    }\n    if (this.refreshButton && (refreshPerm && refreshPerm.enabled === false)) {\n      this.enabledRefreshButton.next(false);\n    }\n    this.subscription = this.table.selection.changed.subscribe(() =>\n      deletePerm ? this.enabledDeleteButton.next(deletePerm.enabled && !this.table.selection.isEmpty()) : this.enabledDeleteButton.next(!this.table.selection.isEmpty())\n    );\n  }\n\n  public ngOnDestroy(): void {\n    if (this.mutationObservers) {\n      this.mutationObservers.forEach((m: MutationObserver) => {\n        m.disconnect();\n      });\n    }\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n  public add(): void {\n    this.table.add();\n  }\n\n  public reloadData(): void {\n    this.table.reloadData();\n  }\n\n  public remove(): void {\n    this.table.remove();\n  }\n\n  public getPermissionByAttr(attr: string): OPermissions {\n    return this.permissions.find((perm: OPermissions) => perm.attr === attr);\n  }\n\n  public registerButtons(oTableButtons: OTableButtonComponent[]): void {\n    const fixedButtons = ['insert', 'refresh', 'delete'];\n    const userItems: OPermissions[] = this.permissions.filter((perm: OPermissions) => fixedButtons.indexOf(perm.attr) === -1);\n    const self = this;\n    userItems.forEach((perm: OPermissions) => {\n      const button = oTableButtons.find((oTableButton: OTableButtonComponent) => oTableButton.oattr === perm.attr);\n      self.setPermissionsToOTableButton(perm, button);\n    });\n  }\n\n  get showInsertOButton(): boolean {\n    if (!this.insertButton) {\n      return false;\n    }\n    const perm: OPermissions = this.getPermissionByAttr('insert');\n    return !(perm && perm.visible === false);\n  }\n\n  get showRefreshOButton(): boolean {\n    if (!this.refreshButton) {\n      return false;\n    }\n    const perm: OPermissions = this.getPermissionByAttr('refresh');\n    return !(perm && perm.visible === false);\n  }\n\n  get showDeleteOButton(): boolean {\n    if (!this.deleteButton) {\n      return false;\n    }\n    const perm: OPermissions = this.getPermissionByAttr('delete');\n    return !(perm && perm.visible === false);\n  }\n\n  protected setPermissionsToOTableButton(perm: OPermissions, button: OTableButtonComponent): void {\n    if (perm.visible === false && button) {\n      button.elRef.nativeElement.remove();\n    } else if (perm.enabled === false && button) {\n      button.enabled = false;\n      const buttonEL = button.elRef.nativeElement.querySelector('button');\n      const obs = PermissionsUtils.registerDisabledChangesInDom(buttonEL);\n      this.mutationObservers.push(obs);\n    }\n  }\n\n}\n"]}
[{"__symbolic":"module","version":4,"metadata":{"DEFAULT_INPUTS_O_FORM_TOOLBAR":["labelHeader: label-header","labelHeaderAlign: label-header-align","headeractions: header-actions","showHeaderActionsText: show-header-actions-text","showHeaderNavigation:show-header-navigation"],"OFormToolbarComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":21,"character":1},"arguments":[{"moduleId":{"__symbolic":"select","expression":{"__symbolic":"reference","name":"module"},"member":"id"},"selector":"o-form-toolbar","template":"\n    <mat-toolbar class=\"o-form-toolbar-header\" [class.breadcrumb]=\"includeBreadcrumb\" fxLayout=\"column\"\n      fxLayoutAlign=\"center center\">\n\n      <ng-template *ngIf=\"includeBreadcrumb\" #breadcrumb></ng-template>\n\n      <div class=\"mat-toolbar-tools\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n        <button type=\"button\" mat-icon-button (click)=\"onCloseDetail()\" *ngIf=\"isDetail\" class=\"o-form-toolbar-button o-form-toolbar-back\">\n          <mat-icon svgIcon=\"ontimize:arrow_back\"></mat-icon>\n        </button>\n\n        <o-form-navigation #formNavigation *ngIf=\"showNavigation\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n        </o-form-navigation>\n\n        <span *ngIf=\"getLabelHeaderAlign() === 'center' || getLabelHeaderAlign() === 'end'\" class=\"fill-remaining\"></span>\n        <div *ngIf=\"labelHeader!=''\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n          <span>{{ labelHeader | oTranslate }}</span>\n        </div>\n        <span *ngIf=\"getLabelHeaderAlign() === 'start' || getLabelHeaderAlign() === 'center'\" class=\"fill-remaining\"></span>\n\n        <ng-content select=\"[o-custom-form-toolbar-buttons-wrapper]\"></ng-content>\n\n        <ng-template [ngIf]=\"showHeaderActionsText\" [ngIfElse]=\"undoBtnWithoutText\">\n          <button type=\"button\" class=\"o-form-toolbar-button o-form-toolbar-button-undo\" mat-stroked-button (click)=\"onUndoLastChange()\"\n            [disabled]=\"isChangesStackEmpty\" *ngIf=\"showUndoButton\">\n            <mat-icon svgIcon=\"ontimize:undo\"></mat-icon>\n            <span>{{ 'UNDO' | oTranslate }}</span>\n          </button>\n        </ng-template>\n        <ng-template #undoBtnWithoutText>\n          <button type=\"button\" class=\"o-form-toolbar-button o-form-toolbar-button-undo\" mat-icon-button (click)=\"onUndoLastChange()\"\n            [disabled]=\"isChangesStackEmpty\" *ngIf=\"showUndoButton\">\n            <mat-icon svgIcon=\"ontimize:undo\"></mat-icon>\n          </button>\n        </ng-template>\n\n        <ng-container *ngIf=\"initialMode\">\n          <ng-template [ngIf]=\"showHeaderActionsText\" [ngIfElse]=\"buttonsWithouText\">\n            <button type=\"button\" class=\"o-form-toolbar-button o-form-toolbar-button-refresh\" mat-stroked-button (click)=\"onReload($event)\"\n              *ngIf=\"isRefreshBtnEnabled\" attr=\"refresh\">\n              <mat-icon svgIcon=\"ontimize:autorenew\"></mat-icon>\n              <span>{{ 'REFRESH' | oTranslate }}</span>\n            </button>\n            <button type=\"button\" class=\"o-form-toolbar-button o-form-toolbar-button-insert\" mat-stroked-button (click)=\"onInsert($event)\"\n              *ngIf=\"isInsertBtnEnabled\" attr=\"insert\">\n              <mat-icon svgIcon=\"ontimize:add\"></mat-icon>\n              <span>{{ 'ADD' | oTranslate }}</span>\n            </button>\n            <button type=\"button\" class=\"o-form-toolbar-button o-form-toolbar-button-edit\" mat-stroked-button (click)=\"onEdit($event)\"\n              *ngIf=\"isEditBtnEnabled | async\" attr=\"edit\">\n              <mat-icon svgIcon=\"ontimize:edit\"></mat-icon>\n              <span>{{ 'EDIT' | oTranslate }}</span>\n            </button>\n            <button type=\"button\" class=\"o-form-toolbar-button o-form-toolbar-button-delete\" mat-stroked-button (click)=\"onDelete($event)\"\n              *ngIf=\"isDeleteBtnEnabled\" attr=\"delete\">\n              <mat-icon svgIcon=\"ontimize:delete\"></mat-icon>\n              <span>{{ 'DELETE' | oTranslate }}</span>\n            </button>\n            <button type=\"button\" class=\"o-form-toolbar-button o-form-toolbar-button-save\" mat-stroked-button (click)=\"onSave($event)\"\n              [disabled]=\"!(existsChangesToSave | async)\" *ngIf=\"isSaveBtnEnabled | async\" attr=\"update\">\n              <mat-icon svgIcon=\"ontimize:save\"></mat-icon>\n              <span>{{ 'SAVE' | oTranslate }}</span>\n            </button>\n          </ng-template>\n          <ng-template #buttonsWithouText>\n            <button type=\"button\" class=\"o-form-toolbar-button o-form-toolbar-button-refresh\" mat-icon-button (click)=\"onReload($event)\"\n              *ngIf=\"isRefreshBtnEnabled\" attr=\"refresh\">\n              <mat-icon svgIcon=\"ontimize:autorenew\"></mat-icon>\n            </button>\n            <button type=\"button\" class=\"o-form-toolbar-button o-form-toolbar-button-insert\" mat-icon-button (click)=\"onInsert($event)\"\n              *ngIf=\"isInsertBtnEnabled\" attr=\"insert\">\n              <mat-icon svgIcon=\"ontimize:add\"></mat-icon>\n            </button>\n            <button type=\"button\" class=\"o-form-toolbar-button-o-form-toolbar-button-edit\" mat-icon-button (click)=\"onEdit($event)\"\n              *ngIf=\"isEditBtnEnabled | async\" attr=\"edit\">\n              <mat-icon svgIcon=\"ontimize:edit\"></mat-icon>\n            </button>\n            <button type=\"button\" class=\"o-form-toolbar-button o-form-toolbar-button-delete\" mat-icon-button (click)=\"onDelete($event)\"\n              *ngIf=\"isDeleteBtnEnabled\" attr=\"delete\">\n              <mat-icon svgIcon=\"ontimize:delete\"></mat-icon>\n            </button>\n            <button type=\"button\" class=\"o-form-toolbar-button o-form-toolbar-button-save\" mat-icon-button (click)=\"onSave($event)\"\n              [disabled]=\"!existsChangesToSave\" *ngIf=\"isSaveBtnEnabled | async\" attr=\"update\">\n              <mat-icon svgIcon=\"ontimize:save\"></mat-icon>\n            </button>\n          </ng-template>\n        </ng-container>\n\n        <ng-container *ngIf=\"editMode || insertMode\">\n          <button type=\"button\" class=\"o-form-toolbar-button o-form-toolbar-button-cancel\" mat-stroked-button (click)=\"cancelOperation($event)\">\n            <mat-icon svgIcon=\"ontimize:clear\"></mat-icon>\n            <span *ngIf=\"showHeaderActionsText\">{{ 'CANCEL' | oTranslate }}</span>\n          </button>\n          <button type=\"button\" class=\"o-form-toolbar-button o-form-toolbar-button-insert\" mat-stroked-button color=\"primary\"\n            (click)=\"acceptOperation($event)\">\n            <mat-icon svgIcon=\"ontimize:done\"></mat-icon>\n            <span *ngIf=\"showHeaderActionsText\">{{ 'INSERT' | oTranslate }}</span>\n          </button>\n        </ng-container>\n      </div>\n\n    </mat-toolbar>\n  ","styles":["\n    .o-form-toolbar{flex:none;display:block}.o-form-toolbar .o-form-toolbar-header{min-height:50px;max-height:50px;padding:0 16px 0 4px}.o-form-toolbar .o-form-toolbar-header.breadcrumb{padding:16px;min-height:84px;max-height:84px}.o-form-toolbar .o-form-toolbar-header .mat-toolbar-tools{width:100%}.o-form-toolbar .o-form-toolbar-header .mat-toolbar-tools button.o-form-toolbar-button[disabled]{cursor:default}.o-form-toolbar .o-form-toolbar-header .mat-toolbar-tools button.o-form-toolbar-button:not(.mat-icon-button) .mat-button-wrapper{display:flex;align-items:center}.o-form-toolbar .o-form-toolbar-header .mat-toolbar-tools button.o-form-toolbar-button:not(.mat-icon-button) .mat-button-wrapper span{flex:1}.o-form-toolbar .o-form-toolbar-header .mat-toolbar-tools button:not(.mat-icon-button){padding:0 6px}.o-form-toolbar .o-form-toolbar-header .mat-toolbar-tools button.mat-icon-button{padding:0;margin:0}.o-form-toolbar .o-form-toolbar-header .mat-toolbar-tools button.mat-stroked-button{min-width:100px;margin:0 6px}.o-form-toolbar .o-form-toolbar-header .o-breadcrumb{width:100%;height:32px;min-height:initial}.o-form-toolbar .o-form-toolbar-header .o-breadcrumb .mat-toolbar{padding:0;min-height:initial;max-height:initial;height:100%}\n  "],"inputs":{"__symbolic":"reference","name":"DEFAULT_INPUTS_O_FORM_TOOLBAR"},"encapsulation":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewEncapsulation","line":131,"character":17},"member":"None"},"host":{"[class.o-form-toolbar]":"true","$quoted$":["[class.o-form-toolbar]"]}}]}],"members":{"showHeaderActionsText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"../../../decorators","name":"InputConverter","line":145,"character":3}}]}],"showHeaderNavigation":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"../../../decorators","name":"InputConverter","line":147,"character":3}}]}],"breadContainer":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":160,"character":3},"arguments":["breadcrumb",{"read":{"__symbolic":"reference","module":"@angular/core","name":"ViewContainerRef","line":160,"character":35}}]}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":221,"character":5},"arguments":[{"__symbolic":"reference","module":"../o-form.component","name":"OFormComponent","line":221,"character":29}]}],null,null],"parameters":[{"__symbolic":"reference","module":"../o-form.component","name":"OFormComponent","line":221,"character":61},{"__symbolic":"reference","module":"@angular/core","name":"ElementRef","line":222,"character":20},{"__symbolic":"reference","module":"@angular/core","name":"Injector","line":223,"character":24}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}],"setInitialMode":[{"__symbolic":"method"}],"setInsertMode":[{"__symbolic":"method"}],"setEditMode":[{"__symbolic":"method"}],"onCloseDetail":[{"__symbolic":"method"}],"onBack":[{"__symbolic":"method"}],"onReload":[{"__symbolic":"method"}],"onInsert":[{"__symbolic":"method"}],"onEdit":[{"__symbolic":"method"}],"onDelete":[{"__symbolic":"method"}],"onSave":[{"__symbolic":"method"}],"cancelOperation":[{"__symbolic":"method"}],"acceptOperation":[{"__symbolic":"method"}],"handleAcceptInsertOperation":[{"__symbolic":"method"}],"handleAcceptEditOperation":[{"__symbolic":"method"}],"showConfirmDelete":[{"__symbolic":"method"}],"getLabelHeaderAlign":[{"__symbolic":"method"}],"onUndoLastChange":[{"__symbolic":"method"}],"hasEnabledPermission":[{"__symbolic":"method"}],"manageEditableDetail":[{"__symbolic":"method"}],"parsePermissions":[{"__symbolic":"method"}],"permissionManagement":[{"__symbolic":"method"}],"checkEnabledPermission":[{"__symbolic":"method"}]},"statics":{"DEFAULT_INPUTS_O_FORM_TOOLBAR":{"__symbolic":"reference","name":"DEFAULT_INPUTS_O_FORM_TOOLBAR"}}},"OFormToolbarModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":512,"character":1},"arguments":[{"declarations":[{"__symbolic":"reference","module":"../navigation/o-form-navigation.component","name":"OFormNavigationComponent","line":513,"character":17},{"__symbolic":"reference","name":"OFormToolbarComponent"}],"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":514,"character":12},{"__symbolic":"reference","module":"../../../shared","name":"OSharedModule","line":514,"character":26}],"exports":[{"__symbolic":"reference","module":"../navigation/o-form-navigation.component","name":"OFormNavigationComponent","line":515,"character":12},{"__symbolic":"reference","name":"OFormToolbarComponent"}]}]}]}}}]
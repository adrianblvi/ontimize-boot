{"version":3,"file":"o-wrapper-content-menu.component.js","sourceRoot":"","sources":["../../../../../../tmp/ontimize/components/contextmenu/context-menu/o-wrapper-content-menu/o-wrapper-content-menu.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,eAAe,CAAC;AACtE,OAAO,EAAE,OAAO,EAAE,MAAM,wBAAwB,CAAC;AAEjD,OAAO,EAAE,mBAAmB,EAAE,MAAM,4BAA4B,CAAC;AACjE,OAAO,EAAE,mBAAmB,EAAE,MAAM,8BAA8B,CAAC;AAEnE,MAAM,CAAC,IAAM,wCAAwC,GAAG;IACtD,OAAO;IACP,OAAO;CACR,CAAC;AAEF;IAyCE,sCACY,QAAkB,EAClB,WAAgC;QADhC,aAAQ,GAAR,QAAQ,CAAU;QAClB,gBAAW,GAAX,WAAW,CAAqB;IACxC,CAAC;IAEE,8CAAO,GAAd,UAAe,IAAI,EAAE,KAAM;QACzB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IACxC,CAAC;IAEM,8CAAO,GAAd,UAAe,IAAI;QACjB,IAAI,OAAO,GAAG,KAAK,CAAC;QACpB,IAAI,IAAI,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;YACrD,OAAO,GAAG,IAAI,CAAC;SAChB;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAEM,kDAAW,GAAlB,UAAmB,IAAI;QACrB,IAAI,WAAW,GAAG,KAAK,CAAC;QACxB,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,KAAK,mBAAmB,CAAC,mBAAmB,EAAE;YAC9E,WAAW,GAAG,IAAI,CAAC;SACpB;QACD,OAAO,WAAW,CAAC;IACrB,CAAC;IAEM,6CAAM,GAAb,UAAc,IAAI;QAChB,IAAI,MAAM,GAAG,KAAK,CAAC;QACnB,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,KAAK,mBAAmB,CAAC,cAAc,EAAE;YACzE,MAAM,GAAG,IAAI,CAAC;SACf;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;;gBAxEF,SAAS,SAAC;oBACT,QAAQ,EAAE,MAAM,CAAC,EAAE;oBACnB,QAAQ,EAAE,wBAAwB;oBAClC,QAAQ,EAAE,m4CAsBT;oBACD,MAAM,EAAE,CAAC,8HAER,CAAC;oBACF,MAAM,EAAE,wCAAwC;iBACjD;;;gBAzCmB,QAAQ;gBAInB,mBAAmB;;;wBAyCzB,KAAK;4BAEL,SAAS,SAAC,WAAW;uBAErB,SAAS,SAAC,4BAA4B;;IAoCzC,mCAAC;CAAA,AA1ED,IA0EC;SA3CY,4BAA4B","sourcesContent":["import { Component, Injector, Input, ViewChild } from '@angular/core';\nimport { MatMenu } from '@angular/material/menu';\n\nimport { OComponentMenuItems } from '../../o-content-menu.class';\nimport { OContextMenuService } from '../../o-context-menu.service';\n\nexport const DEFAULT_CONTEXT_MENU_CONTENT_ITEM_INPUTS = [\n  'items',\n  'class'\n];\n\n@Component({\n  moduleId: module.id,\n  selector: 'o-wrapper-content-menu',\n  template: `\n    <mat-menu #childMenu=\"matMenu\" [class]=\"class\" [overlapTrigger]=\"false\" [hasBackdrop]=\"false\">\n      <ng-container *ngFor=\"let child of items\">\n        <!-- Handle branch node menu items -->\n        <span *ngIf=\"isGroup(child) && child.isVisible\">\n          <button mat-menu-item color=\"primary\" [matMenuTriggerFor]=\"menu.childMenu\" [disabled]=\"child.disabled\">\n            <mat-icon *ngIf=\"child.svgIcon !== undefined\" [svgIcon]=\"child.svgIcon\"></mat-icon>\n            <mat-icon *ngIf=\"child.svgIcon === undefined\">{{ child.icon }}</mat-icon>\n            <span>{{ child.label | oTranslate}}</span>\n          </button>\n          <o-wrapper-content-menu #menu [items]=\"child.children\" [class]=\"class\"></o-wrapper-content-menu>\n        </span>\n        <!-- Handle leaf node menu items -->\n        <button mat-menu-item (click)=\"onClick(child, $event)\" [disabled]=\"child.disabled\" *ngIf=\"isItem(child) && child.isVisible\">\n          <mat-icon *ngIf=\"child.svgIcon !== undefined\" [svgIcon]=\"child.svgIcon\"></mat-icon>\n          <mat-icon *ngIf=\"child.svgIcon === undefined\">{{ child.icon }}</mat-icon>\n          <span>{{ child.label | oTranslate}} </span>\n        </button>\n        <!-- separator leaf node menu items -->\n        <mat-divider *ngIf=\"isSepararor(child) && child.isVisible\"></mat-divider>\n      </ng-container>\n    </mat-menu>\n  `,\n  styles: [`\n    mat-divider.mat-divider:first-child,mat-divider.mat-divider:last-child{display:none}.mat-icon{display:inline-flex}\n  `],\n  inputs: DEFAULT_CONTEXT_MENU_CONTENT_ITEM_INPUTS\n})\nexport class OWrapperContentMenuComponent {\n\n  public class: string;\n  @Input()\n  public items: any[];\n  @ViewChild('childMenu')\n  public childMenu: MatMenu;\n  @ViewChild(OWrapperContentMenuComponent)\n  public menu: OWrapperContentMenuComponent;\n\n  constructor(\n    protected injector: Injector,\n    protected menuService: OContextMenuService\n  ) { }\n\n  public onClick(item, event?): void {\n    item.triggerExecute(item.data, event);\n  }\n\n  public isGroup(item): boolean {\n    let isGroup = false;\n    if (item && item.children && item.children.length > 0) {\n      isGroup = true;\n    }\n    return isGroup;\n  }\n\n  public isSepararor(item): boolean {\n    let isSepararor = false;\n    if (item && item.type && item.type === OComponentMenuItems.TYPE_SEPARATOR_MENU) {\n      isSepararor = true;\n    }\n    return isSepararor;\n  }\n\n  public isItem(item): boolean {\n    let isItem = false;\n    if (item && item.type && item.type === OComponentMenuItems.TYPE_ITEM_MENU) {\n      isItem = true;\n    }\n    return isItem;\n  }\n\n}\n"]}
import { ElementRef, EventEmitter, Injector, OnInit } from '@angular/core';
import { FormControl, FormGroup } from '@angular/forms';
import { FloatLabelType, MatCheckboxChange, MatFormFieldAppearance } from '@angular/material';
import { OInputsOptions } from '../../../config/app-config';
import { OTranslateService, SnackBarService } from '../../../services';
import { IExpression } from '../../../utils';
export declare const DEFAULT_INPUTS_O_SEARCH_INPUT: string[];
export declare const DEFAULT_OUTPUTS_O_SEARCH_INPUT: string[];
declare type ColumnObject = {
    column: string;
    checked: boolean;
};
export declare class OSearchInputComponent implements OnInit {
    protected injector: Injector;
    protected elRef: ElementRef;
    static DEFAULT_INPUTS_O_SEARCH_INPUT: string[];
    static DEFAULT_OUTPUTS_O_SEARCH_INPUT: string[];
    onSearch: EventEmitter<any>;
    colArray: ColumnObject[];
    placeholder: string;
    width: string;
    columns: string;
    showCaseSensitiveCheckbox: boolean;
    showMenu: boolean;
    protected _filterCaseSensitive: boolean;
    protected _floatLabel: FloatLabelType;
    protected _appearance: MatFormFieldAppearance;
    protected formGroup: FormGroup;
    protected term: FormControl;
    protected translateService: OTranslateService;
    protected oInputsOptions: OInputsOptions;
    protected snackBarService: SnackBarService;
    constructor(injector: Injector, elRef: ElementRef);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    floatLabel: FloatLabelType;
    appearance: MatFormFieldAppearance;
    filterCaseSensitive: boolean;
    getFormGroup(): FormGroup;
    getValue(): string;
    setValue(val: string): void;
    getFormControl(): FormControl;
    readonly hasCustomWidth: boolean;
    readonly showFilterMenu: boolean;
    isChecked(column: ColumnObject): boolean;
    onCheckboxChange(column: ColumnObject, event: MatCheckboxChange): void;
    onSelectAllChange(event: MatCheckboxChange): void;
    areAllColumnsChecked(): boolean;
    onFilterCaseSensitiveChange(event: MatCheckboxChange): void;
    getActiveColumns(): string[];
    setActiveColumns(arg: string[]): void;
    protected checkActiveColumns(): boolean;
    protected triggerOnSearch(): void;
    onMenuClosed(): void;
    readonly filterExpression: IExpression;
}
export declare class OSearchInputModule {
}
export {};

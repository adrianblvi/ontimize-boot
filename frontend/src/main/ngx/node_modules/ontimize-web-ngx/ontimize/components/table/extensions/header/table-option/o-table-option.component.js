var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Component, Inject, forwardRef, EventEmitter, Injector, ViewEncapsulation, ElementRef, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';
import { OTableComponent } from '../../../o-table.component';
import { InputConverter } from '../../../../../decorators';
export var DEFAULT_INPUTS_O_TABLE_OPTION = [
    'oattr: attr',
    'enabled',
    'icon',
    'showActiveIcon : show-active-icon',
    'olabel: label',
    'active'
];
export var DEFAULT_OUTPUTS_O_TABLE_OPTION = [
    'onClick'
];
var OTableOptionComponent = (function () {
    function OTableOptionComponent(injector, elRef, table) {
        this.injector = injector;
        this.elRef = elRef;
        this.table = table;
        this.onClick = new EventEmitter();
        this.enabled = true;
        this.showActiveIcon = false;
        this.active = false;
        try {
            this.cd = this.injector.get(ChangeDetectorRef);
        }
        catch (e) {
        }
    }
    OTableOptionComponent.prototype.innerOnClick = function () {
        this.onClick.emit();
        this.setActive(!this.active);
    };
    OTableOptionComponent.prototype.showActiveOptionIcon = function () {
        return this.showActiveIcon && this.active;
    };
    OTableOptionComponent.prototype.setActive = function (val) {
        this.active = val;
        this.cd.detectChanges();
    };
    OTableOptionComponent.DEFAULT_INPUTS_O_TABLE_OPTION = DEFAULT_INPUTS_O_TABLE_OPTION;
    OTableOptionComponent.DEFAULT_OUTPUTS_O_TABLE_OPTION = DEFAULT_OUTPUTS_O_TABLE_OPTION;
    OTableOptionComponent.O_TABLE_OPTION_ACTIVE_CLASS = 'o-table-option-active';
    OTableOptionComponent.decorators = [
        { type: Component, args: [{
                    moduleId: module.id,
                    selector: 'o-table-option',
                    template: "\n    <button [disabled]=\"!enabled\" type=\"button\" (click)=\"innerOnClick()\" mat-menu-item fxLayout=\"row\" fxLayoutAlign=\"start center\">\n      <mat-icon *ngIf=\"showActiveOptionIcon()\" svgIcon=\"ontimize:done\" fxLayout></mat-icon>\n      {{ olabel | oTranslate }}\n      <mat-icon *ngIf=\"icon\"> {{ icon }}</mat-icon>\n    </button>\n  ",
                    styles: ["\n\n  "],
                    inputs: DEFAULT_INPUTS_O_TABLE_OPTION,
                    outputs: DEFAULT_OUTPUTS_O_TABLE_OPTION,
                    encapsulation: ViewEncapsulation.None,
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    host: {
                        '[class.o-table-option]': 'true',
                    }
                },] },
    ];
    OTableOptionComponent.ctorParameters = function () { return [
        { type: Injector },
        { type: ElementRef },
        { type: OTableComponent, decorators: [{ type: Inject, args: [forwardRef(function () { return OTableComponent; }),] }] }
    ]; };
    __decorate([
        InputConverter(),
        __metadata("design:type", Boolean)
    ], OTableOptionComponent.prototype, "enabled", void 0);
    __decorate([
        InputConverter(),
        __metadata("design:type", Boolean)
    ], OTableOptionComponent.prototype, "showActiveIcon", void 0);
    __decorate([
        InputConverter(),
        __metadata("design:type", Boolean)
    ], OTableOptionComponent.prototype, "active", void 0);
    return OTableOptionComponent;
}());
export { OTableOptionComponent };
//# sourceMappingURL=o-table-option.component.js.map
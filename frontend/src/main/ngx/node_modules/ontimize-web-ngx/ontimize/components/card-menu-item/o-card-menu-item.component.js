var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ComponentFactoryResolver, ContentChildren, ElementRef, Injector, NgModule, QueryList, ViewChild, ViewContainerRef, ViewEncapsulation } from '@angular/core';
import { CommonModule } from '@angular/common';
import { ActivatedRoute, Router } from '@angular/router';
import { OSharedModule } from '../../shared';
import { InputConverter } from '../../decorators';
import { OTranslateService } from '../../services';
export var DEFAULT_INPUTS_O_MENU_CARD = [
    'title',
    'image',
    'icon',
    'tooltip',
    'buttonText : button-text',
    'disabledButton : disabled-button',
    'mainContainerLayout : main-container-layout',
    'secondaryContainerLayout : secondary-container-layout',
    'route',
    'detailComponent : detail-component',
    'detailComponentInputs : detail-component-inputs',
    'action'
];
export var DEFAULT_OUTPUTS_O_MENU_CARD = [];
var OCardMenuItemComponent = (function () {
    function OCardMenuItemComponent(injector, router, actRoute, resolver, cd, elRef) {
        var _this = this;
        this.injector = injector;
        this.router = router;
        this.actRoute = actRoute;
        this.resolver = resolver;
        this.cd = cd;
        this.elRef = elRef;
        this.disabledButton = false;
        this.mainContainerLayout = 'column';
        this.secondaryContainerLayout = 'column';
        this._showSecondaryContainer = true;
        this.translateService = this.injector.get(OTranslateService);
        this.translateServiceSubscription = this.translateService.onLanguageChanged.subscribe(function () {
            _this.cd.detectChanges();
        });
    }
    Object.defineProperty(OCardMenuItemComponent.prototype, "detailComponentContainer", {
        get: function () {
            return this._detailComponentContainer;
        },
        set: function (content) {
            this._detailComponentContainer = content;
        },
        enumerable: true,
        configurable: true
    });
    OCardMenuItemComponent.prototype.ngAfterViewInit = function () {
        if (this.detailComponentContainer && this.detailComponent) {
            var factory = this.resolver.resolveComponentFactory(this.detailComponent);
            var ref = this.detailComponentContainer.createComponent(factory);
            if (this.detailComponentInputs && ref.instance) {
                var keys = Object.keys(this.detailComponentInputs);
                for (var i = 0, len = keys.length; i < len; i++) {
                    ref.instance[keys[i]] = this.detailComponentInputs[keys[i]];
                }
            }
        }
        this.showSecondaryContainer = (this.detailComponentContainer && this.detailComponent) || this.secondaryContent.length > 0;
        this.cd.detectChanges();
    };
    OCardMenuItemComponent.prototype.ngOnDestroy = function () {
        if (this.translateServiceSubscription) {
            this.translateServiceSubscription.unsubscribe();
        }
    };
    OCardMenuItemComponent.prototype.useImage = function () {
        return this.image !== undefined;
    };
    OCardMenuItemComponent.prototype.useIcon = function () {
        return this.icon !== undefined && this.image === undefined;
    };
    OCardMenuItemComponent.prototype.onButtonClick = function () {
        if (this.route) {
            this.router.navigate([this.route], {
                relativeTo: this.actRoute
            });
        }
        else if (this.action) {
            this.action();
        }
    };
    OCardMenuItemComponent.prototype.onClick = function () {
        if (this.buttonText === undefined) {
            this.onButtonClick();
        }
    };
    Object.defineProperty(OCardMenuItemComponent.prototype, "showSecondaryContainer", {
        get: function () {
            return this._showSecondaryContainer;
        },
        set: function (val) {
            this._showSecondaryContainer = val;
            if (val) {
                this.elRef.nativeElement.classList.remove('compact');
            }
            else {
                this.elRef.nativeElement.classList.add('compact');
            }
        },
        enumerable: true,
        configurable: true
    });
    OCardMenuItemComponent.DEFAULT_INPUTS_O_MENU_CARD = DEFAULT_INPUTS_O_MENU_CARD;
    OCardMenuItemComponent.DEFAULT_OUTPUTS_O_MENU_CARD = DEFAULT_OUTPUTS_O_MENU_CARD;
    OCardMenuItemComponent.decorators = [
        { type: Component, args: [{
                    moduleId: module.id,
                    selector: 'o-card-menu-item',
                    template: "\n    <div class=\"o-card-menu-item-content\" (click)=\"onClick()\" fxLayout=\"column\" fxFill fxLayoutAlign=\"space-between center\"\n      layout-padding>\n\n      <div class=\"o-card-menu-item-main\" fxFlex=\"{{ showSecondaryContainer ? '40' : '80' }}\" [fxLayout]=\"mainContainerLayout\"\n        fxLayoutAlign=\"space-between center\">\n        <div *ngIf=\"useImage() || useIcon()\" fxFlex=\"80\" fxLayout=\"column\" fxLayoutAlign=\"center center\" class=\"o-card-menu-item-image-container\">\n          <img *ngIf=\"useImage()\" [src]=\"image\" />\n          <mat-icon *ngIf=\"useIcon()\" class=\"o-card-menu-item-icon\" fxLayoutAlign=\"center center\">{{ icon }}</mat-icon>\n        </div>\n\n        <div class=\"o-card-menu-item-title\" fxFlex=\"20\" fxLayout=\"column\" fxLayoutAlign=\"center center\" *ngIf=\"title !== undefined\">{{\n          title | oTranslate }}</div>\n\n        <mat-icon class=\"o-card-menu-item-info\" matTooltip=\"{{ tooltip | oTranslate }}\" *ngIf=\"tooltip\" svgIcon=\"ontimize:info_outline\"></mat-icon>\n\n        <ng-content select=\".main-container\"></ng-content>\n      </div>\n\n      <button type=\"button\" *ngIf=\"buttonText !== undefined\" [disabled]=\"disabledButton\" (click)=\"onButtonClick()\"\n        mat-button>{{ buttonText | oTranslate }}</button>\n\n      <div *ngIf=\"showSecondaryContainer\" class=\"o-card-menu-item-secondary\" fxFlex=\"50\" [fxLayout]=\"secondaryContainerLayout\"\n        fxLayoutAlign=\"space-around center\">\n        <ng-content select=\".secondary-container\"></ng-content>\n        <ng-container #menuCardContent *ngIf=\"detailComponent\">\n        </ng-container>\n      </div>\n    </div>\n  ",
                    styles: ["\n    .o-card-menu-item{border-radius:3px}.o-card-menu-item .o-card-menu-item-main,.o-card-menu-item .o-card-menu-item-secondary{width:100%;padding:12px 0}.o-card-menu-item .o-card-menu-item-image-container{width:100%}.o-card-menu-item .o-card-menu-item-image-container .o-card-menu-item-icon{width:100%;height:100%;font-size:5em}.o-card-menu-item .o-card-menu-item-image-container img{max-width:100%;max-height:100%}.o-card-menu-item .mat-button,.o-card-menu-item .o-card-menu-item-title{font-weight:600}.o-card-menu-item .mat-button{width:100%;border-radius:5px;text-decoration:none}.o-card-menu-item .o-card-menu-item-main{position:relative}.o-card-menu-item .o-card-menu-item-icon,.o-card-menu-item .o-card-menu-item-title{cursor:default}.o-card-menu-item .o-card-menu-item-info{cursor:default;position:absolute;top:0;right:0}\n  "],
                    inputs: DEFAULT_INPUTS_O_MENU_CARD,
                    outputs: DEFAULT_OUTPUTS_O_MENU_CARD,
                    encapsulation: ViewEncapsulation.None,
                    host: {
                        '[class.o-card-menu-item]': 'true',
                        '[class.mat-elevation-z1]': 'true',
                        '[class.compact]': '!showSecondaryContainer'
                    },
                    changeDetection: ChangeDetectionStrategy.OnPush
                },] },
    ];
    OCardMenuItemComponent.ctorParameters = function () { return [
        { type: Injector },
        { type: Router },
        { type: ActivatedRoute },
        { type: ComponentFactoryResolver },
        { type: ChangeDetectorRef },
        { type: ElementRef }
    ]; };
    OCardMenuItemComponent.propDecorators = {
        detailComponentContainer: [{ type: ViewChild, args: ['menuCardContent', { read: ViewContainerRef },] }],
        secondaryContent: [{ type: ContentChildren, args: ['.secondary-container',] }]
    };
    __decorate([
        InputConverter(),
        __metadata("design:type", Boolean)
    ], OCardMenuItemComponent.prototype, "disabledButton", void 0);
    return OCardMenuItemComponent;
}());
export { OCardMenuItemComponent };
var OCardMenuItemModule = (function () {
    function OCardMenuItemModule() {
    }
    OCardMenuItemModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [OCardMenuItemComponent],
                    imports: [CommonModule, OSharedModule],
                    exports: [OCardMenuItemComponent]
                },] },
    ];
    return OCardMenuItemModule;
}());
export { OCardMenuItemModule };
//# sourceMappingURL=o-card-menu-item.component.js.map
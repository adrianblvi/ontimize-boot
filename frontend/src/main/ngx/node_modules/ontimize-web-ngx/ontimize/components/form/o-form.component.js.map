{"version":3,"file":"o-form.component.js","sourceRoot":"","sources":["../../../../tmp/ontimize/components/form/o-form.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { CommonModule } from '@angular/common';\nimport { ChangeDetectorRef, Component, CUSTOM_ELEMENTS_SCHEMA, ElementRef, EventEmitter, Injector, NgModule, NgZone, OnDestroy, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router, UrlSegment } from '@angular/router';\nimport { BehaviorSubject, combineLatest, Observable, Subscription } from 'rxjs';\nimport { InputConverter } from '../../decorators';\nimport { OFormLayoutManagerComponent } from '../../layouts';\nimport { DialogService, NavigationService, OFormPermissions, ONavigationItem, OntimizeService, OPermissions, PermissionsService, SnackBarService } from '../../services';\nimport { dataServiceFactory } from '../../services/data-service.provider';\nimport { OSharedModule } from '../../shared';\nimport { Codes, SQLTypes, Util } from '../../utils';\nimport { OFormControl } from '../input/o-form-control.class';\nimport { IComponent } from '../o-component.class';\nimport { IFormDataComponent, IFormDataTypeComponent } from '../o-form-data-component.class';\nimport { OFormCacheClass } from './cache/o-form.cache.class';\nimport { CanComponentDeactivate, CanDeactivateFormGuard } from './guards/o-form-can-deactivate.guard';\nimport { OFormNavigationClass } from './navigation/o-form.navigation.class';\nimport { OFormContainerComponent } from './o-form-container.component';\nimport { IFormValueOptions, OFormValue } from './OFormValue';\nimport { OFormToolbarComponent, OFormToolbarModule } from './toolbar/o-form-toolbar.component';\n\n\nexport interface IFormDataComponentHash {\n  [attr: string]: IFormDataComponent;\n}\n\nexport const DEFAULT_INPUTS_O_FORM = [\n  // show-header [boolean]: visibility of form toolbar. Default: yes.\n  'showHeader: show-header',\n\n  // header-mode [string][ none | floating ]: painting mode of form toolbar. Default: 'floating'\n  'headerMode: header-mode',\n\n  // header-position [ top | bottom ]: position of the form toolbar. Default: 'top'\n  'headerPosition: header-position',\n\n  // label-header [string]: displayable text on form toolbar. Default: ''.\n  'labelheader: label-header',\n\n  // label-header-align [string][start | center | end]: alignment of form toolbar text. Default: 'center'\n  'labelHeaderAlign: label-header-align',\n\n  // header-actions [string]: available action buttons on form toolbar of standard CRUD operations, separated by ';'. Available options are R;I;U;D (Refresh, Insert, Update, Delete). Default: R;I;U;D\n  'headeractions: header-actions',\n\n  // show-header-actions-text [string][yes|no|true|false]: show text of form toolbar buttons. Default yes\n  'showHeaderActionsText: show-header-actions-text',\n\n  // entity [string]: entity of the service. Default: no value.\n  'entity',\n\n  // keys [string]: entity keys, separated by ';'. Default: no value.\n  'keys',\n\n  // columns [string]: columns of the entity, separated by ';'. Default: no value.\n  'columns',\n\n  // service [string]: JEE service path. Default: no value.\n  'service',\n\n  // stay-in-record-after-insert [string][yes|no|true|false]: shows detail form after insert new record. Default: false;\n  'stayInRecordAfterInsert: stay-in-record-after-insert',\n\n  // stay-in-record-after-edit [string][yes|no|true|false]: shows edit form after edit a record. Default: false;\n  'stayInRecordAfterEdit: stay-in-record-after-edit',\n\n  'serviceType : service-type',\n\n  'queryOnInit : query-on-init',\n\n  'parentKeys: parent-keys',\n\n  // query-method [string]: name of the service method to perform queries. Default: query.\n  'queryMethod: query-method',\n\n  // insert-method [string]: name of the service method to perform inserts. Default: insert.\n  'insertMethod: insert-method',\n\n  // update-method [string]: name of the service method to perform updates. Default: update.\n  'updateMethod: update-method',\n\n  // delete-method [string]: name of the service method to perform deletions. Default: delete.\n  'deleteMethod: delete-method',\n\n  // layout-direction [string][column|row]: Default: column\n  'layoutDirection: layout-direction',\n\n  // fxLayoutAlign value\n  'layoutAlign: layout-align',\n\n  // editable-detail [string][yes|no|true|false]: Default: true;\n  'editableDetail: editable-detail',\n\n  // keys-sql-types [string]: entity keys types, separated by ';'. Default: no value.\n  'keysSqlTypes: keys-sql-types',\n\n  // undo-button [string][yes|no|true|false]: Include undo button in form-toolbar. Default: true;\n  'undoButton: undo-button',\n\n  // show-header-navigation [string][yes|no|true|false]: Include navigations buttons in form-toolbar. Default: false;\n  'showHeaderNavigation: show-header-navigation',\n\n  // attr\n  'oattr:attr',\n\n  'includeBreadcrumb: include-breadcrumb',\n\n  'detectChangesOnBlur: detect-changes-on-blur',\n\n  'confirmExit: confirm-exit'\n];\n\nexport const DEFAULT_OUTPUTS_O_FORM = [\n  'onDataLoaded',\n  'beforeCloseDetail',\n  'beforeGoEditMode',\n  'onFormModeChange',\n  'onInsert',\n  'onUpdate',\n  'onDelete'\n];\n\nexport interface OFormInitializationOptions {\n  entity?: string;\n  service?: string;\n  columns?: string;\n  visibleColumns?: string;\n  keys?: string;\n  sortColumns?: string;\n  editableColumns?: string;\n  parentKeys?: string;\n}\n\n@Component({\n  moduleId: module.id,\n  selector: 'o-form',\n  providers: [\n    { provide: OntimizeService, useFactory: dataServiceFactory, deps: [Injector] }\n  ],\n  template: `\n    <ng-template #customFormToolbarButtons>\n      <ng-content select=\"[o-form-toolbar-buttons]\"></ng-content>\n    </ng-template>\n\n    <o-form-toolbar *ngIf=\"showFloatingToolbar && headerPosition==='top'\" [label-header]=\"labelheader\"\n      [label-header-align]=\"labelHeaderAlign\" [header-actions]=\"headeractions\"\n      [show-header-navigation]=\"showHeaderNavigation\" [show-header-actions-text]=\"showHeaderActionsText\" layout-padding>\n      <div o-custom-form-toolbar-buttons-wrapper fxLayout=\"row\" fxLayoutAlign=\"end center\">\n        <ng-container *ngTemplateOutlet=\"customFormToolbarButtons\"></ng-container>\n      </div>\n    </o-form-toolbar>\n\n    <ng-host oKeyboardListener keyboardKeys=\"17;90\" (onKeysPressed)=\"undoKeyboardPressed()\" class=\"scrolling o-scroll\">\n      <div fxFlex=\"grow\">\n        <o-form-toolbar *ngIf=\"showNotFloatingToolbar && headerPosition==='top'\" [label-header]=\"labelheader\"\n          [label-header-align]=\"labelHeaderAlign\" [header-actions]=\"headeractions\"\n          [show-header-navigation]=\"showHeaderNavigation\" [show-header-actions-text]=\"showHeaderActionsText\" layout-padding>\n          <div o-custom-form-toolbar-buttons-wrapper fxLayout=\"row\" fxLayoutAlign=\"end center\">\n            <div o-custom-form-toolbar-buttons-wrapper fxLayout=\"row\" fxLayoutAlign=\"end center\">\n              <ng-container *ngTemplateOutlet=\"customFormToolbarButtons\"></ng-container>\n            </div>\n          </div>\n        </o-form-toolbar>\n\n        <form #innerForm [formGroup]=\"formGroup\" class=\"inner-form\" [class.form-no-toolbar]=\"!showHeader\" autocomplete=\"off\"\n          autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\">\n          <div *ngIf=\"loading | async\" class=\"progress-bar-container\">\n            <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n          </div>\n          <div layout-padding [fxLayout]=\"layoutDirection\" [fxLayoutAlign]=\"layoutAlign\" class=\"o-form-content-wrapper\">\n            <ng-content></ng-content>\n          </div>\n        </form>\n\n        <o-form-toolbar *ngIf=\"showNotFloatingToolbar && headerPosition==='bottom'\" [label-header]=\"labelheader\"\n          [label-header-align]=\"labelHeaderAlign\" [header-actions]=\"headeractions\"\n          [show-header-navigation]=\"showHeaderNavigation\" [show-header-actions-text]=\"showHeaderActionsText\" layout-padding>\n          <div o-custom-form-toolbar-buttons-wrapper fxLayout=\"row\" fxLayoutAlign=\"end center\">\n            <ng-container *ngTemplateOutlet=\"customFormToolbarButtons\"></ng-container>\n          </div>\n        </o-form-toolbar>\n      </div>\n    </ng-host>\n\n    <o-form-toolbar *ngIf=\"showFloatingToolbar && headerPosition==='bottom'\" [label-header]=\"labelheader\"\n      [label-header-align]=\"labelHeaderAlign\" [header-actions]=\"headeractions\"\n      [show-header-navigation]=\"showHeaderNavigation\" [show-header-actions-text]=\"showHeaderActionsText\" layout-padding>\n      <div o-custom-form-toolbar-buttons-wrapper fxLayout=\"row\" fxLayoutAlign=\"end center\">\n        <ng-container *ngTemplateOutlet=\"customFormToolbarButtons\"></ng-container>\n      </div>\n    </o-form-toolbar>\n  `,\n  styles: [`\n    .o-form{display:flex;flex:auto;flex-direction:column;max-height:100%}.o-form .scrolling{display:flex;flex:auto;overflow-y:auto;flex-direction:column}.o-form form.inner-form{display:flex;flex:auto;flex-direction:column;max-height:100%}.o-form form.inner-form .progress-bar-container{padding:8px}.o-form form.form-no-toolbar{top:0}.o-form form .o-form-content-wrapper{height:100%;width:100%;box-sizing:border-box}\n  `],\n  inputs: DEFAULT_INPUTS_O_FORM,\n  outputs: DEFAULT_OUTPUTS_O_FORM,\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    '[class.o-form]': 'true'\n  }\n})\nexport class OFormComponent implements OnInit, OnDestroy, CanComponentDeactivate {\n\n  public static DEFAULT_INPUTS_O_FORM = DEFAULT_INPUTS_O_FORM;\n  public static DEFAULT_OUTPUTS_O_FORM = DEFAULT_OUTPUTS_O_FORM;\n\n  public static BACK_ACTION: string = 'BACK';\n  public static CLOSE_DETAIL_ACTION: string = 'CLOSE';\n  public static RELOAD_ACTION: string = 'RELOAD';\n  public static GO_EDIT_ACTION: string = 'GO_EDIT';\n  public static EDIT_ACTION: string = 'EDIT';\n  public static INSERT_ACTION: string = 'INSERT';\n  public static GO_INSERT_ACTION: string = 'GO_INSERT';\n  public static DELETE_ACTION: string = 'DELETE';\n  public static UNDO_LAST_CHANGE_ACTION: string = 'UNDO_LAST_CHANGE';\n\n  public static DEFAULT_LAYOUT_DIRECTION = 'column';\n  public static guardClassName = 'CanDeactivateFormGuard';\n\n  /* inputs variables */\n  @InputConverter()\n  showHeader: boolean = true;\n  headerMode: string = 'floating';\n  headerPosition: 'top' | 'bottom' = 'top';\n  labelheader: string = '';\n  labelHeaderAlign: string = 'center';\n  headeractions: string = '';\n  showHeaderActionsText: string = 'yes';\n  entity: string;\n  keys: string = '';\n  columns: string = '';\n  service: string;\n  @InputConverter()\n  stayInRecordAfterInsert: boolean = false;\n  @InputConverter()\n  stayInRecordAfterEdit: boolean = false;\n  serviceType: string;\n  @InputConverter()\n  protected queryOnInit: boolean = true;\n  protected parentKeys: string;\n  protected queryMethod: string = Codes.QUERY_METHOD;\n  protected insertMethod: string = Codes.INSERT_METHOD;\n  protected updateMethod: string = Codes.UPDATE_METHOD;\n  protected deleteMethod: string = Codes.DELETE_METHOD;\n  protected _layoutDirection: string = OFormComponent.DEFAULT_LAYOUT_DIRECTION;\n  protected _layoutAlign: string;\n  @InputConverter()\n  protected editableDetail: boolean = true;\n  protected keysSqlTypes: string;\n  @InputConverter()\n  undoButton: boolean = true;\n  @InputConverter()\n  showHeaderNavigation: boolean = false;\n  public oattr: string = '';\n  @InputConverter()\n  includeBreadcrumb: boolean = false;\n  @InputConverter()\n  detectChangesOnBlur: boolean = true;\n  @InputConverter()\n  confirmExit: boolean = true;\n  /* end of inputs variables */\n\n  /*parsed inputs variables */\n  isDetailForm: boolean = false;\n  keysArray: string[] = [];\n  colsArray: string[] = [];\n  dataService: any;\n  _pKeysEquiv = {};\n  keysSqlTypesArray: Array<string> = [];\n  /* end of parsed inputs variables */\n\n  formGroup: FormGroup;\n  onDataLoaded: EventEmitter<Object> = new EventEmitter<Object>();\n  beforeCloseDetail: EventEmitter<any> = new EventEmitter<any>();\n  beforeGoEditMode: EventEmitter<any> = new EventEmitter<any>();\n  onFormModeChange: EventEmitter<Object> = new EventEmitter<Object>();\n  public onInsert: EventEmitter<any> = new EventEmitter();\n  public onUpdate: EventEmitter<any> = new EventEmitter();\n  public onDelete: EventEmitter<any> = new EventEmitter();\n\n  protected loadingSubject = new BehaviorSubject<boolean>(false);\n  public loading: Observable<boolean> = this.loadingSubject.asObservable();\n  public formData: Object = {};\n  public navigationData: Array<any> = [];\n  public currentIndex = 0;\n  public mode: number = OFormComponent.Mode().INITIAL;\n\n  protected dialogService: DialogService;\n  protected navigationService: NavigationService;\n  protected snackBarService: SnackBarService;\n\n  protected _formToolbar: OFormToolbarComponent;\n\n  protected _components: IFormDataComponentHash = {};\n  protected _compSQLTypes: Object = {};\n\n  formParentKeysValues: Object;\n\n  public onFormInitStream: EventEmitter<Object> = new EventEmitter<Object>();\n  protected reloadStream: Observable<any>;\n  protected reloadStreamSubscription: Subscription;\n\n  protected querySubscription: Subscription;\n  protected loaderSubscription: Subscription;\n  protected dynamicFormSubscription: Subscription;\n\n  protected deactivateGuard: CanDeactivateFormGuard;\n  protected formCache: OFormCacheClass;\n  protected formNavigation: OFormNavigationClass;\n\n  public formContainer: OFormContainerComponent;\n\n  protected permissionsService: PermissionsService;\n  protected permissions: OFormPermissions;\n\n  public static Mode(): any {\n    enum m {\n      QUERY,\n      INSERT,\n      UPDATE,\n      INITIAL\n    }\n    return m;\n  }\n\n  @ViewChild('innerForm') innerFormEl: ElementRef;\n\n  ignoreFormCacheKeys: Array<any> = [];\n  canDiscardChanges: boolean;\n\n  constructor(\n    protected router: Router,\n    protected actRoute: ActivatedRoute,\n    protected zone: NgZone,\n    protected cd: ChangeDetectorRef,\n    protected injector: Injector,\n    protected elRef: ElementRef) {\n\n    this.formCache = new OFormCacheClass(this);\n    this.formNavigation = new OFormNavigationClass(this.injector, this, this.router, this.actRoute);\n\n    this.dialogService = injector.get(DialogService);\n    this.navigationService = injector.get(NavigationService);\n    this.snackBarService = injector.get(SnackBarService);\n    this.permissionsService = this.injector.get(PermissionsService);\n\n    const self = this;\n    this.reloadStream = combineLatest(\n      self.onFormInitStream.asObservable(),\n      self.formNavigation.navigationStream.asObservable()\n    );\n\n    this.reloadStreamSubscription = this.reloadStream.subscribe(valArr => {\n      if (Util.isArray(valArr) && valArr.length === 2 && !self.isInInsertMode()) {\n        const valArrValues = valArr[0] === true && valArr[1] === true;\n        if (self.queryOnInit && valArrValues) {\n          self._reloadAction(true);\n        } else {\n          self.initializeFields();\n        }\n      }\n    });\n\n    try {\n      this.formContainer = injector.get(OFormContainerComponent);\n      this.formContainer.setForm(this);\n    } catch (e) {\n      //\n    }\n  }\n\n  registerFormComponent(comp: any) {\n    if (comp) {\n      let attr = comp.getAttribute();\n      if (attr && attr.length > 0) {\n\n        if (!comp.isAutomaticRegistering()) {\n          return;\n        }\n\n        if (this._components.hasOwnProperty(attr)) {\n          comp.repeatedAttr = true;\n          console.error('There is already a component registered in the form with the attr: ' + attr);\n          return;\n        }\n\n        this._components[attr] = comp;\n        // Setting parent key values...\n        if (this.formParentKeysValues && this.formParentKeysValues[attr] !== undefined) {\n          let val = this.formParentKeysValues[attr];\n          this._components[attr].setValue(val, {\n            emitModelToViewChange: false,\n            emitEvent: false\n          });\n        }\n        /*\n        * TODO. Check it!!!\n        * En un formulario con tabs, cuando se cambia de uno a otro, se destruyen las vistas\n        * de los componentes hijo del formulario.\n        * formDataCache contiene los valores (originales ó editados) de los campos del formulario.\n        * La idea es asignar ese valor al campo cuando se registre de nuevo (Hay que asegurar el proceso\n        * para que sólo sea cuando se registra de nuevo ;) )\n        */\n        const cachedValue = this.formCache.getCachedValue(attr);\n        if (Util.isDefined(cachedValue) && this.getDataValues() && this._components.hasOwnProperty(attr)) {\n          this._components[attr].setValue(cachedValue, {\n            emitModelToViewChange: false,\n            emitEvent: false\n          });\n        }\n      }\n    }\n  }\n\n  registerSQLTypeFormComponent(comp: IFormDataTypeComponent) {\n    if ((comp as any).repeatedAttr) {\n      return;\n    }\n    if (comp) {\n      let type = comp.getSQLType();\n      let attr = comp.getAttribute();\n      if (type !== SQLTypes.OTHER && attr && attr.length > 0 && this.ignoreFormCacheKeys.indexOf(attr) === -1) {\n        // Right now just store values different of 'OTHER'\n        this._compSQLTypes[attr] = type;\n      }\n    }\n  }\n\n  registerFormControlComponent(comp: IFormDataComponent) {\n    if ((comp as any).repeatedAttr) {\n      return;\n    }\n    if (comp) {\n      let attr = comp.getAttribute();\n      if (attr && attr.length > 0) {\n        let control: FormControl = comp.getControl();\n        if (control) {\n          this.formGroup.registerControl(attr, control);\n          if (!comp.isAutomaticRegistering()) {\n            this.ignoreFormCacheKeys.push(comp.getAttribute());\n          }\n        }\n      }\n    }\n  }\n\n  unregisterFormComponent(comp: IComponent) {\n    if (comp) {\n      let attr = comp.getAttribute();\n      if (attr && attr.length > 0 && this._components.hasOwnProperty(attr)) {\n        delete this._components[attr];\n      }\n    }\n  }\n\n  unregisterFormControlComponent(comp: IFormDataComponent) {\n    if (comp && comp.isAutomaticRegistering()) {\n      let control: FormControl = comp.getControl();\n      let attr = comp.getAttribute();\n      if (control && attr && attr.length > 0) {\n        this.formGroup.removeControl(attr);\n      }\n    }\n  }\n\n  unregisterSQLTypeFormComponent(comp: IFormDataTypeComponent) {\n    if (comp) {\n      let attr = comp.getAttribute();\n      if (attr && attr.length > 0) {\n        delete this._compSQLTypes[attr];\n      }\n    }\n  }\n\n  registerToolbar(fToolbar: OFormToolbarComponent) {\n    if (fToolbar) {\n      this._formToolbar = fToolbar;\n      this._formToolbar.isDetail = this.isDetailForm;\n    }\n  }\n\n  getComponents(): IFormDataComponentHash {\n    return this._components;\n  }\n\n  public load(): any {\n    var self = this;\n    var zone = this.injector.get(NgZone);\n    var loadObservable = new Observable(observer => {\n      var timer = window.setTimeout(() => {\n        observer.next(true);\n      }, 250);\n\n      return () => {\n        window.clearTimeout(timer);\n        zone.run(() => {\n          self.loadingSubject.next(false);\n        });\n      };\n\n    });\n    var subscription = loadObservable.subscribe(val => {\n      zone.run(() => {\n        self.loadingSubject.next(val as boolean);\n      });\n    });\n    return subscription;\n  }\n\n  getDataValue(attr: string) {\n    if (this.isInInsertMode()) {\n      let urlParams = this.formNavigation.getFilterFromUrlParams();\n      let val = this.formGroup.value[attr] || urlParams[attr];\n      return new OFormValue(val);\n    } else if (this.isInInitialMode() && !this.isEditableDetail()) {\n      let data = this.formData;\n      if (data && data.hasOwnProperty(attr)) {\n        return data[attr];\n      }\n    } else if (this.isInUpdateMode() || this.isEditableDetail()) {\n      if (this.formData && Object.keys(this.formData).length > 0) {\n        const val = this.formCache.getCachedValue(attr);\n        if (this.formGroup.dirty && val) {\n          if (val instanceof OFormValue) {\n            return val;\n          }\n          return new OFormValue(val);\n        } else {\n          // Return original value stored into form data...\n          let data = this.formData;\n          if (data && data.hasOwnProperty(attr)) {\n            return data[attr];\n          }\n        }\n      }\n    }\n    return new OFormValue();\n  }\n\n  getDataValues() {\n    return this.formData;\n  }\n\n  clearData() {\n    const filter = this.formNavigation.getFilterFromUrlParams();\n    this.formGroup.reset({}, {\n      emitEvent: false\n    });\n    this._setData(filter);\n  }\n\n  canDeactivate(): Observable<boolean> | Promise<boolean> | boolean {\n    if (!this.confirmExit) {\n      return true;\n    }\n    const canDiscardChanges = this.canDiscardChanges;\n    this.canDiscardChanges = false;\n    return canDiscardChanges || this.showConfirmDiscardChanges();\n  }\n\n  showConfirmDiscardChanges(): Promise<boolean> {\n    return this.formNavigation.showConfirmDiscardChanges();\n  }\n\n  executeToolbarAction(action: string, options?: any) {\n    switch (action) {\n      case OFormComponent.BACK_ACTION: this._backAction(); break;\n      case OFormComponent.CLOSE_DETAIL_ACTION: this._closeDetailAction(options); break;\n      case OFormComponent.RELOAD_ACTION: this._reloadAction(true); break;\n      case OFormComponent.GO_INSERT_ACTION: this._goInsertMode(options); break;\n      case OFormComponent.INSERT_ACTION: this._insertAction(); break;\n      case OFormComponent.GO_EDIT_ACTION: this._goEditMode(options); break;\n      case OFormComponent.EDIT_ACTION: this._editAction(); break;\n      case OFormComponent.UNDO_LAST_CHANGE_ACTION: this._undoLastChangeAction(); break;\n      case OFormComponent.DELETE_ACTION: return this._deleteAction();\n      default: break;\n    }\n    return undefined;\n  }\n\n  ngOnInit(): void {\n    this.addDeactivateGuard();\n\n    this.formGroup = new FormGroup({});\n\n    this.formNavigation.initialize();\n\n    this.initialize();\n  }\n\n  addDeactivateGuard() {\n    if (this.isInInitialMode() && !this.isEditableDetail()) {\n      return;\n    }\n    if (!this.actRoute || !this.actRoute.routeConfig) {\n      return;\n    }\n    this.deactivateGuard = this.injector.get(CanDeactivateFormGuard);\n    this.deactivateGuard.setForm(this);\n    let canDeactivateArray = (this.actRoute.routeConfig.canDeactivate || []);\n    let previouslyAdded = false;\n    for (let i = 0, len = canDeactivateArray.length; i < len; i++) {\n      previouslyAdded = (canDeactivateArray[i].name === OFormComponent.guardClassName);\n      if (previouslyAdded) {\n        break;\n      }\n    }\n    if (!previouslyAdded) {\n      canDeactivateArray.push(this.deactivateGuard.constructor);\n      this.actRoute.routeConfig.canDeactivate = canDeactivateArray;\n    }\n  }\n\n  destroyDeactivateGuard() {\n    try {\n      if (!this.deactivateGuard || !this.actRoute || !this.actRoute.routeConfig || !this.actRoute.routeConfig.canDeactivate) {\n        return;\n      }\n      this.deactivateGuard.setForm(undefined);\n      for (let i = this.actRoute.routeConfig.canDeactivate.length - 1; i >= 0; i--) {\n        if (this.actRoute.routeConfig.canDeactivate[i].name === OFormComponent.guardClassName) {\n          this.actRoute.routeConfig.canDeactivate.splice(i, 1);\n          break;\n        }\n      }\n      if (this.actRoute.routeConfig.canDeactivate.length === 0) {\n        delete this.actRoute.routeConfig.canDeactivate;\n      }\n    } catch (e) {\n      //\n    }\n  }\n\n  hasDeactivateGuard() {\n    return Util.isDefined(this.deactivateGuard);\n  }\n\n  /**\n   * Angular methods\n   */\n\n  initialize() {\n    const self = this;\n    if (this.headeractions === 'all') {\n      this.headeractions = 'R;I;U;D';\n    }\n    this.keysArray = Util.parseArray(this.keys, true);\n    this.colsArray = Util.parseArray(this.columns, true);\n    let pkArray = Util.parseArray(this.parentKeys);\n    this._pKeysEquiv = Util.parseParentKeysEquivalences(pkArray);\n    this.keysSqlTypesArray = Util.parseArray(this.keysSqlTypes);\n\n    this.configureService();\n\n    this.formNavigation.subscribeToQueryParams();\n    this.formNavigation.subscribeToUrlParams();\n    this.formNavigation.subscribeToUrl();\n    this.formNavigation.subscribeToCacheChanges(this.formCache.onCacheEmptyStateChanges);\n\n    if (this.navigationService) {\n      this.navigationService.onVisibleChange(visible => {\n        self.showHeader = visible;\n      });\n    }\n\n    this.mode = OFormComponent.Mode().INITIAL;\n\n    this.permissions = this.permissionsService.getFormPermissions(this.oattr, this.actRoute);\n  }\n\n  reinitialize(options: OFormInitializationOptions) {\n    if (options && Object.keys(options).length) {\n      let clonedOpts = Object.assign({}, options);\n      for (const prop in clonedOpts) {\n        if (clonedOpts.hasOwnProperty(prop)) {\n          this[prop] = clonedOpts[prop];\n        }\n      }\n      this.destroy();\n      this.initialize();\n    }\n  }\n\n  configureService() {\n    let loadingService: any = OntimizeService;\n    if (this.serviceType) {\n      loadingService = this.serviceType;\n    }\n    try {\n      this.dataService = this.injector.get(loadingService);\n      if (Util.isDataService(this.dataService)) {\n        let serviceCfg = this.dataService.getDefaultServiceConfiguration(this.service);\n        if (this.entity) {\n          serviceCfg['entity'] = this.entity;\n        }\n        this.dataService.configureService(serviceCfg);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy();\n  }\n\n  destroy() {\n    if (this.reloadStreamSubscription) {\n      this.reloadStreamSubscription.unsubscribe();\n    }\n    if (this.querySubscription) {\n      this.querySubscription.unsubscribe();\n    }\n    if (this.loaderSubscription) {\n      this.loaderSubscription.unsubscribe();\n    }\n    this.formCache.destroy();\n    this.formNavigation.destroy();\n    this.destroyDeactivateGuard();\n  }\n\n  ngAfterViewInit() {\n    setTimeout(() => {\n      this.determinateFormMode();\n      this.onFormInitStream.emit(true);\n    });\n  }\n\n  /*\n   * Inner methods\n   */\n\n  _setComponentsEditable(state: boolean) {\n    let components: any = this.getComponents();\n    Object.keys(components).forEach(compKey => {\n      const component = components[compKey];\n      component.isReadOnly = !state;\n    });\n  }\n\n  /**\n   * Sets form operation mode.\n   * @param mode The mode to be established\n   */\n  setFormMode(mode: number) {\n    switch (mode) {\n      case OFormComponent.Mode().INITIAL:\n        this.mode = mode;\n        if (this._formToolbar) {\n          this._formToolbar.setInitialMode();\n        }\n        this._setComponentsEditable(this.isEditableDetail());\n        this.onFormModeChange.emit(this.mode);\n        break;\n      case OFormComponent.Mode().INSERT:\n        this.mode = mode;\n        if (this._formToolbar) {\n          this._formToolbar.setInsertMode();\n        }\n        this.clearData();\n        this._setComponentsEditable(true);\n        this.onFormModeChange.emit(this.mode);\n        break;\n      case OFormComponent.Mode().UPDATE:\n        this.mode = mode;\n        if (this._formToolbar) {\n          this._formToolbar.setEditMode();\n        }\n        this._setComponentsEditable(true);\n        this.onFormModeChange.emit(this.mode);\n      default:\n        break;\n    }\n  }\n\n  _setData(data) {\n    if (Util.isArray(data)) {\n      if (data.lenght > 1) {\n        console.warn('[OFormComponent] Form data has more than a single record. Storing empty data');\n      }\n      let currentData = data.length === 1 ? data[0] : {};\n      this._updateFormData(this.toFormValueData(currentData));\n      this._emitData(currentData);\n    } else if (Util.isObject(data)) {\n      this._updateFormData(this.toFormValueData(data));\n      this._emitData(data);\n    } else {\n      console.warn('Form has received not supported service data. Supported data are Array or Object');\n      this._updateFormData({});\n    }\n  }\n\n  _emitData(data) {\n    this.onDataLoaded.emit(data);\n  }\n\n  _backAction() {\n    this.formNavigation.navigateBack();\n  }\n\n  _closeDetailAction(options?: any) {\n    this.formNavigation.closeDetailAction(options);\n  }\n\n  _stayInRecordAfterInsert(insertedKeys: Object) {\n    this.formNavigation.stayInRecordAfterInsert(insertedKeys);\n  }\n\n  _reloadAction(useFilter: boolean = false) {\n    let filter = {};\n    if (useFilter) {\n      filter = this.getCurrentKeysValues();\n    }\n    this.queryData(filter);\n  }\n\n  /**\n   * Navigates to 'insert' mode\n   */\n  _goInsertMode(options?: any) {\n    this.formNavigation.goInsertMode(options);\n  }\n\n  /**\n   * Performs insert action.\n   */\n  _insertAction() {\n    Object.keys(this.formGroup.controls).forEach((control) => {\n      this.formGroup.controls[control].markAsTouched();\n    });\n\n    if (!this.formGroup.valid) {\n      this.dialogService.alert('ERROR', 'MESSAGES.FORM_VALIDATION_ERROR');\n      return;\n    }\n\n    const self = this;\n    let values = this.getAttributesValuesToInsert();\n    let sqlTypes = this.getAttributesSQLTypes();\n    this.insertData(values, sqlTypes).subscribe(resp => {\n      self.postCorrectInsert(resp);\n      self.formCache.setCacheSnapshot();\n      self.markFormLayoutManagerToUpdate();\n      if (self.stayInRecordAfterInsert) {\n        self._stayInRecordAfterInsert(resp);\n      } else {\n        self._closeDetailAction();\n      }\n    }, error => {\n      self.postIncorrectInsert(error);\n    });\n  }\n\n  /**\n   * Navigates to 'edit' mode\n   */\n  _goEditMode(options?: any) {\n    this.formNavigation.goEditMode();\n  }\n\n  /**\n   * Performs 'edit' action\n   */\n  _editAction() {\n    Object.keys(this.formGroup.controls).forEach(\n      (control) => {\n        this.formGroup.controls[control].markAsTouched();\n      }\n    );\n\n    if (!this.formGroup.valid) {\n      this.dialogService.alert('ERROR', 'MESSAGES.FORM_VALIDATION_ERROR');\n      return;\n    }\n\n    // retrieving keys...\n    const self = this;\n    let filter = this.getKeysValues();\n\n    // retrieving values to update...\n    let values = this.getAttributesValuesToUpdate();\n    let sqlTypes = this.getAttributesSQLTypes();\n\n    if (Object.keys(values).length === 0) {\n      // Nothing to update\n      this.dialogService.alert('INFO', 'MESSAGES.FORM_NOTHING_TO_UPDATE_INFO');\n      return;\n    }\n\n    // invoke update method...\n    this.updateData(filter, values, sqlTypes).subscribe(resp => {\n      self.postCorrectUpdate(resp);\n      self.formCache.setCacheSnapshot();\n      self.markFormLayoutManagerToUpdate();\n      if (self.stayInRecordAfterEdit) {\n        self._reloadAction(true);\n      } else {\n        self._closeDetailAction();\n      }\n    }, error => {\n      self.postIncorrectUpdate(error);\n    });\n  }\n\n  /**\n   * Performs 'delete' action\n   */\n  _deleteAction() {\n    let filter = this.getKeysValues();\n    return this.deleteData(filter);\n  }\n\n  /*\n  Utility methods\n  */\n\n  queryData(filter) {\n    if (!Util.isDefined(this.dataService)) {\n      console.warn('OFormComponent: no service configured! aborting query');\n      return;\n    }\n    if (!Util.isDefined(filter) || Object.keys(filter).length === 0) {\n      console.warn('OFormComponent: no filter configured! aborting query');\n      return;\n    }\n    this.formCache.restartCache();\n    this.clearComponentsOldValue();\n    if (this.querySubscription) {\n      this.querySubscription.unsubscribe();\n    }\n    if (this.loaderSubscription) {\n      this.loaderSubscription.unsubscribe();\n    }\n    const self = this;\n    this.loaderSubscription = this.load();\n    let av = this.getAttributesToQuery();\n    let sqlTypes = this.getAttributesSQLTypes();\n    this.querySubscription = this.dataService[this.queryMethod](filter, av, this.entity, sqlTypes).subscribe(\n      resp => {\n        if (resp.code === Codes.ONTIMIZE_SUCCESSFUL_CODE) {\n          self._setData(resp.data);\n        } else {\n          self._updateFormData({});\n          self.dialogService.alert('ERROR', 'MESSAGES.ERROR_QUERY');\n          console.error('ERROR: ' + resp.message);\n        }\n        self.loaderSubscription.unsubscribe();\n      },\n      err => {\n        console.error(err);\n        self._updateFormData({});\n        if (err && err.statusText) {\n          self.dialogService.alert('ERROR', err.statusText);\n        } else {\n          self.dialogService.alert('ERROR', 'MESSAGES.ERROR_QUERY');\n        }\n        self.loaderSubscription.unsubscribe();\n      });\n  }\n\n  getAttributesToQuery(): Array<any> {\n    let attributes: Array<any> = [];\n    // add form keys...\n    if (this.keysArray && this.keysArray.length > 0) {\n      attributes.push(...this.keysArray);\n    }\n    const components: any = this.getComponents();\n    // add only the fields contained into the form...\n    Object.keys(components).forEach(item => {\n      if (attributes.indexOf(item) < 0 &&\n        components[item].isAutomaticRegistering() && components[item].isAutomaticBinding()) {\n        attributes.push(item);\n      }\n    });\n\n    // add fields stored into form cache...\n    const dataCache = this.formCache.getDataCache();\n    if (dataCache) {\n      Object.keys(dataCache).forEach(item => {\n        if (item !== undefined && attributes.indexOf(item) === -1) {\n          attributes.push(item);\n        }\n      });\n    }\n    attributes = attributes.concat(this.colsArray.filter(col => attributes.indexOf(col) < 0));\n    return attributes;\n  }\n\n  insertData(values, sqlTypes?: Object): Observable<any> {\n    if (this.loaderSubscription) {\n      this.loaderSubscription.unsubscribe();\n    }\n    this.loaderSubscription = this.load();\n    const self = this;\n    let observable = new Observable(observer => {\n      this.dataService[this.insertMethod](values, this.entity, sqlTypes).subscribe(\n        resp => {\n          if (resp.code === Codes.ONTIMIZE_SUCCESSFUL_CODE) {\n            observer.next(resp.data);\n            observer.complete();\n          } else {\n            observer.error(resp.message);\n          }\n          self.loaderSubscription.unsubscribe();\n        },\n        err => {\n          observer.error(err);\n          self.loaderSubscription.unsubscribe();\n        });\n    });\n    return observable;\n  }\n\n  getAttributesValuesToInsert(): Object {\n    let attrValues = {};\n    if (this.formParentKeysValues) {\n      Object.assign(attrValues, this.formParentKeysValues);\n    }\n    return Object.assign(attrValues, this.getRegisteredFieldsValues());\n  }\n\n  /**\n   * Returns an object with the sql types from the form components and the form keys\n   */\n  public getAttributesSQLTypes(): Object {\n    const types: Object = {};\n    // Add form keys sql types\n    this.keysSqlTypesArray.forEach((kst, i) => types[this.keysArray[i]] = SQLTypes.getSQLTypeValue(kst));\n    // Add form components sql types\n    if (this._compSQLTypes && Object.keys(this._compSQLTypes).length > 0) {\n      Object.assign(types, this._compSQLTypes);\n    }\n    return types;\n  }\n\n  updateData(filter, values, sqlTypes?: Object): Observable<any> {\n    if (this.loaderSubscription) {\n      this.loaderSubscription.unsubscribe();\n    }\n    this.loaderSubscription = this.load();\n    const self = this;\n    let observable = new Observable(observer => {\n      this.dataService[this.updateMethod](filter, values, this.entity, sqlTypes).subscribe(\n        resp => {\n          if (resp.code === Codes.ONTIMIZE_SUCCESSFUL_CODE) {\n            observer.next(resp.data);\n            observer.complete();\n          } else {\n            observer.error(resp.message);\n          }\n          self.loaderSubscription.unsubscribe();\n        },\n        err => {\n          observer.error(err);\n          self.loaderSubscription.unsubscribe();\n        });\n    });\n    return observable;\n  }\n\n  getAttributesValuesToUpdate(): Object {\n    let values = {};\n    const self = this;\n    const changedAttrs = this.formCache.getChangedFormControlsAttr();\n    Object.keys(this.formGroup.controls).filter(controlName =>\n      self.ignoreFormCacheKeys.indexOf(controlName) === -1 &&\n      changedAttrs.indexOf(controlName) !== -1\n    ).forEach((item) => {\n      const control = self.formGroup.controls[item];\n      if (control instanceof OFormControl) {\n        values[item] = control.getValue();\n      } else {\n        values[item] = control.value;\n      }\n      if (values[item] === undefined) {\n        values[item] = null;\n      }\n    });\n    return values;\n  }\n\n  deleteData(filter): Observable<any> {\n    if (this.loaderSubscription) {\n      this.loaderSubscription.unsubscribe();\n    }\n    this.loaderSubscription = this.load();\n    const self = this;\n    let observable = new Observable(observer => {\n      this.canDiscardChanges = true;\n      this.dataService[this.deleteMethod](filter, this.entity).subscribe(\n        resp => {\n          if (resp.code === Codes.ONTIMIZE_SUCCESSFUL_CODE) {\n            self.formCache.setCacheSnapshot();\n            self.markFormLayoutManagerToUpdate();\n            self.postCorrectDelete(resp);\n            observer.next(resp.data);\n            observer.complete();\n          } else {\n            self.postIncorrectDelete(resp);\n            observer.error(resp.message);\n          }\n          self.loaderSubscription.unsubscribe();\n        },\n        err => {\n          self.postIncorrectDelete(err);\n          observer.error(err);\n          self.loaderSubscription.unsubscribe();\n        });\n    });\n    return observable;\n  }\n\n  toJSONData(data) {\n    if (!data) {\n      data = {};\n    }\n    let valueData = {};\n    Object.keys(data).forEach(function (item) {\n      valueData[item] = data[item].value;\n    });\n    return valueData;\n  }\n\n  toFormValueData(data) {\n    if (data && Util.isArray(data)) {\n      let valueData: Array<Object> = [];\n      const self = this;\n      data.forEach(item => {\n        valueData.push(self.objectToFormValueData(item));\n      });\n      return valueData;\n    } else if (data && Util.isObject(data)) {\n      return this.objectToFormValueData(data);\n    }\n    return undefined;\n  }\n\n  getKeysValues() {\n    let filter = {};\n    let currentRecord = this.formData;\n    if (!this.keysArray) {\n      return filter;\n    }\n    this.keysArray.forEach(key => {\n      if (currentRecord[key] !== undefined) {\n        let currentData = currentRecord[key];\n        if (currentData instanceof OFormValue) {\n          currentData = currentData.value;\n        }\n        filter[key] = currentData;\n      }\n    });\n    return filter;\n  }\n\n  isInQueryMode(): boolean {\n    return this.mode === OFormComponent.Mode().QUERY;\n  }\n\n  isInInsertMode(): boolean {\n    return this.mode === OFormComponent.Mode().INSERT;\n  }\n\n  isInUpdateMode(): boolean {\n    return this.mode === OFormComponent.Mode().UPDATE;\n  }\n\n  isInInitialMode(): boolean {\n    return this.mode === OFormComponent.Mode().INITIAL;\n  }\n\n  setQueryMode() {\n    this.setFormMode(OFormComponent.Mode().QUERY);\n  }\n\n  setInsertMode() {\n    this.setFormMode(OFormComponent.Mode().INSERT);\n  }\n\n  setUpdateMode() {\n    this.setFormMode(OFormComponent.Mode().UPDATE);\n  }\n\n  setInitialMode() {\n    this.setFormMode(OFormComponent.Mode().INITIAL);\n  }\n\n  registerDynamicFormComponent(dynamicForm) {\n    if (!Util.isDefined(dynamicForm)) {\n      return;\n    }\n    const self = this;\n    this.dynamicFormSubscription = dynamicForm.render.subscribe(res => {\n      if (res) {\n        self.refreshComponentsEditableState();\n        if (!self.isInInsertMode() && self.queryOnInit) {\n          self._reloadAction(true);\n        }\n        if (self.formParentKeysValues) {\n          Object.keys(self.formParentKeysValues).forEach(parentKey => {\n            const value = self.formParentKeysValues[parentKey];\n            const comp = self.getFieldReference(parentKey);\n            if (Util.isFormDataComponent(comp) && comp.isAutomaticBinding()) {\n              comp.setValue(value, {\n                emitModelToViewChange: false,\n                emitEvent: false\n              });\n            }\n          });\n        }\n      }\n    });\n  }\n\n  unregisterDynamicFormComponent(dynamicForm) {\n    if (dynamicForm && this.dynamicFormSubscription) {\n      this.dynamicFormSubscription.unsubscribe();\n    }\n  }\n\n  getRequiredComponents(): Object {\n    const requiredCompontents: Object = {};\n    const components = this.getComponents();\n    if (components) {\n      Object.keys(components).forEach(key => {\n        let comp = components[key];\n        let attr = comp.getAttribute();\n        if ((comp as any).isRequired && attr && attr.length > 0) {\n          requiredCompontents[attr] = comp;\n        }\n      });\n    }\n    return requiredCompontents;\n  }\n\n  get layoutDirection(): string {\n    return this._layoutDirection;\n  }\n\n  set layoutDirection(val: string) {\n    const parsedVal = (val || '').toLowerCase();\n    this._layoutDirection = ['row', 'column', 'row-reverse', 'column-reverse'].indexOf(parsedVal) !== -1 ? parsedVal : OFormComponent.DEFAULT_LAYOUT_DIRECTION;\n  }\n\n  get layoutAlign(): string {\n    return this._layoutAlign;\n  }\n\n  set layoutAlign(val: string) {\n    this._layoutAlign = val;\n  }\n\n  get showFloatingToolbar(): boolean {\n    return this.showHeader && this.headerMode === 'floating';\n  }\n\n  get showNotFloatingToolbar(): boolean {\n    return this.showHeader && this.headerMode !== 'floating';\n  }\n\n  isEditableDetail() {\n    return this.editableDetail;\n  }\n\n  isInitialStateChanged(): boolean {\n    return this.formCache.isInitialStateChanged();\n  }\n\n  _undoLastChangeAction() {\n    this.formCache.undoLastChange();\n  }\n\n  get isCacheStackEmpty(): boolean {\n    return this.formCache.isCacheStackEmpty;\n  }\n\n  undoKeyboardPressed() {\n    this.formCache.undoLastChange({\n      keyboardEvent: true\n    });\n  }\n\n  getFormToolbar(): OFormToolbarComponent {\n    return this._formToolbar;\n  }\n\n  getFormManager(): OFormLayoutManagerComponent {\n    return this.formNavigation.formLayoutManager;\n  }\n\n  getFormNavigation(): OFormNavigationClass {\n    return this.formNavigation;\n  }\n\n  getFormCache(): OFormCacheClass {\n    return this.formCache;\n  }\n\n  getUrlParam(arg: string) {\n    return this.getFormNavigation().getUrlParams()[arg];\n  }\n\n  getUrlParams() {\n    return this.getFormNavigation().getUrlParams();\n  }\n\n  setUrlParamsAndReload(val: Object) {\n    this.formNavigation.setUrlParams(val);\n    this._reloadAction(true);\n  }\n\n  getRegisteredFieldsValues() {\n    let values = {};\n    const components: IFormDataComponentHash = this.getComponents();\n    const self = this;\n    const componentsKeys = Object.keys(components).filter(key => self.ignoreFormCacheKeys.indexOf(key) === -1);\n    componentsKeys.forEach(compKey => {\n      const comp: IFormDataComponent = components[compKey];\n      values[compKey] = comp.getValue();\n    });\n    return values;\n  }\n\n  /**\n   * Return the current value of the control in the form\n   * @param attr\n   */\n  getFieldValue(attr: string): any {\n    let value = null;\n    let comp = this.getFieldReference(attr);\n    if (comp) {\n      value = comp.getValue();\n    }\n    return value;\n  }\n\n  /**\n   * Return an object with the values of each attribute\n   * @param attrs\n   */\n  getFieldValues(attrs: string[]): any {\n    let self = this;\n    let arr = {};\n    attrs.forEach((key) => {\n      arr[key] = self.getFieldValue(key);\n    });\n    return arr;\n\n  }\n\n  /**\n   * Sets the value of the control in the form.\n   * @param attr attribute of control\n   * @param value value\n   */\n  setFieldValue(attr: string, value: any, options?: IFormValueOptions) {\n    let comp = this.getFieldReference(attr);\n    if (comp) {\n      comp.setValue(value, options);\n    }\n  }\n\n  /**\n   * Sets the value of each control in the form.\n   * @param values\n   */\n  setFieldValues(values: any, options?: IFormValueOptions) {\n    for (let key in values) {\n      this.setFieldValue(key, values[key], options);\n    }\n  }\n\n  /**\n   * Clear the value of each control in the form\n   * @param attr\n   */\n  clearFieldValue(attr: string, options?: IFormValueOptions) {\n    let comp = this.getFieldReference(attr);\n    if (comp) {\n      comp.clearValue(options);\n    }\n  }\n\n  /**\n   * Reset the value of each control in the form\n   * @param attrs\n   */\n  clearFieldValues(attrs: string[], options?: IFormValueOptions) {\n    let self = this;\n    attrs.forEach((key) => {\n      self.clearFieldValue(key, options);\n    });\n  }\n\n  /**\n   * Retrieves the reference of the control in the form.\n   * @param attr\n   */\n  getFieldReference(attr: string): IFormDataComponent {\n    return this._components[attr];\n  }\n  /**\n   * Retrieves the reference of each control in the form\n   * @param attrs\n   */\n  getFieldReferences(attrs: string[]): IFormDataComponentHash {\n    let arr: IFormDataComponentHash = {};\n    let self = this;\n    attrs.forEach((key, index) => {\n      arr[key] = self.getFieldReference(key);\n    });\n    return arr;\n  }\n\n  getFormComponentPermissions(attr: string): OPermissions {\n    let permissions: OPermissions;\n    if (Util.isDefined(this.permissions)) {\n      permissions = (this.permissions.components || []).find(comp => comp.attr === attr);\n    }\n    return permissions;\n  }\n\n  getActionsPermissions(): OPermissions[] {\n    let permissions: OPermissions[];\n    if (Util.isDefined(this.permissions)) {\n      permissions = (this.permissions.actions || []);\n    }\n    return permissions;\n  }\n\n  protected determinateFormMode(): void {\n    const urlSegments = this.formNavigation.getUrlSegments();\n    if (urlSegments.length > 0) {\n      let segment = urlSegments[urlSegments.length - 1];\n      this.determinateModeFromUrlSegment(segment);\n    } else if (this.actRoute.parent) {\n      this.actRoute.parent.url.subscribe(segments => {\n        let segment = segments[segments.length - 1];\n        this.determinateModeFromUrlSegment(segment);\n      });\n    } else {\n      this.setFormMode(OFormComponent.Mode().INITIAL);\n    }\n    // stayInRecordAfterEdit is true if form has editable detail = true\n    this.stayInRecordAfterEdit = this.stayInRecordAfterEdit || this.isEditableDetail();\n  }\n\n  protected determinateModeFromUrlSegment(segment: UrlSegment): void {\n    const _path = segment ? segment['path'] : '';\n    if (this.isInsertModePath(_path)) {\n      this.setInsertMode();\n      return;\n    } else if (this.isUpdateModePath(_path)) {\n      this.setUpdateMode();\n    } else {\n      this.setInitialMode();\n    }\n  }\n\n  protected _updateFormData(newFormData: Object): void {\n    const self = this;\n    this.zone.run(() => {\n      this.formData = newFormData;\n      const components = this.getComponents();\n      if (components) {\n        Object.keys(components).forEach(key => {\n          let comp = components[key];\n          if (Util.isFormDataComponent(comp)) {\n            try {\n              if (comp.isAutomaticBinding()) {\n                comp.data = self.getDataValue(key);\n              }\n            } catch (error) {\n              console.error(error);\n            }\n          }\n        });\n        self.initializeFields();\n      }\n    });\n  }\n\n  protected initializeFields(): void {\n    Object.keys(this.formGroup.controls).forEach(control => {\n      this.formGroup.controls[control].markAsPristine();\n    });\n    this.formCache.registerCache();\n    this.formNavigation.updateNavigation();\n  }\n\n  protected clearComponentsOldValue(): void {\n    const components: IFormDataComponentHash = this.getComponents();\n    const self = this;\n    const componentsKeys = Object.keys(components).filter(key => self.ignoreFormCacheKeys.indexOf(key) === -1);\n    componentsKeys.forEach(compKey => {\n      const comp: IFormDataComponent = components[compKey];\n      (comp as any).oldValue = undefined;\n      comp.getFormControl().setValue(undefined);\n    });\n  }\n\n  protected postCorrectInsert(result: any): void {\n    this.snackBarService.open('MESSAGES.INSERTED', { icon: 'check_circle' });\n    this.onInsert.emit(result);\n  }\n\n  protected postIncorrectInsert(result: any): void {\n    this.showError('insert', result);\n  }\n\n  protected postIncorrectDelete(result: any): void {\n    this.showError('delete', result);\n  }\n\n  protected postIncorrectUpdate(result: any): void {\n    this.showError('update', result);\n  }\n\n  protected postCorrectUpdate(result: any): void {\n    this.snackBarService.open('MESSAGES.SAVED', { icon: 'check_circle' });\n    this.onUpdate.emit(result);\n  }\n\n  protected postCorrectDelete(result: any): void {\n    this.snackBarService.open('MESSAGES.DELETED', { icon: 'check_circle' });\n    this.onDelete.emit(result);\n  }\n\n  protected markFormLayoutManagerToUpdate(): void {\n    const formLayoutManager = this.getFormManager();\n    if (Util.isDefined(formLayoutManager)) {\n      formLayoutManager.markForUpdate = true;\n    }\n  }\n\n  protected objectToFormValueData(data: Object = {}): Object {\n    let valueData = {};\n    Object.keys(data).forEach(function (item) {\n      valueData[item] = new OFormValue(data[item]);\n    });\n    return valueData;\n  }\n\n  protected getCurrentKeysValues(): Object {\n    return this.formNavigation.getCurrentKeysValues();\n  }\n\n  protected refreshComponentsEditableState(): void {\n    switch (this.mode) {\n      case OFormComponent.Mode().INITIAL:\n        this._setComponentsEditable(this.isEditableDetail());\n        break;\n      case OFormComponent.Mode().INSERT:\n      case OFormComponent.Mode().UPDATE:\n        this._setComponentsEditable(true);\n      default:\n        break;\n    }\n  }\n\n  protected isInsertModePath(path: string): boolean {\n    const navData: ONavigationItem = this.navigationService.getPreviousRouteData();\n    return Util.isDefined(navData) && path === navData.getInsertFormRoute();\n  }\n\n  protected isUpdateModePath(path: string): boolean {\n    const navData: ONavigationItem = this.navigationService.getPreviousRouteData();\n    return Util.isDefined(navData) && path === navData.getEditFormRoute();\n  }\n\n  private showError(operation: string, result: any): void {\n    if (result && typeof result !== 'object') {\n      this.dialogService.alert('ERROR', result);\n    } else {\n      let message = 'MESSAGES.ERROR_DELETE';\n      switch (operation) {\n        case 'update':\n          message = 'MESSAGES.ERROR_UPDATE';\n          break;\n        case 'insert':\n          message = 'MESSAGES.ERROR_INSERT';\n          break;\n      }\n      this.dialogService.alert('ERROR', message);\n    }\n  }\n\n}\n\n@NgModule({\n  declarations: [OFormComponent],\n  imports: [CommonModule, OFormToolbarModule, OSharedModule],\n  exports: [OFormComponent, OFormToolbarModule],\n  providers: [{ provide: CanDeactivateFormGuard, useClass: CanDeactivateFormGuard }],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class OFormModule { }\n"]}
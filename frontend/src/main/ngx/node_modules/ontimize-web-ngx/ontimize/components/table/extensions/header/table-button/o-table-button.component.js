var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, forwardRef, Inject, Injector, ViewEncapsulation } from '@angular/core';
import { InputConverter } from '../../../../../decorators';
import { Codes, Util } from '../../../../../utils';
import { OTableComponent } from '../../../o-table.component';
export var DEFAULT_INPUTS_O_TABLE_BUTTON = [
    'oattr: attr',
    'enabled',
    'icon',
    'svgIcon: svg-icon',
    'iconPosition: icon-position',
    'olabel: label'
];
export var DEFAULT_OUTPUTS_O_TABLE_BUTTON = [
    'onClick'
];
var OTableButtonComponent = (function () {
    function OTableButtonComponent(injector, elRef, _table) {
        this.injector = injector;
        this.elRef = elRef;
        this._table = _table;
        this.onClick = new EventEmitter();
        this.enabled = true;
    }
    OTableButtonComponent.prototype.ngOnInit = function () {
        if (!Util.isDefined(this.icon) && !Util.isDefined(this.svgIcon)) {
            this.icon = 'priority_high';
        }
        this.iconPosition = Util.parseIconPosition(this.iconPosition);
    };
    OTableButtonComponent.prototype.innerOnClick = function (event) {
        event.stopPropagation();
        this.onClick.emit();
    };
    OTableButtonComponent.prototype.isIconPositionLeft = function () {
        return this.iconPosition === Codes.ICON_POSITION_LEFT;
    };
    Object.defineProperty(OTableButtonComponent.prototype, "table", {
        get: function () {
            return this._table;
        },
        enumerable: true,
        configurable: true
    });
    OTableButtonComponent.DEFAULT_INPUTS_O_TABLE_BUTTON = DEFAULT_INPUTS_O_TABLE_BUTTON;
    OTableButtonComponent.DEFAULT_OUTPUTS_O_TABLE_BUTTON = DEFAULT_OUTPUTS_O_TABLE_BUTTON;
    OTableButtonComponent.decorators = [
        { type: Component, args: [{
                    moduleId: module.id,
                    selector: 'o-table-button',
                    template: "\n    <ng-container *ngIf=\"table.showButtonsText\">\n      <button type=\"button\" [disabled]=\"!enabled\" [class.disabled]=\"!enabled\" mat-stroked-button (click)=\"innerOnClick($event)\">\n        <mat-icon *ngIf=\"isIconPositionLeft() && svgIcon !== undefined\" [svgIcon]=\"svgIcon\"></mat-icon>\n        <mat-icon *ngIf=\"isIconPositionLeft() && svgIcon === undefined\">{{ icon }}</mat-icon>\n        <span>{{ olabel | oTranslate }}</span>\n        <mat-icon *ngIf=\"!isIconPositionLeft() && svgIcon !== undefined\" [svgIcon]=\"svgIcon\"></mat-icon>\n        <mat-icon *ngIf=\"!isIconPositionLeft() && svgIcon === undefined\">{{ icon }}</mat-icon>\n      </button>\n    </ng-container>\n\n    <ng-container *ngIf=\"!table.showButtonsText\">\n      <button type=\"button\" [disabled]=\"!enabled\" [class.disabled]=\"!enabled\" mat-icon-button (click)=\"innerOnClick($event)\">\n        <mat-icon *ngIf=\"isIconPositionLeft() && svgIcon !== undefined\" [svgIcon]=\"svgIcon\"></mat-icon>\n        <mat-icon *ngIf=\"isIconPositionLeft() && svgIcon === undefined\">{{ icon }}</mat-icon>\n        <mat-icon *ngIf=\"!isIconPositionLeft() && svgIcon !== undefined\" [svgIcon]=\"svgIcon\"></mat-icon>\n        <mat-icon *ngIf=\"!isIconPositionLeft() && svgIcon === undefined\">{{ icon }}</mat-icon>\n      </button>\n    </ng-container>\n  ",
                    styles: ["\n    .o-table-button{margin:0 8px}.o-table-button .mat-stroked-button{padding:0 6px;line-height:30px}.o-table-button .mat-stroked-button .mat-button-wrapper{display:flex;align-items:center}.o-table-button .mat-stroked-button .mat-button-wrapper .mat-icon{margin-right:4px}.o-table-button .mat-stroked-button .mat-button-wrapper span{flex:1}\n  "],
                    inputs: DEFAULT_INPUTS_O_TABLE_BUTTON,
                    outputs: DEFAULT_OUTPUTS_O_TABLE_BUTTON,
                    encapsulation: ViewEncapsulation.None,
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    host: {
                        '[class.o-table-button]': 'true',
                    }
                },] },
    ];
    OTableButtonComponent.ctorParameters = function () { return [
        { type: Injector },
        { type: ElementRef },
        { type: OTableComponent, decorators: [{ type: Inject, args: [forwardRef(function () { return OTableComponent; }),] }] }
    ]; };
    __decorate([
        InputConverter(),
        __metadata("design:type", Boolean)
    ], OTableButtonComponent.prototype, "enabled", void 0);
    return OTableButtonComponent;
}());
export { OTableButtonComponent };
//# sourceMappingURL=o-table-button.component.js.map
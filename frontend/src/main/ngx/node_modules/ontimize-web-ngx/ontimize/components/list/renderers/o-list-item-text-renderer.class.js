import { EventEmitter } from '@angular/core';
import { Util } from '../../../util/util';
export var DEFAULT_INPUTS_O_TEXT_RENDERER = [
    'title',
    'primaryText : primary-text',
    'secondaryText : secondary-text',
    'icon'
];
export var DEFAULT_OUTPUTS_O_TEXT_RENDERER = [
    'onIconClick : icon-action'
];
var OListItemTextRenderer = (function () {
    function OListItemTextRenderer(elRef, _renderer, _injector, _listItem) {
        this.elRef = elRef;
        this._renderer = _renderer;
        this._injector = _injector;
        this._listItem = _listItem;
        this.onIconClick = new EventEmitter();
    }
    OListItemTextRenderer.prototype.modifyMatListItemElement = function () {
        if (this.elRef.nativeElement && this.elRef.nativeElement.parentElement) {
            var listItem = this.elRef.nativeElement.parentElement.parentElement;
            if (listItem && listItem.nodeName === 'MAT-LIST-ITEM') {
                var linesNo = 3;
                if (this.title === undefined) {
                    linesNo--;
                }
                if (this.primaryText === undefined) {
                    linesNo--;
                }
                if (this.secondaryText === undefined) {
                    linesNo--;
                }
                listItem.classList.add('mat-' + linesNo + '-line');
                listItem.querySelector('.mat-list-text').remove();
            }
        }
    };
    OListItemTextRenderer.prototype.onActionIconClick = function (e) {
        if (Util.isDefined(e)) {
            e.stopPropagation();
        }
        this.onIconClick.emit(event);
    };
    Object.defineProperty(OListItemTextRenderer.prototype, "title", {
        get: function () {
            return this._title;
        },
        set: function (val) {
            this._title = val;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(OListItemTextRenderer.prototype, "primaryText", {
        get: function () {
            return this._primaryText;
        },
        set: function (val) {
            this._primaryText = val;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(OListItemTextRenderer.prototype, "secondaryText", {
        get: function () {
            return this._secondaryText;
        },
        set: function (val) {
            this._secondaryText = val;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(OListItemTextRenderer.prototype, "icon", {
        get: function () {
            return this._icon;
        },
        set: function (val) {
            this._icon = val;
        },
        enumerable: true,
        configurable: true
    });
    OListItemTextRenderer.DEFAULT_INPUTS_O_TEXT_RENDERER = DEFAULT_INPUTS_O_TEXT_RENDERER;
    OListItemTextRenderer.DEFAULT_OUTPUTS_O_TEXT_RENDERER = DEFAULT_OUTPUTS_O_TEXT_RENDERER;
    return OListItemTextRenderer;
}());
export { OListItemTextRenderer };
//# sourceMappingURL=o-list-item-text-renderer.class.js.map
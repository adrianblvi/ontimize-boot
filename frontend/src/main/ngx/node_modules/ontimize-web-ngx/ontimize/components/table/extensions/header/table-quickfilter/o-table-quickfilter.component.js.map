{"version":3,"file":"o-table-quickfilter.component.js","sourceRoot":"","sources":["../../../../../../../tmp/ontimize/components/table/extensions/header/table-quickfilter/o-table-quickfilter.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { AfterViewInit, ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Inject, Injector, OnDestroy, OnInit, ViewChild, ViewEncapsulation, forwardRef } from '@angular/core';\nimport { FilterExpressionUtils, IExpression } from '../../../../filter-expression.utils';\nimport { MatCheckboxChange, MatMenu } from '@angular/material';\nimport { OColumn, OTableComponent, OTableOptions } from '../../../o-table.component';\nimport { OInputsOptions, O_INPUTS_OPTIONS } from '../../../../../config/app-config';\nimport { Subscription, fromEvent } from 'rxjs';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\n\nimport { FormControl } from '@angular/forms';\nimport { OTableCellRendererServiceComponent } from '../../../column/cell-renderer/cell-renderer';\nimport { SQLTypes } from '../../../../../util/sqltypes';\nimport { Util } from '../../../../../utils';\n\nexport const DEFAULT_INPUTS_O_TABLE_QUICKFILTER = [];\n\nexport const DEFAULT_OUTPUTS_O_TABLE_QUICKFILTER = [\n  'onChange'\n];\n\n@Component({\n  moduleId: module.id,\n  selector: 'o-table-quickfilter',\n  template: `\n    <div class=\"quickFilter\" fxLayout=\"row\">\n      <mat-form-field floatLabel=\"never\">\n        <input matInput #filter placeholder=\"{{ 'TABLE.FILTER' | oTranslate}}\" [formControl]=\"formControl\" (click)=\"$event.stopPropagation()\">\n        <span class=\"icon-btn search-icon\" matPrefix fxFlexLayout=\"flex-end\" (menuClosed)=\"onMenuClosed()\"\n          [matMenuTriggerFor]=\"menu\" (click)=\"$event.stopPropagation()\">\n          <mat-icon svgIcon=\"ontimize:search\"></mat-icon>\n        </span>\n        <mat-menu #menu=\"matMenu\" class=\"o-table-quickfilter-menu\">\n          <div fxLayout=\"column\" class=\"checkbox-container\">\n\n            <mat-checkbox (click)=\"$event.stopPropagation()\" [checked]=\"areAllColumnsChecked()\"\n              (change)=\"onSelectAllChange($event)\">\n              {{ 'SELECT_ALL' | oTranslate}}\n            </mat-checkbox>\n            <mat-divider></mat-divider>\n\n            <ng-container *ngFor=\"let column of quickFilterColumns\">\n              <mat-checkbox (click)=\"$event.stopPropagation()\"  [checked]=\"isChecked(column)\" (change)=\"onCheckboxChange(column, $event)\">\n                {{ column.title | oTranslate }}\n              </mat-checkbox>\n            </ng-container>\n\n            <ng-container *ngIf=\"showCaseSensitiveCheckbox()\">\n              <mat-divider></mat-divider>\n              <mat-checkbox (click)=\"$event.stopPropagation()\"  [checked]=\"oTableOptions.filterCaseSensitive\"\n                (change)=\"oTableOptions.filterCaseSensitive = $event.checked\">\n                {{ 'TABLE.FILTER.CASE_SENSITIVE' | oTranslate}}\n              </mat-checkbox>\n            </ng-container>\n          </div>\n        </mat-menu>\n      </mat-form-field>\n    </div>\n  `,\n  styles: [`\n    .o-table-quickfilter .quickFilter{padding-right:24px}.o-table-quickfilter .quickFilter .mat-form-field-flex{align-items:flex-end}.o-table-quickfilter .search-icon{cursor:pointer}.o-table-quickfilter-menu .mat-divider{margin:8px 0}.o-table-quickfilter-menu .checkbox-container{padding:6px 12px}.o-table-quickfilter-menu .checkbox-container .mat-checkbox-layout{white-space:normal}.o-table-quickfilter-menu .checkbox-container .mat-checkbox-layout .mat-checkbox-ripple{display:none}\n  `],\n  inputs: DEFAULT_INPUTS_O_TABLE_QUICKFILTER,\n  outputs: DEFAULT_OUTPUTS_O_TABLE_QUICKFILTER,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    '[class.o-table-quickfilter]': 'true',\n  }\n})\nexport class OTableQuickfilterComponent implements OnInit, AfterViewInit, OnDestroy {\n\n  public static DEFAULT_INPUTS_O_TABLE_QUICKFILTER = DEFAULT_INPUTS_O_TABLE_QUICKFILTER;\n  public static DEFAULT_OUTPUTS_O_TABLE_QUICKFILTER = DEFAULT_OUTPUTS_O_TABLE_QUICKFILTER;\n\n  @ViewChild('filter')\n  public filter: ElementRef;\n\n  @ViewChild('menu')\n  public matMenu: MatMenu;\n\n  public value: string;\n  public onChange: EventEmitter<Object> = new EventEmitter<Object>();\n\n  public formControl;\n\n  protected oInputsOptions: OInputsOptions;\n  protected quickFilterObservable: Subscription;\n\n  constructor(\n    protected injector: Injector,\n    protected elRef: ElementRef,\n    @Inject(forwardRef(() => OTableComponent)) protected table: OTableComponent\n  ) {\n    this.formControl = new FormControl();\n  }\n\n  public ngOnInit(): void {\n    this.table.registerQuickFilter(this);\n    // workaround because 'x-position=\"before\"' was not working in the template\n    this.matMenu.xPosition = 'before';\n  }\n\n  public ngAfterViewInit(): void {\n    this.initializeEventFilter();\n\n    try {\n      this.oInputsOptions = this.injector.get(O_INPUTS_OPTIONS);\n    } catch (e) {\n      this.oInputsOptions = {};\n    }\n    Util.parseOInputsOptions(this.elRef, this.oInputsOptions);\n  }\n\n  public ngOnDestroy(): void {\n    if (this.quickFilterObservable) {\n      this.quickFilterObservable.unsubscribe();\n    }\n  }\n\n  get oTableOptions(): OTableOptions {\n    return this.table.oTableOptions;\n  }\n\n  get quickFilterColumns(): OColumn[] {\n    return this.table.oTableOptions.columns.filter(oCol => {\n      // CHECK: Why columns with renderers are not filtered?\n      // return oCol.searchable && oCol.visible && !Util.isDefined(oCol.renderer);\n      return oCol.searchable && oCol.visible;\n    });\n  }\n\n  get filterExpression(): IExpression {\n    let result: IExpression = this.getUserFilter();\n    if (!Util.isDefined(result) && Util.isDefined(this.value) && this.value.length > 0) {\n      const expressions: IExpression[] = [];\n      // const queryCols: string[] = [];\n      this.oTableOptions.columns.forEach((oCol: OColumn) => {\n        // CHECK: Why columns with renderers are not filtered?\n        // if (oCol.searching && oCol.visible && !oCol.renderer) {\n        if (oCol.searching && oCol.visible && this.isFilterableColumn(oCol)) {\n          if (oCol.renderer instanceof OTableCellRendererServiceComponent) { // Filter column with service renderer\n            // Look for the value in the renderer cache\n            const cacheValue = Object.keys(oCol.renderer.responseMap).find(key => Util.normalizeString(oCol.renderer['responseMap'][key]).indexOf(Util.normalizeString(this.value)) !== -1);\n            if (cacheValue) {\n              expressions.push(FilterExpressionUtils.buildExpressionEquals(oCol.attr, SQLTypes.parseUsingSQLType(cacheValue, SQLTypes.getSQLTypeKey(oCol.sqlType))));\n            }\n          } else if (SQLTypes.isNumericSQLType(oCol.sqlType)) { // Filter numeric column\n            const numValue: any = SQLTypes.parseUsingSQLType(this.value, SQLTypes.getSQLTypeKey(oCol.sqlType));\n            if (numValue) {\n              expressions.push(FilterExpressionUtils.buildExpressionEquals(oCol.attr, numValue));\n            }\n          } else { // Default\n            expressions.push(FilterExpressionUtils.buildExpressionLike(oCol.attr, this.value));\n          }\n          // queryCols.push(oCol.attr);\n        }\n      });\n      if (expressions.length > 0) {\n        result = expressions.reduce((a, b) => FilterExpressionUtils.buildComplexExpression(a, b, FilterExpressionUtils.OP_OR));\n      }\n      // result = FilterExpressionUtils.buildArrayExpressionLike(queryCols, this.value);\n    }\n    return result;\n  }\n\n  public getUserFilter(): IExpression {\n    let result: IExpression;\n    if (this.table.quickFilterCallback instanceof Function) {\n      const userFilter = this.table.quickFilterCallback(this.value);\n      if (Util.isDefined(userFilter) && FilterExpressionUtils.instanceofExpression(userFilter)) {\n        result = (userFilter as IExpression);\n      } else if (Util.isDefined(userFilter)) {\n        result = FilterExpressionUtils.buildExpressionFromObject(userFilter);\n      }\n    }\n    return result;\n  }\n\n  public initializeEventFilter(): void {\n    if (this.filter && !this.quickFilterObservable) {\n      this.quickFilterObservable = fromEvent(this.filter.nativeElement, 'keyup')\n        .pipe(debounceTime(150))\n        .pipe(distinctUntilChanged())\n        .subscribe(() => {\n          const filterVal = this.filter.nativeElement.value;\n          if (!this.table.dataSource || this.value === filterVal) {\n            return;\n          }\n          this.setValue(filterVal);\n          this.onChange.emit(this.value);\n        });\n\n      // if exists filter value in storage then filter result table\n      const filterValue = this.value || this.filter.nativeElement.value;\n      //this.filter.nativeElement.value = filterValue;\n      this.formControl.setValue(filterValue);\n      if (this.table.dataSource && filterValue && filterValue.length) {\n        this.table.dataSource.quickFilter = filterValue;\n      }\n    }\n  }\n\n  public setValue(value: any, trigger: boolean = true): void {\n    this.value = value;\n    if (trigger && this.table && this.table.dataSource) {\n      this.table.dataSource.quickFilter = this.value;\n    }\n  }\n\n  public onMenuClosed(): void {\n    this.setValue(this.value);\n    this.onChange.emit(this.value);\n  }\n\n  public isChecked(column: OColumn): boolean {\n    return column.searching;\n  }\n\n  public onCheckboxChange(column: OColumn, event: MatCheckboxChange): void {\n    column.searching = event.checked;\n  }\n\n  public showCaseSensitiveCheckbox(): boolean {\n    return this.table.showCaseSensitiveCheckbox();\n  }\n\n  public areAllColumnsChecked(): boolean {\n    let result: boolean = true;\n    this.quickFilterColumns.forEach((col: OColumn) => {\n      result = result && col.searching;\n    });\n    return result;\n  }\n\n  public onSelectAllChange(event: MatCheckboxChange): void {\n    this.quickFilterColumns.forEach((col: OColumn) => {\n      col.searching = event.checked;\n    });\n  }\n\n  protected isFilterableColumn(column: OColumn): boolean {\n    return !column.renderer || (\n      column.type === 'string' ||\n      column.type === 'translate' ||\n      column.type === 'integer' ||\n      column.type === 'real' ||\n      column.type === 'percentage' ||\n      column.type === 'currency' ||\n      column.type === 'service'\n    );\n  }\n\n}\n"]}
import { AfterViewInit, ElementRef, Injector, OnInit } from '@angular/core';
import { OFormDataComponent } from '../../o-form-data-component.class';
import { IFormValueOptions } from '../../form/OFormValue';
import { OFormComponent } from '../../form/form-components';
import { ValidatorFn } from '@angular/forms';
export declare type OHourValueType = 'string' | 'timestamp';
export declare const DEFAULT_INPUTS_O_HOUR_INPUT: string[];
export declare const DEFAULT_OUTPUTS_O_HOUR_INPUT: string[];
export declare class OHourInputComponent extends OFormDataComponent implements OnInit, AfterViewInit {
    static DEFAULT_INPUTS_O_HOUR_INPUT: string[];
    static DEFAULT_OUTPUTS_O_HOUR_INPUT: string[];
    textInputEnabled: boolean;
    min: string;
    max: string;
    protected _format: number;
    protected onKeyboardInputDone: boolean;
    protected _valueType: OHourValueType;
    private picker;
    constructor(form: OFormComponent, elRef: ElementRef, injector: Injector);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    getValue(): any;
    onKeyDown(e: KeyboardEvent): void;
    innerOnBlur(event: any): void;
    registerOnFormControlChange(): void;
    readonly formatString: string;
    open(e?: Event): void;
    setTimestampValue(value: any, options?: IFormValueOptions): void;
    resolveValidators(): ValidatorFn[];
    onFormControlChange(value: any): void;
    format: number;
    valueType: any;
    convertToOHourValueType(val: any): OHourValueType;
    onChangeEvent(arg: any): void;
    onTimepickerChange(event: string): void;
    protected modifyPickerMethods(): void;
    protected updateValeOnInputChange(blurEvent: any): void;
    protected parseHour(value: string): string;
    protected emitOnValueChange(type: any, newValue: any, oldValue: any): void;
    protected convertToFormatString(value: any): string;
}
export declare class OHourInputModule {
}

{"version":3,"file":"o-table.datasource.js","sourceRoot":"","sources":["../../../../tmp/ontimize/components/table/o-table.datasource.ts"],"names":[],"mappings":"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","sourcesContent":["import { DataSource } from '@angular/cdk/collections';\nimport { EventEmitter } from '@angular/core';\nimport { MatPaginator } from '@angular/material';\nimport { BehaviorSubject, merge, Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Util } from '../../util/util';\nimport { ColumnValueFilterOperator, IColumnValueFilter } from './extensions/header/o-table-header-components';\nimport { OMatSort } from './extensions/sort/o-mat-sort';\nimport { OColumn, OTableComponent, OTableOptions } from './o-table.component';\nimport { OTableDao } from './o-table.dao';\n\n\nexport const SCROLLVIRTUAL = 'scroll';\n\nexport interface ITableOScrollEvent {\n  type: string;\n  data: number;\n}\n\nexport class OTableScrollEvent implements ITableOScrollEvent {\n  public data: number;\n  public type: string;\n\n  constructor(data: number) {\n    this.data = data;\n    this.type = SCROLLVIRTUAL;\n  }\n}\n\nexport class OTableDataSource extends DataSource<any> {\n  dataTotalsChange = new BehaviorSubject<any[]>([]);\n  get data(): any[] { return this.dataTotalsChange.value; }\n\n  protected _database: OTableDao;\n  protected _paginator: MatPaginator;\n  protected _tableOptions: OTableOptions;\n  protected _sort: OMatSort;\n\n  protected _quickFilterChange = new BehaviorSubject('');\n  protected _columnValueFilterChange = new Subject();\n  protected _loadDataScrollableChange = new BehaviorSubject<OTableScrollEvent>(new OTableScrollEvent(1));\n\n  protected filteredData: any[] = [];\n  protected aggregateData: any = {};\n\n  onRenderedDataChange: EventEmitter<any> = new EventEmitter<any>();\n\n  //load data in scroll\n  get loadDataScrollable(): number { return this._loadDataScrollableChange.getValue().data || 1; }\n  set loadDataScrollable(page: number) {\n    this._loadDataScrollableChange.next(new OTableScrollEvent(page));\n  }\n\n  protected _renderedData: any[] = [];\n  resultsLength: number = 0;\n\n  get quickFilter(): string { return this._quickFilterChange.value || ''; }\n  set quickFilter(filter: string) {\n    this._quickFilterChange.next(filter);\n  }\n\n  private columnValueFilters: Array<IColumnValueFilter> = [];\n\n  constructor(protected table: OTableComponent) {\n    super();\n    this._database = table.daoTable;\n    if (table.paginator) {\n      this._paginator = table.matpaginator;\n    }\n    this._tableOptions = table.oTableOptions;\n    this._sort = table.sort;\n  }\n\n  sortFunction(a: any, b: any): number {\n    return this._sort.sortFunction(a, b);\n  }\n\n  get renderedData(): any[] {\n    return this._renderedData;\n  }\n\n  set renderedData(arg: any[]) {\n    this._renderedData = arg;\n    this.onRenderedDataChange.emit();\n  }\n\n  /**\n   * Connect function called by the table to retrieve one stream containing the data to render.\n   */\n  connect(): Observable<any[]> {\n    let displayDataChanges: any[] = [\n      this._database.dataChange\n    ];\n\n    if (!this.table.pageable) {\n\n      if (this._sort) {\n        displayDataChanges.push(this._sort.oSortChange);\n      }\n\n      if (this._tableOptions.filter) {\n        displayDataChanges.push(this._quickFilterChange);\n      }\n\n      if (this._paginator) {\n        displayDataChanges.push(this._paginator.page);\n      } else {\n        displayDataChanges.push(this._loadDataScrollableChange);\n      }\n    }\n\n    if (this.table.oTableColumnsFilterComponent) {\n      displayDataChanges.push(this._columnValueFilterChange);\n    }\n\n    return merge(...displayDataChanges).pipe(map((x: any) => {\n      let data = Object.assign([], this._database.data);\n      /*\n        it is necessary to first calculate the calculated columns and\n        then filter and sort the data\n      */\n      if (x instanceof OTableScrollEvent) {\n        this.renderedData = data.slice(0, (x.data * OTableComponent.LIMIT_SCROLLVIRTUAL) - 1);\n      } else {\n        if (this.existsAnyCalculatedColumn()) {\n          data = this.getColumnCalculatedData(data);\n        }\n\n        if (!this.table.pageable) {\n          data = this.getColumnValueFilterData(data);\n          data = this.getQuickFilterData(data);\n          data = this.getSortedData(data);\n        }\n\n        this.filteredData = Object.assign([], data);\n\n        if (this.table.pageable) {\n          const totalRecordsNumber = this.table.getTotalRecordsNumber();\n          this.resultsLength = totalRecordsNumber !== undefined ? totalRecordsNumber : data.length;\n        } else {\n          this.resultsLength = data.length;\n          data = this.getPaginationData(data);\n        }\n\n        /** in pagination virtual only show OTableComponent.LIMIT items for better performance of the table */\n        if (!this.table.pageable && !this.table.paginationControls && data.length > OTableComponent.LIMIT_SCROLLVIRTUAL) {\n          var datapaginate = data.slice(0, (this.table.pageScrollVirtual * OTableComponent.LIMIT_SCROLLVIRTUAL) - 1);\n          data = datapaginate;\n        }\n\n        this.renderedData = data;\n        // If a o-table-column-aggregate exists then emit observable\n        // if (this.table.showTotals) {\n        //   this.dataTotalsChange.next(this.renderedData);\n        // }\n\n        this.aggregateData = this.getAggregatesData(data);\n      }\n      return this.renderedData;\n    }));\n  }\n\n  getAggregatesData(data: any[]): any {\n    var self = this;\n    var obj = {};\n\n    if (typeof this._tableOptions === 'undefined') {\n      return obj;\n    }\n\n    this._tableOptions.columns.forEach((column: OColumn) => {\n      let totalValue = '';\n      if (column.aggregate && column.visible) {\n        totalValue = self.calculateAggregate(data, column);\n      }\n      var key = column.attr;\n      obj[key] = totalValue;\n    });\n\n    return obj;\n  }\n\n  /**\n   * Method that get value the columns calculated\n   * @param data data of the database\n   */\n  getColumnCalculatedData(data: any[]): any[] {\n    const self = this;\n    const calculatedCols = this._tableOptions.columns.filter((oCol: OColumn) => oCol.visible && oCol.calculate !== undefined);\n    return data.map((row: any) => {\n      calculatedCols.forEach((oColumn: OColumn) => {\n        let value;\n        if (typeof oColumn.calculate === 'string') {\n          value = self.transformFormula(oColumn.calculate, row);\n        } else if (typeof oColumn.calculate === 'function') {\n          value = oColumn.calculate(row);\n        }\n        row[oColumn.attr] = isNaN(value) ? 0 : value;\n      });\n      return row;\n    });\n  }\n\n  protected transformFormula(formulaArg, row): string {\n    let formula = formulaArg;\n    // 1. replace columns by values of row\n    const columnsAttr = this._tableOptions.columns.map((oCol: OColumn) => oCol.attr);\n    columnsAttr.forEach((column: string) => {\n      formula = formula.replace(column, row[column]);\n    });\n\n    let resultFormula = '';\n    // 2. Transform formula\n    try {\n      resultFormula = (new Function('return ' + formula))();\n    } catch (e) {\n      console.error('Operation defined in the calculated column is incorrect ');\n    }\n    // 3. Return result\n    return resultFormula;\n  }\n\n  getQuickFilterData(data: any[]): any[] {\n    let filterData = this.quickFilter;\n    if (filterData !== undefined && filterData.length > 0) {\n      return data.filter((item: any) => {\n        let searchStr = this.getStringSearchable(item);\n        if (!this._tableOptions.filterCaseSensitive) {\n          searchStr = searchStr.toLowerCase();\n          filterData = filterData.toLowerCase();\n        }\n        return searchStr.indexOf(filterData) !== -1;\n      });\n    } else {\n      return data;\n    }\n  }\n\n  getPaginationData(data: any[]): any[] {\n    if (!this._paginator || isNaN(this._paginator.pageSize)) {\n      return data;\n    }\n    let startIndex = isNaN(this._paginator.pageSize) ? 0 : this._paginator.pageIndex * this._paginator.pageSize;\n    if (data.length > 0 && data.length < startIndex) {\n      startIndex = 0;\n      this._paginator.pageIndex = 0;\n    }\n    return data.splice(startIndex, this._paginator.pageSize);\n  }\n\n  disconnect() {\n    // TODO\n  }\n\n  protected getStringSearchable(item) {\n    return this._tableOptions.columns.map((oCol: OColumn) => {\n      if (oCol.searching && oCol.visible) {\n        let filterValue = item[oCol.attr];\n        if (oCol.renderer && oCol.renderer.getCellData) {\n          filterValue = oCol.renderer.getCellData(filterValue, item);\n        }\n        return filterValue;\n      }\n    }).join(' ');\n  }\n\n  /** Returns a sorted copy of the database data. */\n  protected getSortedData(data: any[]): any[] {\n    return this._sort.getSortedData(data);\n  }\n\n  /**\n   * Returns the data the table stores. No filters are applied.\n   */\n  getTableData(): any[] {\n    return this._database.data;\n  }\n\n  /** Return data of the visible columns of the table without rendering */\n  getCurrentData(): any[] {\n    return this.getData();\n  }\n\n  getCurrentAllData(): any[] {\n    return this.getAllData(false, false);\n  }\n\n  /** Return data of the visible columns of the table  rendering */\n  getCurrentRendererData(): any[] {\n    return this.getRenderedData(this.renderedData);\n  }\n\n  /** Return all data of the table rendering */\n  getAllRendererData(): any[] {\n    return this.getAllData(true, true);\n  }\n\n  /** Return sql types of the current data */\n  get sqlTypes(): any {\n    return this._database.sqlTypes;\n  }\n\n  protected getData() {\n    return this.renderedData;\n  }\n\n  public getRenderedData(data) {\n    let self = this;\n    return data.map(function (row, i, a) {\n      /** render each column*/\n      var obj = {};\n      Object.keys(row).forEach(function (column, i, a) {\n        self._tableOptions.columns.forEach(function (ocolumn: OColumn, i, a) {\n          if (column === ocolumn.attr && ocolumn.visible) {\n            var key = column;\n            if (ocolumn.renderer && ocolumn.renderer.getCellData) {\n              obj[key] = ocolumn.renderer.getCellData(row[column], row);\n            } else {\n              obj[key] = row[column];\n            }\n          }\n        });\n      });\n      return obj;\n    });\n  }\n\n\n  protected getAllData(render?: boolean, onlyVisibleColumns?: boolean) {\n    let self = this;\n    return this.filteredData.map(function (row, i, a) {\n      /** render each column*/\n      var obj = {};\n      Object.keys(row).forEach(function (column, i, a) {\n        self._tableOptions.columns.forEach(function (ocolumn: OColumn, i, a) {\n          if (column === ocolumn.attr) {\n            if (onlyVisibleColumns && !ocolumn.visible) {\n              return;\n            }\n            var key = column;\n            if (render && ocolumn.renderer && ocolumn.renderer.getCellData) {\n              obj[key] = ocolumn.renderer.getCellData(row[column], row);\n            } else {\n              obj[key] = row[column];\n            }\n          }\n\n        });\n      });\n      return obj;\n    });\n  }\n\n  public getColumnData(ocolumn: string) {\n    return this.renderedData.map(function (row, i, a) {\n      /** render each column*/\n      var obj = {};\n      Object.keys(row).forEach(function (column, i, a) {\n        if (column === ocolumn && ocolumn) {\n          var key = column;\n          obj[key] = row[column];\n\n        }\n      });\n      return obj;\n    });\n  }\n\n  initializeColumnsFilters(filters: IColumnValueFilter[]) {\n    this.columnValueFilters = [];\n    filters.forEach(filter => {\n      this.columnValueFilters.push(filter);\n    });\n    if (!this.table.pageable) {\n      this._columnValueFilterChange.next();\n    }\n  }\n\n  isColumnValueFilterActive(): boolean {\n    return this.columnValueFilters.length !== 0;\n  }\n\n  getColumnValueFilters(): IColumnValueFilter[] {\n    return this.columnValueFilters;\n  }\n\n  getColumnValueFilterByAttr(attr: string): IColumnValueFilter {\n    return this.columnValueFilters.filter(item => item.attr === attr)[0];\n  }\n\n  clearColumnFilters(trigger: boolean = true) {\n    this.columnValueFilters = [];\n    if (trigger) {\n      this._columnValueFilterChange.next();\n    }\n  }\n\n  addColumnFilter(filter: IColumnValueFilter) {\n    const existingFilter = this.getColumnValueFilterByAttr(filter.attr);\n    if (existingFilter) {\n      const idx = this.columnValueFilters.indexOf(existingFilter);\n      this.columnValueFilters.splice(idx, 1);\n    }\n\n    if (\n      (ColumnValueFilterOperator.IN === filter.operator && filter.values.length > 0) ||\n      (ColumnValueFilterOperator.EQUAL === filter.operator && filter.values) ||\n      (ColumnValueFilterOperator.BETWEEN === filter.operator && filter.values.length === 2) ||\n      ((ColumnValueFilterOperator.LESS_EQUAL === filter.operator || ColumnValueFilterOperator.MORE_EQUAL === filter.operator) && filter.values)\n    ) {\n      this.columnValueFilters.push(filter);\n    }\n\n    // If the table is paginated, filter will be applied on remote query\n    if (!this.table.pageable) {\n      this._columnValueFilterChange.next();\n    }\n  }\n\n  getColumnValueFilterData(data: any[]): any[] {\n    this.columnValueFilters.forEach(filter => {\n      switch (filter.operator) {\n        case ColumnValueFilterOperator.IN:\n          let filterColumn = this.table.oTableOptions.columns.filter(col => col.attr === filter.attr)[0];\n          if (filterColumn) {\n            data = data.filter((item: any) => {\n              return (filter.values.indexOf(item[filter.attr]) !== -1);\n            });\n          }\n          break;\n        case ColumnValueFilterOperator.EQUAL:\n          if (filter.values.indexOf('*') !== -1) {\n            data = data.filter(item => new RegExp('^' + Util.normalizeString(filter.values).split('*').join('.*') + '$').test(Util.normalizeString(item[filter.attr])));\n          } else {\n            data = data.filter(item => (Util.normalizeString(item[filter.attr]).indexOf(Util.normalizeString(filter.values)) !== -1));\n          }\n          break;\n        case ColumnValueFilterOperator.BETWEEN:\n          data = data.filter(item => item[filter.attr] >= filter.values[0] && item[filter.attr] <= filter.values[1]);\n          break;\n        case ColumnValueFilterOperator.MORE_EQUAL:\n          data = data.filter(item => item[filter.attr] >= filter.values);\n          break;\n        case ColumnValueFilterOperator.LESS_EQUAL:\n          data = data.filter(item => item[filter.attr] <= filter.values);\n          break;\n      }\n    });\n    return data;\n  }\n\n  getAggregateData(column: OColumn) {\n    var obj = {};\n    var totalValue = '';\n\n    if (typeof this._tableOptions === 'undefined') {\n      return new Array(obj);\n    }\n    totalValue = this.aggregateData[column.attr];\n    return totalValue;\n  }\n\n  calculateAggregate(data: any[], column: OColumn): any {\n    let resultAggregate;\n    let operator = column.aggregate.operator;\n    if (typeof operator === 'string') {\n      switch (operator.toLowerCase()) {\n        case 'count':\n          resultAggregate = this.count(column.attr, data);\n          break;\n        case 'min':\n          resultAggregate = this.min(column.attr, data);\n          break;\n        case 'max':\n          resultAggregate = this.max(column.attr, data);\n          break;\n        case 'avg':\n          resultAggregate = this.avg(column.attr, data);\n          break;\n        default:\n          resultAggregate = this.sum(column.attr, data);\n          break;\n      }\n    } else {\n      let data: any[] = this.getColumnData(column.attr);\n      if (typeof operator === 'function') {\n        resultAggregate = operator(data);\n      }\n    }\n    return resultAggregate;\n  }\n\n  sum(column, data): number {\n    let value = 0;\n    if (data) {\n      value = data.reduce(function (acumulator, currentValue) {\n        return acumulator + (isNaN(currentValue[column]) ? 0 : currentValue[column]);\n      }, value);\n    }\n    return value;\n  }\n\n  count(column, data): number {\n    let value = 0;\n    if (data) {\n      value = data.reduce(function (acumulator, currentValue, currentIndex) {\n        return acumulator + 1;\n      }, 0);\n    }\n    return value;\n  }\n\n  avg(column, data): number {\n    return this.sum(column, data) / this.count(column, data);\n  }\n\n  min(column, data): number {\n    const tempMin = data.map(x => x[column]);\n    return Math.min(...tempMin);\n  }\n\n  max(column, data): number {\n    const tempMin = data.map(x => x[column]);\n    return Math.max(...tempMin);\n  }\n\n  protected existsAnyCalculatedColumn(): boolean {\n    return this._tableOptions.columns.find((oCol: OColumn) => oCol.calculate !== undefined) !== undefined;\n  }\n\n  updateRenderedRowData(rowData: any) {\n    const tableKeys = this.table.getKeys();\n    let record = this.renderedData.find((data: any) => {\n      let found = true;\n      for (let i = 0, len = tableKeys.length; i < len; i++) {\n        const key = tableKeys[i];\n        if (data[key] !== rowData[key]) {\n          found = false;\n          break;\n        }\n      }\n      return found;\n    });\n    if (Util.isDefined(record)) {\n      Object.assign(record, rowData);\n    }\n  }\n}\n\n\n\n"]}
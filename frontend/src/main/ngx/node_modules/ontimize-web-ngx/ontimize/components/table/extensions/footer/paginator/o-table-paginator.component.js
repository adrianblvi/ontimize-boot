var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { ChangeDetectionStrategy, Component, forwardRef, Inject, Injectable, Injector } from '@angular/core';
import { MatPaginatorIntl } from '@angular/material';
import { InputConverter } from '../../../../../decorators';
import { OTranslateService } from '../../../../../services';
import { OTableComponent } from '../../../o-table.component';
export var DEFAULT_PAGINATOR_TABLE = [
    'pageSize: page-size',
    'showFirstLastButtons: show-first-last-buttons'
];
var OTablePaginatorComponent = (function () {
    function OTablePaginatorComponent(injector, table) {
        this.injector = injector;
        this.table = table;
        this._pageIndex = 0;
        this._pageSize = 10;
        this.showFirstLastButtons = true;
        this._pageIndex = 0;
        this._pageSizeOptions = [10, 25, 50, 100];
        this.pageSize = this.table.queryRows;
        this.pageIndex = this.table.currentPage;
        this.showFirstLastButtons = this.table.showPaginatorFirstLastButtons;
    }
    OTablePaginatorComponent.prototype.ngOnInit = function () {
        this.table.registerPagination(this);
    };
    Object.defineProperty(OTablePaginatorComponent.prototype, "pageLenght", {
        get: function () {
            return this._pageSize;
        },
        set: function (value) {
            this._pageSize = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(OTablePaginatorComponent.prototype, "pageIndex", {
        get: function () {
            return this._pageIndex;
        },
        set: function (value) {
            this._pageIndex = value;
            if (this.table.matpaginator) {
                this.table.matpaginator.pageIndex = this._pageIndex;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(OTablePaginatorComponent.prototype, "pageSize", {
        get: function () {
            return this._pageSize;
        },
        set: function (value) {
            var _this = this;
            if (value < 0) {
                this._pageSize = this._pageSizeOptions[0];
            }
            else {
                this._pageSize = value;
            }
            var result = this.pageSizeOptions.filter(function (option) { return option == _this._pageSize; });
            if (result.length === 0) {
                this._pageSizeOptions.push(value);
                this._pageSizeOptions.sort(function (i, j) { return i - j; });
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(OTablePaginatorComponent.prototype, "pageSizeOptions", {
        get: function () {
            return this._pageSizeOptions;
        },
        set: function (value) {
            this._pageSizeOptions = value;
        },
        enumerable: true,
        configurable: true
    });
    OTablePaginatorComponent.prototype.initialize = function () {
        this._pageIndex = 0;
    };
    OTablePaginatorComponent.prototype.isShowingAllRows = function (selectedLength) {
        return false;
    };
    OTablePaginatorComponent.decorators = [
        { type: Component, args: [{
                    moduleId: module.id,
                    selector: 'o-table-paginator',
                    template: ' ',
                    inputs: DEFAULT_PAGINATOR_TABLE,
                    changeDetection: ChangeDetectionStrategy.OnPush
                },] },
    ];
    OTablePaginatorComponent.ctorParameters = function () { return [
        { type: Injector },
        { type: OTableComponent, decorators: [{ type: Inject, args: [forwardRef(function () { return OTableComponent; }),] }] }
    ]; };
    __decorate([
        InputConverter(),
        __metadata("design:type", Boolean)
    ], OTablePaginatorComponent.prototype, "showFirstLastButtons", void 0);
    return OTablePaginatorComponent;
}());
export { OTablePaginatorComponent };
var OTableMatPaginatorIntl = (function (_super) {
    __extends(OTableMatPaginatorIntl, _super);
    function OTableMatPaginatorIntl(injector) {
        var _this = _super.call(this) || this;
        _this.injector = injector;
        _this.translateService = _this.injector.get(OTranslateService);
        _this.itemsPerPageLabel = _this.translateService.get('TABLE.PAGINATE.ITEMSPERPAGELABEL');
        _this.nextPageLabel = _this.translateService.get('TABLE.PAGINATE.NEXT');
        _this.previousPageLabel = _this.translateService.get('TABLE.PAGINATE.PREVIOUS');
        _this.firstPageLabel = _this.translateService.get('TABLE.PAGINATE.FIRST');
        _this.lastPageLabel = _this.translateService.get('TABLE.PAGINATE.LAST');
        _this.getRangeLabel = _this.getORangeLabel;
        _this.onLanguageChangeSubscribe = _this.translateService.onLanguageChanged.subscribe(function (res) {
            _this.itemsPerPageLabel = _this.translateService.get('TABLE.PAGINATE.ITEMSPERPAGELABEL');
            _this.nextPageLabel = _this.translateService.get('TABLE.PAGINATE.NEXT');
            _this.previousPageLabel = _this.translateService.get('TABLE.PAGINATE.PREVIOUS');
            _this.firstPageLabel = _this.translateService.get('TABLE.PAGINATE.FIRST');
            _this.lastPageLabel = _this.translateService.get('TABLE.PAGINATE.LAST');
            _this.getRangeLabel = _this.getORangeLabel;
            _this.changes.next();
        });
        return _this;
    }
    OTableMatPaginatorIntl.prototype.getORangeLabel = function (page, pageSize, length) {
        if (!isNaN(pageSize) && (length === 0 || pageSize === 0)) {
            return "0  " + this.translateService.get('TABLE.PAGINATE.RANGE_LABEL') + " " + length;
        }
        length = Math.max(length, 0);
        var startIndex = page * pageSize;
        var endIndex = startIndex < length ?
            Math.min(startIndex + pageSize, length) :
            startIndex + pageSize;
        if (isNaN(pageSize)) {
            startIndex = 0;
            endIndex = length;
        }
        return startIndex + 1 + " - " + endIndex + "  " + this.translateService.get('TABLE.PAGINATE.RANGE_LABEL') + " " + length;
    };
    OTableMatPaginatorIntl.decorators = [
        { type: Injectable },
    ];
    OTableMatPaginatorIntl.ctorParameters = function () { return [
        { type: Injector }
    ]; };
    return OTableMatPaginatorIntl;
}(MatPaginatorIntl));
export { OTableMatPaginatorIntl };
//# sourceMappingURL=o-table-paginator.component.js.map
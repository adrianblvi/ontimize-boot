{"version":3,"file":"o-nif-input.component.js","sourceRoot":"","sources":["../../../../../tmp/ontimize/components/input/nif-input/o-nif-input.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,EACL,SAAS,EAAE,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,UAAU,EACnD,QAAQ,EACR,QAAQ,EACR,iBAAiB,EAClB,MAAM,eAAe,CAAC;AACvB,OAAO,EAAE,YAAY,EAAE,MAAM,iBAAiB,CAAC;AAE/C,OAAO,EAAE,aAAa,EAAE,MAAM,iBAAiB,CAAC;AAChD,OAAO,EAAE,WAAW,EAAE,MAAM,kCAAkC,CAAC;AAC/D,OAAO,EAAE,cAAc,EAAE,MAAM,6BAA6B,CAAC;AAC7D,OAAO,EACL,gBAAgB,EAChB,mBAAmB,EACnB,2BAA2B,EAC3B,4BAA4B,EAC7B,MAAM,sCAAsC,CAAC;AAE9C,MAAM,CAAC,IAAM,0BAA0B,GAClC,2BAA2B,QAC/B,CAAC;AAEF,MAAM,CAAC,IAAM,2BAA2B,GACnC,4BAA4B,QAChC,CAAC;AAEF;IA+BwC,sCAAmB;IAKzD,4BACwD,IAAoB,EAC1E,KAAiB,EACjB,QAAkB;eAClB,kBAAM,IAAI,EAAE,KAAK,EAAE,QAAQ,CAAC;IAC9B,CAAC;IAED,8CAAiB,GAAjB;QACE,IAAI,UAAU,GAAkB,iBAAM,iBAAiB,WAAE,CAAC;QAE1D,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;QAC1C,OAAO,UAAU,CAAC;IACpB,CAAC;IAfa,6CAA0B,GAAG,0BAA0B,CAAC;IACxD,8CAA2B,GAAG,2BAA2B,CAAC;;gBAlCzE,SAAS,SAAC;oBACT,QAAQ,EAAE,MAAM,CAAC,EAAE;oBACnB,QAAQ,EAAE,aAAa;oBACvB,QAAQ,EAAE,msDAoBT;oBACD,MAAM,EAAE,CAAC,QAER,CAAC;oBACF,MAAM,EAAE,0BAA0B;oBAClC,OAAO,EAAE,2BAA2B;oBACpC,aAAa,EAAE,iBAAiB,CAAC,IAAI;iBACtC;;;gBA9CQ,cAAc,uBAqDlB,QAAQ,YAAI,MAAM,SAAC,UAAU,CAAC,cAAM,OAAA,cAAc,EAAd,CAAc,CAAC;gBA9Db,UAAU;gBAAhC,QAAQ;;IA2E7B,yBAAC;CAAA,AAlDD,CA+BwC,mBAAmB,GAmB1D;SAnBY,kBAAkB;AAqB/B;IAAA;IAMA,CAAC;;gBANA,QAAQ,SAAC;oBACR,YAAY,EAAE,CAAC,kBAAkB,CAAC;oBAClC,OAAO,EAAE,CAAC,aAAa,EAAE,YAAY,EAAE,gBAAgB,CAAC;oBACxD,OAAO,EAAE,CAAC,kBAAkB,EAAE,gBAAgB,CAAC;iBAChD;;IAED,sBAAC;CAAA,AAND,IAMC;SADY,eAAe","sourcesContent":["import {\n  Component, Inject, Injector, forwardRef, ElementRef, OnInit,\n  Optional,\n  NgModule,\n  ViewEncapsulation\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ValidatorFn } from '@angular/forms';\nimport { OSharedModule } from '../../../shared';\nimport { OValidators } from '../../../validators/o-validators';\nimport { OFormComponent } from '../../form/o-form.component';\nimport {\n  OTextInputModule,\n  OTextInputComponent,\n  DEFAULT_INPUTS_O_TEXT_INPUT,\n  DEFAULT_OUTPUTS_O_TEXT_INPUT\n} from '../text-input/o-text-input.component';\n\nexport const DEFAULT_INPUTS_O_NIF_INPUT = [\n  ...DEFAULT_INPUTS_O_TEXT_INPUT\n];\n\nexport const DEFAULT_OUTPUTS_O_NIF_INPUT = [\n  ...DEFAULT_OUTPUTS_O_TEXT_INPUT\n];\n\n@Component({\n  moduleId: module.id,\n  selector: 'o-nif-input',\n  template: `\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" [formGroup]=\"getFormGroup()\" [matTooltip]=\"tooltip\"\n      [matTooltipClass]=\"tooltipClass\" [matTooltipPosition]=\"tooltipPosition\" [matTooltipShowDelay]=\"tooltipShowDelay\"\n      [matTooltipHideDelay]=\"tooltipHideDelay\">\n      <mat-form-field [appearance]=\"appearance\" [floatLabel]=\"floatLabel\" [hideRequiredMarker]=\"hideRequiredMarker\"\n        [class.custom-width]=\"hasCustomWidth\" class=\"icon-field\" fxFlexFill>\n        <mat-label *ngIf=\"labelVisible\">{{ olabel | oTranslate }}</mat-label>\n        <input matInput type=\"text\" [id]=\"getAttribute()\" [formControlName]=\"getAttribute()\" [placeholder]=\"placeHolder\"\n          (focus)=\"innerOnFocus($event)\" (blur)=\"innerOnBlur($event)\" (change)=\"onChangeEvent($event)\"\n          [readonly]=\"isReadOnly\" [required]=\"isRequired\">\n        <button type=\"button\" *ngIf=\"showClearButton\" matSuffix mat-icon-button (click)=\"onClickClearValue($event)\">\n          <mat-icon svgIcon=\"ontimize:close\"></mat-icon>\n        </button>\n        <mat-icon matSuffix [class.mat-disabled]=\"!enabled\" svgIcon=\"ontimize:perm_identity\"></mat-icon>\n        <mat-error *ngIf=\"hasError('required')\" text=\"{{ 'FORM_VALIDATION.REQUIRED' | oTranslate }}\"></mat-error>\n        <mat-error *ngIf=\"hasError('invalidNIF')\" text=\"{{ 'FORM_VALIDATION.NIF_FORMAT' | oTranslate}}\"></mat-error>\n        <mat-error *ngIf=\"hasError('invalidNIFLetter')\" text=\"{{ 'FORM_VALIDATION.DNI_LETTER' | oTranslate}}\"></mat-error>\n        <mat-error *ngFor=\"let oError of getActiveOErrors()\" text=\"{{ oError.text | oTranslate }}\"></mat-error>\n      </mat-form-field>\n    </div>\n  `,\n  styles: [`\n\n  `],\n  inputs: DEFAULT_INPUTS_O_NIF_INPUT,\n  outputs: DEFAULT_OUTPUTS_O_NIF_INPUT,\n  encapsulation: ViewEncapsulation.None\n})\nexport class ONIFInputComponent extends OTextInputComponent implements OnInit {\n\n  public static DEFAULT_INPUTS_O_NIF_INPUT = DEFAULT_INPUTS_O_NIF_INPUT;\n  public static DEFAULT_OUTPUTS_O_NIF_INPUT = DEFAULT_OUTPUTS_O_NIF_INPUT;\n\n  constructor(\n    @Optional() @Inject(forwardRef(() => OFormComponent)) form: OFormComponent,\n    elRef: ElementRef,\n    injector: Injector) {\n    super(form, elRef, injector);\n  }\n\n  resolveValidators(): ValidatorFn[] {\n    let validators: ValidatorFn[] = super.resolveValidators();\n    //Inject NIF validator\n    validators.push(OValidators.nifValidator);\n    return validators;\n  }\n\n}\n\n@NgModule({\n  declarations: [ONIFInputComponent],\n  imports: [OSharedModule, CommonModule, OTextInputModule],\n  exports: [ONIFInputComponent, OTextInputModule]\n})\nexport class ONIFInputModule {\n}\n"]}
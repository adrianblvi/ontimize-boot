var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Component, NgModule, ViewEncapsulation } from '@angular/core';
import { CommonModule } from '@angular/common';
import { OSharedModule } from '../../../shared';
import { InputConverter } from '../../../decorators';
import { DEFAULT_INPUTS_O_REAL_INPUT, DEFAULT_OUTPUTS_O_REAL_INPUT, ORealInputComponent, ORealInputModule } from '../real-input/o-real-input.component';
export var DEFAULT_INPUTS_O_PERCENT_INPUT = DEFAULT_INPUTS_O_REAL_INPUT.slice();
export var DEFAULT_OUTPUTS_O_PERCENT_INPUT = DEFAULT_OUTPUTS_O_REAL_INPUT.slice();
var OPercentInputComponent = (function (_super) {
    __extends(OPercentInputComponent, _super);
    function OPercentInputComponent() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.grouping = true;
        return _this;
    }
    OPercentInputComponent.prototype.ngOnInit = function () {
        if (typeof (this.min) === 'undefined') {
            this.min = 0;
        }
        if (typeof (this.max) === 'undefined') {
            this.max = 100;
        }
        _super.prototype.ngOnInit.call(this);
    };
    OPercentInputComponent.DEFAULT_INPUTS_O_PERCENT_INPUT = DEFAULT_INPUTS_O_PERCENT_INPUT;
    OPercentInputComponent.DEFAULT_OUTPUTS_O_PERCENT_INPUT = DEFAULT_OUTPUTS_O_PERCENT_INPUT;
    OPercentInputComponent.decorators = [
        { type: Component, args: [{
                    moduleId: module.id,
                    selector: 'o-percent-input',
                    template: "\n    <div [formGroup]=\"getFormGroup()\" [matTooltip]=\"tooltip\" [matTooltipClass]=\"tooltipClass\"\n      [matTooltipPosition]=\"tooltipPosition\" [matTooltipShowDelay]=\"tooltipShowDelay\"\n      [matTooltipHideDelay]=\"tooltipHideDelay\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n      <mat-form-field [appearance]=\"appearance\" [floatLabel]=\"floatLabel\" [hideRequiredMarker]=\"hideRequiredMarker\"\n        [class.custom-width]=\"hasCustomWidth\" class=\"icon-field\" fxFlexFill>\n        <mat-label *ngIf=\"labelVisible\">{{ olabel | oTranslate }}</mat-label>\n        <input matInput [type]=\"inputType\" [id]=\"getAttribute()\" [formControlName]=\"getAttribute()\"\n          [placeholder]=\"placeHolder\" (focus)=\"innerOnFocus($event)\" (blur)=\"innerOnBlur($event)\" [readonly]=\"isReadOnly\"\n          (change)=\"onChangeEvent($event)\" [min]=\"min\" [max]=\"max\" [step]=\"step\" [required]=\"isRequired\">\n        <button type=\"button\" *ngIf=\"showClearButton\" matSuffix mat-icon-button (click)=\"onClickClearValue($event)\">\n          <mat-icon svgIcon=\"ontimize:close\"></mat-icon>\n        </button>\n        <mat-icon svgIcon=\"ontimize:PERCENT\" matSuffix class=\"svg-icon\" [class.mat-disabled]=\"!enabled\"></mat-icon>\n        <mat-error *ngIf=\"hasError('required')\" text=\"{{ 'FORM_VALIDATION.REQUIRED' | oTranslate }}\"></mat-error>\n        <mat-error *ngIf=\"hasError('min')\"\n          text=\"{{ 'FORM_VALIDATION.MIN_VALUE' | oTranslate }}: {{ getErrorValue('min', 'requiredMin') }}\"></mat-error>\n        <mat-error *ngIf=\"hasError('max')\"\n          text=\"{{ 'FORM_VALIDATION.MAX_VALUE' | oTranslate }}: {{ getErrorValue('max', 'requiredMax') }}\"></mat-error>\n        <mat-error *ngIf=\"hasError('minDecimaldigits')\"\n          text=\"{{ 'FORM_VALIDATION.MIN_DECIMAL_DIGITS' | oTranslate }}: {{ getErrorValue('minDecimaldigits', 'requiredMinDecimaldigits') }}\">\n        </mat-error>\n        <mat-error *ngIf=\"hasError('maxDecimaldigits')\"\n          text=\"{{ 'FORM_VALIDATION.MAX_DECIMAL_DIGITS' | oTranslate }}: {{ getErrorValue('maxDecimaldigits', 'requiredMaxDecimaldigits') }}\">\n        </mat-error>\n        <mat-error *ngFor=\"let oError of getActiveOErrors()\" text=\"{{ oError.text | oTranslate }}\"></mat-error>\n      </mat-form-field>\n    </div>\n  ",
                    styles: ["\n\n  "],
                    inputs: DEFAULT_INPUTS_O_PERCENT_INPUT,
                    outputs: DEFAULT_OUTPUTS_O_PERCENT_INPUT,
                    encapsulation: ViewEncapsulation.None
                },] },
    ];
    __decorate([
        InputConverter(),
        __metadata("design:type", Boolean)
    ], OPercentInputComponent.prototype, "grouping", void 0);
    return OPercentInputComponent;
}(ORealInputComponent));
export { OPercentInputComponent };
var OPercentInputModule = (function () {
    function OPercentInputModule() {
    }
    OPercentInputModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [OPercentInputComponent],
                    imports: [CommonModule, OSharedModule, ORealInputModule],
                    exports: [OPercentInputComponent, ORealInputModule]
                },] },
    ];
    return OPercentInputModule;
}());
export { OPercentInputModule };
//# sourceMappingURL=o-percent-input.component.js.map
{"version":3,"file":"OFormValue.js","sourceRoot":"","sources":["../../../../tmp/ontimize/components/form/OFormValue.ts"],"names":[],"mappings":"AAAA;IAEE,oBAAY,KAAW;QACrB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;IACH,iBAAC;AAAD,CAAC,AALD,IAKC","sourcesContent":["export class OFormValue {\n  value: any;\n  constructor(value?: any) {\n    this.value = value;\n  }\n}\n\nexport interface IFormValueOptions {\n  // If onlySelf is true, this change will only affect the validation of this FormControl and not its parent component. This defaults to false.\n  onlySelf?: boolean;\n  // If emitEvent is true, this change will cause a valueChanges event on the FormControl to be emitted. This defaults to true (as it falls through to updateValueAndValidity).\n  emitEvent?: boolean;\n  // If emitModelToViewChange is true, the view will be notified about the new value via an onChange event. This is the default behavior if emitModelToViewChange is not specified.\n  emitModelToViewChange?: boolean;\n  // If emitViewToModelChange is true, an ngModelChange event will be fired to update the model. This is the default behavior if emitViewToModelChange is not specified.\n  emitViewToModelChange?: boolean;\n  // If changeType is 0, the onValueChage event will trigger an event performed by the user but an event performed by programming.\n  changeType?: number;\n  // If emitModelToViewValueChange is true, the view will be notified about the new value via an onValueChange event. This is the default behavior if emitModelToViewValueChange is not specified.\n  emitModelToViewValueChange?: boolean;\n}\n\n\n\n\n\n\n"]}
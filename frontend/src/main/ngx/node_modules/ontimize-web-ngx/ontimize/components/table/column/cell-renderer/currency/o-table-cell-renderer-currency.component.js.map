{"version":3,"file":"o-table-cell-renderer-currency.component.js","sourceRoot":"","sources":["../../../../../../../tmp/ontimize/components/table/column/cell-renderer/currency/o-table-cell-renderer-currency.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AACA,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAU,WAAW,EAAE,SAAS,EAAE,uBAAuB,EAAE,MAAM,eAAe,CAAC;AAE7G,OAAO,EAAE,eAAe,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAyB,aAAa,EAAE,MAAM,sBAAsB,CAAC;AAC5E,OAAO,EAAE,sBAAsB,EAAE,MAAM,qCAAqC,CAAC;AAC7E,OAAO,EAAE,+BAA+B,EAAE,MAAM,8CAA8C,CAAC;AAC/F,OAAO,EAAE,cAAc,EAAE,MAAM,2BAA2B,CAAC;AAG3D,MAAM,CAAC,IAAM,6CAA6C,GACrD,+BAA+B,CAAC,yCAAyC;IAG5E,iCAAiC;IAGjC,kDAAkD;EACnD,CAAC;AAEF;IAWyD,uDAAsB;IAsB7E,6CAAsB,QAAkB;QAAxC,YACE,kBAAM,QAAQ,CAAC,SAIhB;QALqB,cAAQ,GAAR,QAAQ,CAAU;QAjBxC,sBAAgB,GAAW,CAAC,CAAC;QAE7B,sBAAgB,GAAW,CAAC,CAAC;QAInB,sBAAgB,GAAW,GAAG,CAAC;QAE/B,cAAQ,GAAY,IAAI,CAAC;QACzB,uBAAiB,GAAW,GAAG,CAAC;QAUxC,KAAI,CAAC,WAAW,CAAC,IAAI,GAAG,UAAU,CAAC;QACnC,KAAI,CAAC,eAAe,GAAG,KAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;QAC1D,KAAI,CAAC,gBAAgB,EAAE,CAAC;;IAC1B,CAAC;IAED,8DAAgB,GAAhB;QACE,IAAI,CAAC,aAAa,GAAG,IAAI,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACxD,CAAC;IAED,sDAAQ,GAAR;QACE,IAAI,OAAO,IAAI,CAAC,cAAc,KAAK,WAAW,EAAE;YAC9C,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;SACnD;QACD,IAAI,OAAO,IAAI,CAAC,sBAAsB,KAAK,WAAW,EAAE;YACtD,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC;SACnE;QAED,IAAI,CAAC,aAAa,GAAG;YACnB,cAAc,EAAE,IAAI,CAAC,cAAc;YACnC,sBAAsB,EAAE,IAAI,CAAC,sBAAsB;YACnD,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;YACvC,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;YACvC,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;YACvC,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,iBAAiB,EAAE,IAAI,CAAC,iBAAiB;SAC1C,CAAC;IAEJ,CAAC;IAjDa,iFAA6C,GAAG,6CAA6C,CAAC;;gBAb7G,SAAS,SAAC;oBACT,QAAQ,EAAE,MAAM,CAAC,EAAE;oBACnB,QAAQ,EAAE,gCAAgC;oBAC1C,QAAQ,EAAE,wHAIT;oBACD,eAAe,EAAE,uBAAuB,CAAC,MAAM;oBAC/C,MAAM,EAAE,6CAA6C;iBACtD;;;gBA7BmB,QAAQ;;;8BAkDzB,SAAS,SAAC,aAAa,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE;;IAf/C;QADC,cAAc,EAAE;;iFACY;IAE7B;QADC,cAAc,EAAE;;iFACY;IA8C/B,0CAAC;CAAA,AAhED,CAWyD,sBAAsB,GAqD9E;SArDY,mCAAmC","sourcesContent":["\nimport { Component, Injector, OnInit, TemplateRef, ViewChild, ChangeDetectionStrategy } from '@angular/core';\n\nimport { CurrencyService } from '../../../../../services';\nimport { ICurrencyPipeArgument, OCurrencyPipe } from '../../../../../pipes';\nimport { OBaseTableCellRenderer } from '../o-base-table-cell-renderer.class';\nimport { OTableCellRendererRealComponent } from '../real/o-table-cell-renderer-real.component';\nimport { InputConverter } from '../../../../../decorators';\n\n\nexport const DEFAULT_INPUTS_O_TABLE_CELL_RENDERER_CURRENCY = [\n  ...OTableCellRendererRealComponent.DEFAULT_INPUTS_O_TABLE_CELL_RENDERER_REAL,\n\n  // currency-symbol [string]: currency symbol. Default: dollar ($).\n  'currencySymbol: currency-symbol',\n\n  // currency-symbol-position [left|right]: position of the currency symbol. Default: left.\n  'currencySymbolPosition: currency-symbol-position'\n];\n\n@Component({\n  moduleId: module.id,\n  selector: 'o-table-cell-renderer-currency',\n  template: `\n    <ng-template #templateref let-cellvalue=\"cellvalue\">\n      {{getCellData(cellvalue)}}\n    </ng-template>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: DEFAULT_INPUTS_O_TABLE_CELL_RENDERER_CURRENCY\n})\nexport class OTableCellRendererCurrencyComponent extends OBaseTableCellRenderer implements OnInit {\n\n  public static DEFAULT_INPUTS_O_TABLE_CELL_RENDERER_CURRENCY = DEFAULT_INPUTS_O_TABLE_CELL_RENDERER_CURRENCY;\n\n  @InputConverter()\n  minDecimalDigits: number = 2;\n  @InputConverter()\n  maxDecimalDigits: number = 2;\n\n  protected currencySymbol: string;\n  protected currencySymbolPosition: string;\n  protected decimalSeparator: string = '.';\n\n  protected grouping: boolean = true;\n  protected thousandSeparator: string = ',';\n\n  protected currencyService: CurrencyService;\n\n  protected componentPipe: OCurrencyPipe;\n  protected pipeArguments: ICurrencyPipeArgument;\n  @ViewChild('templateref', { read: TemplateRef }) public templateref: TemplateRef<any>;\n\n  constructor(protected injector: Injector) {\n    super(injector);\n    this.tableColumn.type = 'currency';\n    this.currencyService = this.injector.get(CurrencyService);\n    this.setComponentPipe();\n  }\n\n  setComponentPipe() {\n    this.componentPipe = new OCurrencyPipe(this.injector);\n  }\n\n  ngOnInit() {\n    if (typeof this.currencySymbol === 'undefined') {\n      this.currencySymbol = this.currencyService.symbol;\n    }\n    if (typeof this.currencySymbolPosition === 'undefined') {\n      this.currencySymbolPosition = this.currencyService.symbolPosition;\n    }\n\n    this.pipeArguments = {\n      currencySimbol: this.currencySymbol,\n      currencySymbolPosition: this.currencySymbolPosition,\n      minDecimalDigits: this.minDecimalDigits,\n      maxDecimalDigits: this.maxDecimalDigits,\n      decimalSeparator: this.decimalSeparator,\n      grouping: this.grouping,\n      thousandSeparator: this.thousandSeparator\n    };\n\n  }\n\n}\n"]}
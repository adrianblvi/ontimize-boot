{"version":3,"file":"o-list-picker-dialog.component.js","sourceRoot":"","sources":["../../../../../tmp/ontimize/components/input/listpicker/o-list-picker-dialog.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, Inject, Injector, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\n\nimport { Util } from '../../../util/util';\nimport { OSearchInputComponent } from '../../input/search-input/o-search-input.component';\n\nexport const DEFAULT_INPUTS_O_LIST_PICKER = [\n  'data',\n  'visibleColumns: visible-columns',\n  'filter'\n];\n\n@Component({\n  moduleId: module.id,\n  selector: 'o-list-picker-dialog',\n  template: `\n    <div class=\"title-container\" *ngIf=\"filter\">\n      <o-search-input #searchInput [columns]=\"menuColumns\" show-menu=\"no\" float-label=\"never\" (onSearch)=\"onFilterList($event)\"\n        class=\"o-list-picker-search\"></o-search-input>\n    </div>\n    <div mat-dialog-content (scroll)=\"onScroll($event)\" [class.o-list-picker-has-filter]=\"filter\" fxFlex>\n      <mat-list>\n        <mat-list-item *ngIf=\"isEmptyData()\">\n          {{ 'LIST.EMPTY' | oTranslate }}\n          <ng-container *ngIf=\"filter && searchInput && searchInput.getValue() && searchInput.getValue().length > 0\">\n            {{ 'LIST.EMPTY_USING_FILTER' | oTranslate : { values: [searchInput.getValue()] } }}\n          </ng-container>\n        </mat-list-item>\n        <mat-list-item (click)=\"onClickListItem($event, item)\" *ngFor=\"let item of visibleData; trackBy: trackByFn\">\n          <span>{{ item['_parsedVisibleColumnText'] }}</span>\n          <mat-divider></mat-divider>\n        </mat-list-item>\n      </mat-list>\n    </div>\n    <mat-dialog-actions align=\"end\">\n      <button type=\"button\" mat-stroked-button mat-dialog-close>{{ 'CANCEL' | oTranslate | uppercase }}</button>\n    </mat-dialog-actions>\n  `,\n  styles: [`\n    .cdk-overlay-list-picker .mat-dialog-container{padding:0}.cdk-overlay-list-picker .mat-dialog-container .o-list-picker-dialog{display:flex;flex-direction:column;height:100%}.cdk-overlay-list-picker .mat-dialog-container .o-list-picker-dialog .title-container{padding:5px 20px}.cdk-overlay-list-picker .mat-dialog-container .o-list-picker-dialog .title-container .o-search-input mat-form-field .mat-form-field-wrapper{padding-bottom:0}.cdk-overlay-list-picker .mat-dialog-container .o-list-picker-dialog .title-container .o-search-input mat-form-field .mat-form-field-wrapper .mat-form-field-underline{display:none}.cdk-overlay-list-picker .mat-dialog-container .o-list-picker-dialog .mat-dialog-content{margin:0}.cdk-overlay-list-picker .mat-dialog-container .o-list-picker-dialog .mat-dialog-content mat-list mat-list-item{cursor:pointer}.cdk-overlay-list-picker .mat-dialog-container .o-list-picker-dialog .mat-dialog-actions{padding-top:12px;margin:0 12px}\n  `],\n  inputs: DEFAULT_INPUTS_O_LIST_PICKER,\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    '[class.o-list-picker-dialog]': 'true'\n  }\n})\nexport class OListPickerDialogComponent {\n\n  public filter: boolean = true;\n  public visibleData: any = [];\n  public searchVal: string;\n\n  @ViewChild('searchInput')\n  public searchInput: OSearchInputComponent;\n\n  protected data: any[] = [];\n  protected menuColumns: string;\n  protected visibleColsArray: string[];\n\n  protected _startIndex: number = 0;\n  protected recordsNumber: number = 100;\n  protected scrollThreshold: number = 200;\n\n  constructor(\n    public dialogRef: MatDialogRef<OListPickerDialogComponent>,\n    protected injector: Injector,\n    @Inject(MAT_DIALOG_DATA) data: any\n  ) {\n    if (data.data && Util.isArray(data.data)) {\n      this.data = data.data;\n    }\n    if (data.visibleColumns && Util.isArray(data.visibleColumns)) {\n      this.visibleColsArray = data.visibleColumns;\n    }\n    if (data.queryRows !== undefined) {\n      this.recordsNumber = data.queryRows;\n    }\n    if (data.filter !== undefined) {\n      this.filter = data.filter;\n    }\n    if (data.menuColumns) {\n      this.menuColumns = data.menuColumns;\n    }\n    this.searchVal = data.searchVal;\n  }\n\n  public ngAfterViewInit(): void {\n    if (Util.isDefined(this.searchVal) && this.searchInput !== undefined && this.searchVal.length > 0) {\n      this.searchInput.getFormControl().setValue(this.searchVal, {\n        emitEvent: false\n      });\n      this.onFilterList(this.searchVal);\n    } else {\n      this.startIndex = 0;\n    }\n  }\n\n  get startIndex(): number {\n    return this._startIndex;\n  }\n\n  set startIndex(val: number) {\n    this._startIndex = val;\n    this.visibleData = this.data.slice(this.startIndex, this.recordsNumber);\n  }\n\n  public onClickListItem(e: Event, value: any): void {\n    this.dialogRef.close(value);\n  }\n\n  public trackByFn(index: number, item: any): number {\n    return index;\n  }\n\n  public onScroll(event: any): void {\n    if (event && event.target && this.visibleData.length < this.data.length) {\n      const pendingScroll = event.target.scrollHeight - (event.target.scrollTop + event.target.clientHeight);\n      if (!isNaN(pendingScroll) && pendingScroll <= this.scrollThreshold) {\n        let index = this.visibleData.length;\n        const searchVal = this.searchInput.getValue();\n        if (Util.isDefined(searchVal) && searchVal.length > 0) {\n          index = this.visibleData[this.visibleData.length - 1]['_parsedIndex'];\n        }\n        let appendData = this.data.slice(index, this.visibleData.length + this.recordsNumber);\n        if (appendData.length) {\n          appendData = this.transform(appendData, {\n            filtervalue: this.searchInput.getValue(),\n            filtercolumns: this.visibleColsArray\n          });\n          if (appendData.length) {\n            this.visibleData = this.visibleData.concat(appendData);\n          }\n        }\n      }\n    }\n  }\n\n  public onFilterList(searchVal: any): void {\n    this.visibleData = this.transform(this.data, {\n      filtervalue: searchVal,\n      filtercolumns: this.visibleColsArray\n    });\n    this._startIndex = 0;\n    this.visibleData = this.visibleData.slice(this.startIndex, this.recordsNumber);\n  }\n\n  public isEmptyData(): boolean {\n    return Util.isDefined(this.visibleData) ? this.visibleData.length === 0 : true;\n  }\n\n  private transform(value: any[], args: any): any {\n    if (!args || args.length <= 1) {\n      return value;\n    }\n\n    const filterValue = args['filtervalue'] ? args['filtervalue'] : '';\n    const filterColumns = args['filtercolumns'];\n\n    if (!filterColumns || !filterValue || filterValue.length === 0) {\n      return value;\n    }\n\n    if (value === undefined || value === null) {\n      return value;\n    }\n\n    return value.filter(item => {\n      for (let i = 0; i < filterColumns.length; i++) {\n        const colName = filterColumns[i];\n        if (this._isBlank(colName)) {\n          continue;\n        }\n        let origValue = item[colName];\n        if (origValue) {\n          origValue = origValue.toString();\n          if (this._isBlank(origValue)) {\n            continue;\n          }\n\n          if (origValue.toUpperCase().indexOf(filterValue.toUpperCase()) > -1) {\n            return item;\n          }\n        }\n      }\n    });\n  }\n\n  private _isBlank(value: string): boolean {\n    return !Util.isDefined(value) || value.length === 0;\n  }\n\n}\n"]}
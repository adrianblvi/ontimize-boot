{"version":3,"file":"o-table-column-aggregate.component.js","sourceRoot":"","sources":["../../../../../../../tmp/ontimize/components/table/extensions/footer/aggregate/o-table-column-aggregate.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAqB,UAAU,EAAE,MAAM,EAAE,QAAQ,EAAE,uBAAuB,EAAE,MAAM,eAAe,CAAC;AACpH,OAAO,EAAE,YAAY,EAAE,MAAM,MAAM,CAAC;AAEpC,OAAO,EAAE,eAAe,EAAE,MAAM,4BAA4B,CAAC;AAE7D;IAAA;IAIA,CAAC;IAAD,uBAAC;AAAD,CAAC,AAJD,IAIC;;AAID,MAAM,CAAC,IAAM,8BAA8B,GAAG;IAE5C,MAAM;IAGN,OAAO;IAGP,WAAW;IAGX,uCAAuC;CACxC,CAAC;AAEF;IAqBE,wCAC6C,KAAsB,EACvD,QAAkB;QAAlB,aAAQ,GAAR,QAAQ,CAAU;QARvB,UAAK,GAAW,EAAE,CAAC;QAIhB,iBAAY,GAAiB,IAAI,YAAY,EAAE,CAAC;QAKxD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;IAED,sBAAI,6DAAiB;aAArB;YACE,OAAO,IAAI,CAAC,kBAAkB,CAAC;QACjC,CAAC;aAED,UAAsB,GAAsB;YAC1C,IAAI,CAAC,kBAAkB,GAAG,GAAG,CAAC;QAChC,CAAC;;;OAJA;IAMD,sDAAa,GAAb,UAAc,IAAI;QAChB,IAAI,UAAU,GAAG,EAAE,CAAC;QACpB,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE;YACzB,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;SACxD;QACD,OAAO,UAAU,CAAC;IACpB,CAAC;IAED,iDAAQ,GAAR;QAAA,iBAeC;QAdC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YACd,OAAO;SACR;QAED,IAAI,gBAAgB,GAAqB,IAAI,gBAAgB,EAAE,CAAC;QAChE,gBAAgB,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAClC,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,gBAAgB,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;SACrC;QAED,gBAAgB,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,8BAA8B,CAAC,iBAAiB,CAAC,CAAC;QACnK,IAAI,CAAC,KAAK,CAAC,uBAAuB,CAAC,gBAAgB,CAAC,CAAC;QAErD,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,SAAS,CAAC,cAAM,OAAA,KAAI,CAAC,KAAK,CAAC,uBAAuB,CAAC,gBAAgB,CAAC,EAApD,CAAoD,CAAC,CAAC,CAAC;IACzH,CAAC;IAED,oDAAW,GAAX;QACE,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;IAClC,CAAC;IA7Ca,gDAAiB,GAAG,KAAK,CAAC;;gBAjBzC,SAAS,SAAC;oBACT,QAAQ,EAAE,MAAM,CAAC,EAAE;oBACnB,QAAQ,EAAE,0BAA0B;oBACpC,QAAQ,EAAE,gEAET;oBACD,eAAe,EAAE,uBAAuB,CAAC,MAAM;oBAC/C,MAAM,EAAE,8BAA8B;iBAEvC;;;gBAjCQ,eAAe,uBA8CnB,MAAM,SAAC,UAAU,CAAC,cAAM,OAAA,eAAe,EAAf,CAAe,CAAC;gBAjDc,QAAQ;;IA2FnE,qCAAC;CAAA,AAhED,IAgEC;SAtDY,8BAA8B","sourcesContent":["import { Component, OnDestroy, OnInit, forwardRef, Inject, Injector, ChangeDetectionStrategy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { OTableComponent } from '../../../o-table.component';\n\nexport class OColumnAggregate {\n  title: string;\n  attr: string;\n  operator: string | AggregateFunction;\n}\n\nexport type AggregateFunction = (value: any[]) => number;\n\nexport const DEFAULT_TABLE_COLUMN_AGGREGATE = [\n  // attr [string]: column name.\n  'attr',\n\n  // title [string]: Title for the header total column\n  'title',\n\n  //aggregate [sum | count | avg | min |max]\n  'aggregate',\n\n  //function-aggregate [ (value: any[]) => number] Function that calculates a value on the values of the column 'attr'\n  'functionAggregate: function-aggregate'\n];\n\n@Component({\n  moduleId: module.id,\n  selector: 'o-table-column-aggregate',\n  template: `\n     <!--{{ functionAggregate(getColumnData(attr)) }}-->\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: DEFAULT_TABLE_COLUMN_AGGREGATE\n\n})\nexport class OTableColumnAggregateComponent implements OnDestroy, OnInit {\n\n  public attr: string;\n  public aggregate: string;\n  public table: OTableComponent;\n  public title: string = '';\n  protected _aggregateFunction: AggregateFunction;\n  public static DEFAULT_AGGREGATE = 'SUM';\n\n  protected subscription: Subscription = new Subscription();\n\n  constructor(\n    @Inject(forwardRef(() => OTableComponent)) table: OTableComponent,\n    protected injector: Injector) {\n    this.table = table;\n  }\n\n  get functionAggregate(): AggregateFunction {\n    return this._aggregateFunction;\n  }\n\n  set functionAggregate(val: AggregateFunction) {\n    this._aggregateFunction = val;\n  }\n\n  getColumnData(attr) {\n    let columnData = [];\n    if (this.table.dataSource) {\n      columnData = this.table.dataSource.getColumnData(attr);\n    }\n    return columnData;\n  }\n\n  ngOnInit() {\n    if (!this.attr) {\n      return;\n    }\n\n    let ocolumnaggregate: OColumnAggregate = new OColumnAggregate();\n    ocolumnaggregate.attr = this.attr;\n    if (this.title) {\n      ocolumnaggregate.title = this.title;\n    }\n\n    ocolumnaggregate.operator = this.aggregate ? this.aggregate : (this.functionAggregate ? this.functionAggregate : OTableColumnAggregateComponent.DEFAULT_AGGREGATE);\n    this.table.registerColumnAggregate(ocolumnaggregate);\n\n    this.subscription.add(this.table.onReinitialize.subscribe(() => this.table.registerColumnAggregate(ocolumnaggregate)));\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n}\n"]}
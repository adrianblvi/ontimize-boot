{"version":3,"file":"o-table-cell-editor-real.component.js","sourceRoot":"","sources":["../../../../../../../tmp/ontimize/components/table/column/cell-editor/real/o-table-cell-editor-real.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, Injector, ViewChild, TemplateRef, ChangeDetectionStrategy } from '@angular/core';\nimport { ValidatorFn, FormControl } from '@angular/forms';\nimport { InputConverter } from '../../../../../decorators';\nimport { OTableCellEditorIntegerComponent } from '../integer/o-table-cell-editor-integer.component';\nimport { OBaseTableCellEditor } from '../o-base-table-cell-editor.class';\n\nexport const DEFAULT_INPUTS_O_TABLE_CELL_EDITOR_REAL = [\n  ...OTableCellEditorIntegerComponent.DEFAULT_INPUTS_O_TABLE_CELL_EDITOR_INTEGER\n];\n\nexport const DEFAULT_OUTPUTS_O_TABLE_CELL_EDITOR_REAL = [\n  ...OTableCellEditorIntegerComponent.DEFAULT_OUTPUTS_O_TABLE_CELL_EDITOR_INTEGER\n];\n\n@Component({\n  moduleId: module.id,\n  selector: 'o-table-cell-editor-real',\n  template: `\n    <ng-template #templateref let-cellvalue=\"cellvalue\" let-rowvalue=\"rowvalue\">\n      <div [formGroup]=\"formGroup\">\n        <mat-form-field floatLabel=\"never\">\n\n          <input #input matInput type=\"number\" [placeholder]=\"getPlaceholder()\" [formControl]=\"formControl\"\n            [required]=\"orequired\" [min]=\"min\" [max]=\"max\" [step]=\"step\">\n\n          <mat-error *ngIf=\"hasError('required')\">{{ 'FORM_VALIDATION.REQUIRED' | oTranslate }}</mat-error>\n          <mat-error *ngIf=\"hasError('min')\">{{ 'FORM_VALIDATION.MIN_VALUE' | oTranslate }}:\n            {{ getErrorValue('min', 'requiredMin') }}</mat-error>\n          <mat-error *ngIf=\"hasError('max')\">{{ 'FORM_VALIDATION.MAX_VALUE' | oTranslate }}:\n            {{ getErrorValue('max', 'requiredMax') }}</mat-error>\n\n        </mat-form-field>\n      </div>\n    </ng-template>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: DEFAULT_INPUTS_O_TABLE_CELL_EDITOR_REAL,\n  outputs: DEFAULT_OUTPUTS_O_TABLE_CELL_EDITOR_REAL\n})\n\nexport class OTableCellEditorRealComponent extends OBaseTableCellEditor {\n\n  public static DEFAULT_INPUTS_O_TABLE_CELL_EDITOR_REAL = DEFAULT_INPUTS_O_TABLE_CELL_EDITOR_REAL;\n  public static DEFAULT_OUTPUTS_O_TABLE_CELL_EDITOR_REAL = DEFAULT_OUTPUTS_O_TABLE_CELL_EDITOR_REAL;\n\n  @ViewChild('templateref', { read: TemplateRef }) public templateref: TemplateRef<any>;\n\n  @InputConverter()\n  min: number;\n  @InputConverter()\n  max: number;\n  @InputConverter()\n  step: number = 0.01;\n\n  constructor(protected injector: Injector) {\n    super(injector);\n  }\n\n  getCellData() {\n    let cellData = super.getCellData();\n    let floatValue = parseFloat(cellData);\n    return isNaN(floatValue) ? undefined : floatValue;\n  }\n\n  resolveValidators(): ValidatorFn[] {\n    let validators: ValidatorFn[] = super.resolveValidators();\n    if (typeof (this.min) !== 'undefined') {\n      validators.push(this.minValidator.bind(this));\n    }\n    if (typeof (this.max) !== 'undefined') {\n      validators.push(this.maxValidator.bind(this));\n    }\n    return validators;\n  }\n\n  protected minValidator(control: FormControl) {\n    if ((typeof (control.value) === 'number') && (control.value < this.min)) {\n      return {\n        'min': {\n          'requiredMin': this.min\n        }\n      };\n    }\n    return {};\n  }\n\n  protected maxValidator(control: FormControl) {\n    if ((typeof (control.value) === 'number') && (this.max < control.value)) {\n      return {\n        'max': {\n          'requiredMax': this.max\n        }\n      };\n    }\n    return {};\n  }\n\n}\n"]}
[{"__symbolic":"module","version":4,"metadata":{"DEFAULT_CONTEXT_MENU_CONTENT_ITEM_INPUTS":["items","class"],"OWrapperContentMenuComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":11,"character":1},"arguments":[{"moduleId":{"__symbolic":"select","expression":{"__symbolic":"reference","name":"module"},"member":"id"},"selector":"o-wrapper-content-menu","template":"\n    <mat-menu #childMenu=\"matMenu\" [class]=\"class\" [overlapTrigger]=\"false\" [hasBackdrop]=\"false\">\n      <ng-container *ngFor=\"let child of items\">\n        <!-- Handle branch node menu items -->\n        <span *ngIf=\"isGroup(child) && child.isVisible\">\n          <button mat-menu-item color=\"primary\" [matMenuTriggerFor]=\"menu.childMenu\" [disabled]=\"child.disabled\">\n            <mat-icon *ngIf=\"child.svgIcon !== undefined\" [svgIcon]=\"child.svgIcon\"></mat-icon>\n            <mat-icon *ngIf=\"child.svgIcon === undefined\">{{ child.icon }}</mat-icon>\n            <span>{{ child.label | oTranslate}}</span>\n          </button>\n          <o-wrapper-content-menu #menu [items]=\"child.children\" [class]=\"class\"></o-wrapper-content-menu>\n        </span>\n        <!-- Handle leaf node menu items -->\n        <button mat-menu-item (click)=\"onClick(child, $event)\" [disabled]=\"child.disabled\" *ngIf=\"isItem(child) && child.isVisible\">\n          <mat-icon *ngIf=\"child.svgIcon !== undefined\" [svgIcon]=\"child.svgIcon\"></mat-icon>\n          <mat-icon *ngIf=\"child.svgIcon === undefined\">{{ child.icon }}</mat-icon>\n          <span>{{ child.label | oTranslate}} </span>\n        </button>\n        <!-- separator leaf node menu items -->\n        <mat-divider *ngIf=\"isSepararor(child) && child.isVisible\"></mat-divider>\n      </ng-container>\n    </mat-menu>\n  ","styles":["\n    mat-divider.mat-divider:first-child,mat-divider.mat-divider:last-child{display:none}.mat-icon{display:inline-flex}\n  "],"inputs":{"__symbolic":"reference","name":"DEFAULT_CONTEXT_MENU_CONTENT_ITEM_INPUTS"}}]}],"members":{"items":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":45,"character":3}}]}],"childMenu":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":47,"character":3},"arguments":["childMenu"]}]}],"menu":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":49,"character":3},"arguments":[{"__symbolic":"reference","name":"OWrapperContentMenuComponent"}]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"Injector","line":53,"character":24},{"__symbolic":"reference","module":"../../o-context-menu.service","name":"OContextMenuService","line":54,"character":27}]}],"onClick":[{"__symbolic":"method"}],"isGroup":[{"__symbolic":"method"}],"isSepararor":[{"__symbolic":"method"}],"isItem":[{"__symbolic":"method"}]}}}}]
{"version":3,"file":"o-table-paginator.component.js","sourceRoot":"","sources":["../../../../../../../tmp/ontimize/components/table/extensions/footer/paginator/o-table-paginator.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { ChangeDetectionStrategy, Component, forwardRef, Inject, Injectable, Injector, OnInit } from '@angular/core';\nimport { MatPaginatorIntl } from '@angular/material';\nimport { InputConverter } from '../../../../../decorators';\nimport { OTranslateService } from '../../../../../services';\nimport { OTableComponent } from '../../../o-table.component';\n\nexport const DEFAULT_PAGINATOR_TABLE = [\n  // page-size [number]: Number of items to display on a page. By default set to 50.\n  'pageSize: page-size',\n  'showFirstLastButtons: show-first-last-buttons'\n];\n\n@Component({\n  moduleId: module.id,\n  selector: 'o-table-paginator',\n  template: ' ',\n  inputs: DEFAULT_PAGINATOR_TABLE,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class OTablePaginatorComponent implements OnInit {\n\n  protected _pageIndex: number = 0;\n  protected _pageSize: number = 10;\n  protected _pageSizeOptions: Array<any>;\n\n  @InputConverter()\n  showFirstLastButtons: boolean = true;\n\n  constructor(\n    protected injector: Injector,\n    @Inject(forwardRef(() => OTableComponent)) protected table: OTableComponent\n  ) {\n    this._pageIndex = 0;\n    this._pageSizeOptions = [10, 25, 50, 100];\n    this.pageSize = this.table.queryRows;\n    this.pageIndex = this.table.currentPage;\n    this.showFirstLastButtons = this.table.showPaginatorFirstLastButtons;\n  }\n\n  ngOnInit() {\n    this.table.registerPagination(this);\n  }\n\n  get pageLenght(): number {\n    return this._pageSize;\n  }\n\n  set pageLenght(value: number) {\n    this._pageSize = value;\n  }\n\n  get pageIndex(): number {\n    return this._pageIndex;\n  }\n\n  set pageIndex(value: number) {\n    this._pageIndex = value;\n    if (this.table.matpaginator) {\n      this.table.matpaginator.pageIndex = this._pageIndex;\n    }\n  }\n\n  get pageSize(): number {\n    return this._pageSize;\n  }\n\n  set pageSize(value: number) {\n    if (value < 0) {\n      this._pageSize = this._pageSizeOptions[0];\n    } else {\n      this._pageSize = value;\n    }\n\n    /* Modify === by == because they option and this._pageSize types  can be diferents (number == string) */\n    let result: any[] = this.pageSizeOptions.filter(option => option == this._pageSize);\n    if (result.length === 0) {\n      this._pageSizeOptions.push(value);\n      this._pageSizeOptions.sort((i: number, j: number) => i - j);\n    }\n  }\n\n  get pageSizeOptions(): Array<any> {\n    return this._pageSizeOptions;\n  }\n\n  set pageSizeOptions(value: Array<any>) {\n    this._pageSizeOptions = value;\n  }\n\n  public initialize() {\n    this._pageIndex = 0;\n  }\n\n  public isShowingAllRows(selectedLength): boolean {\n    // return this._pageSizeOptions.indexOf(selectedLength) === (this._pageSizeOptions.length - 1);\n    // temporal while not having an option for showing all records in paginated tables\n    return false;\n  }\n}\n\n@Injectable()\nexport class OTableMatPaginatorIntl extends MatPaginatorIntl {\n\n  itemsPerPageLabel;\n  nextPageLabel;\n  previousPageLabel;\n  translateService: OTranslateService;\n  protected onLanguageChangeSubscribe: any;\n\n  constructor(protected injector: Injector) {\n    super();\n    this.translateService = this.injector.get(OTranslateService);\n    this.itemsPerPageLabel = this.translateService.get('TABLE.PAGINATE.ITEMSPERPAGELABEL');\n    this.nextPageLabel = this.translateService.get('TABLE.PAGINATE.NEXT');\n    this.previousPageLabel = this.translateService.get('TABLE.PAGINATE.PREVIOUS');\n    this.firstPageLabel = this.translateService.get('TABLE.PAGINATE.FIRST');\n    this.lastPageLabel = this.translateService.get('TABLE.PAGINATE.LAST');\n    this.getRangeLabel = this.getORangeLabel;\n\n    this.onLanguageChangeSubscribe = this.translateService.onLanguageChanged.subscribe(res => {\n      this.itemsPerPageLabel = this.translateService.get('TABLE.PAGINATE.ITEMSPERPAGELABEL');\n      this.nextPageLabel = this.translateService.get('TABLE.PAGINATE.NEXT');\n      this.previousPageLabel = this.translateService.get('TABLE.PAGINATE.PREVIOUS');\n      this.firstPageLabel = this.translateService.get('TABLE.PAGINATE.FIRST');\n      this.lastPageLabel = this.translateService.get('TABLE.PAGINATE.LAST');\n      this.getRangeLabel = this.getORangeLabel;\n      this.changes.next();\n    });\n  }\n\n  getORangeLabel(page: number, pageSize: number, length: number): string {\n    if (!isNaN(pageSize) && (length === 0 || pageSize === 0)) {\n      return `0  ${this.translateService.get('TABLE.PAGINATE.RANGE_LABEL')} ${length}`;\n    }\n    length = Math.max(length, 0);\n    let startIndex = page * pageSize;\n    // If the start index exceeds the list length, do not try and fix the end index to the end.\n    let endIndex = startIndex < length ?\n      Math.min(startIndex + pageSize, length) :\n      startIndex + pageSize;\n\n    //option show all\n    if (isNaN(pageSize)) {\n      startIndex = 0;\n      endIndex = length;\n    }\n\n    return `${startIndex + 1} - ${endIndex}  ${this.translateService.get('TABLE.PAGINATE.RANGE_LABEL')} ${length}`;\n  }\n\n}\n"]}
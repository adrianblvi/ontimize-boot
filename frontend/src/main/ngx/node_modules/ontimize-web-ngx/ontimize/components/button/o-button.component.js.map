{"version":3,"file":"o-button.component.js","sourceRoot":"","sources":["../../../../tmp/ontimize/components/button/o-button.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAE,MAAM,iBAAiB,CAAC;AAC/C,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAU,iBAAiB,EAAE,MAAM,eAAe,CAAC;AAC/E,OAAO,EAAE,aAAa,EAAE,MAAM,cAAc,CAAC;AAG7C,MAAM,CAAC,IAAM,uBAAuB,GAAG;IACrC,aAAa;IACb,eAAe;IAEf,aAAa;IAEb,MAAM;IACN,oBAAoB;IACpB,6BAA6B;IAC7B,OAAO;CACR,CAAC;AAEF;IA+FE;QACE,IAAI,CAAC,KAAK,GAAG,gBAAgB,CAAC,YAAY,CAAC;IAC7C,CAAC;IAED,mCAAQ,GAAR;QACE,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;SACvC;IACH,CAAC;IAED,sBAAI,kDAAoB;aAAxB;YACE,OAAO,IAAI,CAAC,IAAI,KAAK,SAAS,IAAI,CAAC,IAAI,CAAC,MAAM,KAAK,SAAS,IAAI,IAAI,CAAC,MAAM,KAAK,EAAE,CAAC,CAAC;QACtF,CAAC;;;OAAA;IAED,gCAAK,GAAL;QACE,OAAO,IAAI,CAAC,KAAK,KAAK,KAAK,CAAC;IAC9B,CAAC;IAED,mCAAQ,GAAR;QACE,OAAO,IAAI,CAAC,KAAK,KAAK,QAAQ,CAAC;IACjC,CAAC;IAED,iCAAM,GAAN;QACE,OAAO,IAAI,CAAC,KAAK,KAAK,MAAM,CAAC;IAC/B,CAAC;IAED,oCAAS,GAAT;QACE,OAAO,CAAC,IAAI,CAAC,KAAK,KAAK,SAAS,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACnD,CAAC;IAED,kCAAO,GAAP;QACE,OAAO,IAAI,CAAC,KAAK,KAAK,OAAO,CAAC;IAChC,CAAC;IAED,oCAAS,GAAT;QACE,OAAO,IAAI,CAAC,KAAK,KAAK,UAAU,CAAC;IACnC,CAAC;IAED,uCAAY,GAAZ;QACE,OAAO,IAAI,CAAC,KAAK,KAAK,MAAM,CAAC;IAC/B,CAAC;IApDa,wCAAuB,GAAG,uBAAuB,CAAC;IAE/C,6BAAY,GAAG,SAAS,CAAC;;gBArF3C,SAAS,SAAC;oBACT,QAAQ,EAAE,MAAM,CAAC,EAAE;oBACnB,QAAQ,EAAE,UAAU;oBACpB,MAAM,EAAE,uBAAuB;oBAC/B,QAAQ,EAAE,64HAoET;oBACD,MAAM,EAAE,CAAC,sHAER,CAAC;oBACF,aAAa,EAAE,iBAAiB,CAAC,IAAI;oBACrC,IAAI,EAAE;wBACJ,kBAAkB,EAAE,MAAM;qBAC3B;iBACF;;;IAwDD,uBAAC;CAAA,AAxID,IAwIC;SAvDY,gBAAgB;AAyD7B;IAAA;IAK6B,CAAC;;gBAL7B,QAAQ,SAAC;oBACR,YAAY,EAAE,CAAC,gBAAgB,CAAC;oBAChC,OAAO,EAAE,CAAC,YAAY,EAAE,aAAa,CAAC;oBACtC,OAAO,EAAE,CAAC,gBAAgB,CAAC;iBAC5B;;IAC4B,oBAAC;CAAA,AAL9B,IAK8B;SAAjB,aAAa","sourcesContent":["import { CommonModule } from '@angular/common';\nimport { Component, NgModule, OnInit, ViewEncapsulation } from '@angular/core';\nimport { OSharedModule } from '../../shared';\n\n\nexport const DEFAULT_INPUTS_O_BUTTON = [\n  'oattr: attr',\n  'olabel: label',\n  // type [BASIC|RAISED|STROKED|FLAT|ICON|FAB|MINI-FAB]: The type of button. Default: STROKED.\n  'otype: type',\n  // icon [string]: Name of google icon (see https://design.google.com/icons/)\n  'icon',\n  'svgIcon : svg-icon',\n  'iconPosition: icon-position',\n  'image'\n];\n\n@Component({\n  moduleId: module.id,\n  selector: 'o-button',\n  inputs: DEFAULT_INPUTS_O_BUTTON,\n  template: `\n    <button type=\"button\" *ngIf=\"isBasic()\" mat-button [class.mat-icon-button]=\"needsIconButtonClass\">\n      <img src=\"{{ image }}\" class=\"o-button-image\" *ngIf=\"image!=undefined\" />\n      <mat-icon class=\"material-icons o-button-icon\" *ngIf=\"icon!==undefined\" style=\"vertical-align:middle\">{{ icon }}\n      </mat-icon>\n      <mat-icon class=\"material-icons o-button-icon\" *ngIf=\"svgIcon!==undefined\" style=\"vertical-align:middle\"\n        [svgIcon]=\"svgIcon\"></mat-icon>\n      <br *ngIf=\"iconPosition==='top'\" />\n      {{ olabel | oTranslate }}\n    </button>\n\n    <button type=\"button\" *ngIf=\"isRaised()\" mat-raised-button class=\"mat-raised-button\"\n      [class.mat-icon-button]=\"needsIconButtonClass\">\n      <img src=\"{{ image }}\" class=\"o-button-image\" *ngIf=\"image!=undefined\" />\n      <mat-icon class=\"material-icons o-button-icon\" *ngIf=\"icon!==undefined\" style=\"vertical-align:middle\">{{ icon }}\n      </mat-icon>\n      <mat-icon class=\"material-icons o-button-icon\" *ngIf=\"svgIcon!==undefined\" style=\"vertical-align:middle\"\n      [svgIcon]=\"svgIcon\"></mat-icon>\n      <br *ngIf=\"iconPosition==='top'\" />\n      {{ olabel | oTranslate }}\n    </button>\n\n    <button type=\"button\" *ngIf=\"isStroked()\" mat-stroked-button [class.mat-icon-button]=\"needsIconButtonClass\">\n      <img src=\"{{ image }}\" class=\"o-button-image\" *ngIf=\"image!=undefined\" />\n      <mat-icon class=\"material-icons o-button-icon\" *ngIf=\"icon!==undefined\" style=\"vertical-align:middle\">{{ icon }}\n      </mat-icon>\n      <mat-icon class=\"material-icons o-button-icon\" *ngIf=\"svgIcon!==undefined\" style=\"vertical-align:middle\"\n      [svgIcon]=\"svgIcon\"></mat-icon>\n      <br *ngIf=\"iconPosition==='top'\" />\n      {{ olabel | oTranslate }}\n    </button>\n\n    <button type=\"button\" *ngIf=\"isFlat()\" mat-flat-button [class.mat-icon-button]=\"needsIconButtonClass\">\n      <img src=\"{{ image }}\" class=\"o-button-image\" *ngIf=\"image!=undefined\" />\n      <mat-icon class=\"material-icons o-button-icon\" *ngIf=\"icon!==undefined\" style=\"vertical-align:middle\">{{ icon }}\n      </mat-icon>\n      <mat-icon class=\"material-icons o-button-icon\" *ngIf=\"svgIcon!==undefined\" style=\"vertical-align:middle\"\n      [svgIcon]=\"svgIcon\"></mat-icon>\n      <br *ngIf=\"iconPosition==='top'\" />\n      {{ olabel | oTranslate }}\n    </button>\n\n    <button type=\"button\" *ngIf=\"isIconButton()\" mat-icon-button [class.mat-icon-button]=\"needsIconButtonClass\">\n      <mat-icon class=\"material-icons o-button-icon\" *ngIf=\"icon!==undefined\" style=\"vertical-align:middle\">{{ icon }}\n      </mat-icon>\n      <mat-icon class=\"material-icons o-button-icon\" *ngIf=\"svgIcon!==undefined\" style=\"vertical-align:middle\"\n      [svgIcon]=\"svgIcon\"></mat-icon>\n    </button>\n\n    <button type=\"button\" *ngIf=\"isFab()\" mat-fab>\n      <img src=\"{{ image }}\" class=\"o-button-image\" *ngIf=\"image!=undefined\" />\n      <mat-icon class=\"material-icons o-button-icon\" *ngIf=\"icon!==undefined\" style=\"vertical-align:middle\">{{ icon }}\n      </mat-icon>\n      <mat-icon class=\"material-icons o-button-icon\" *ngIf=\"svgIcon!==undefined\" style=\"vertical-align:middle\"\n      [svgIcon]=\"svgIcon\"></mat-icon>\n      <br *ngIf=\"iconPosition==='top'\" />\n      {{ olabel | oTranslate }}\n    </button>\n\n    <button type=\"button\" *ngIf=\"isMiniFab()\" mat-mini-fab>\n      <img src=\"{{ image }}\" class=\"o-button-image\" *ngIf=\"image!=undefined\" />\n      <mat-icon class=\"material-icons o-button-icon\" *ngIf=\"icon!==undefined\" style=\"vertical-align:middle\">{{ icon }}\n      </mat-icon>\n      <mat-icon class=\"material-icons o-button-icon\" *ngIf=\"svgIcon!==undefined\" style=\"vertical-align:middle\"\n      [svgIcon]=\"svgIcon\"></mat-icon>\n      <br *ngIf=\"iconPosition==='top'\" />\n      {{ olabel | oTranslate }}\n    </button>\n  `,\n  styles: [`\n    .o-button{display:inline-block}.o-button .mat-icon-button .mat-button-ripple.mat-ripple{border-radius:50%}\n  `],\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    '[class.o-button]': 'true'\n  }\n})\nexport class OButtonComponent implements OnInit {\n\n  public static DEFAULT_INPUTS_O_BUTTON = DEFAULT_INPUTS_O_BUTTON;\n\n  protected static DEFAULT_TYPE = 'STROKED';\n\n  protected oattr: string;\n  olabel: string;\n  protected otype: string;\n  icon: string;\n  svgIcon: string;\n  iconPosition: string; // left (default), top, TODO: right, bottom?\n  image: string;\n\n  constructor() {\n    this.otype = OButtonComponent.DEFAULT_TYPE;\n  }\n\n  ngOnInit(): void {\n    if (this.otype) {\n      this.otype = this.otype.toUpperCase();\n    }\n  }\n\n  get needsIconButtonClass(): boolean {\n    return this.icon !== undefined && (this.olabel === undefined || this.olabel === '');\n  }\n\n  isFab(): boolean {\n    return this.otype === 'FAB';\n  }\n\n  isRaised(): boolean {\n    return this.otype === 'RAISED';\n  }\n\n  isFlat(): boolean {\n    return this.otype === 'FLAT';\n  }\n\n  isStroked(): boolean {\n    return (this.otype === 'STROKED' || !this.otype);\n  }\n\n  isBasic(): boolean {\n    return this.otype === 'BASIC';\n  }\n\n  isMiniFab(): boolean {\n    return this.otype === 'FAB-MINI';\n  }\n\n  isIconButton(): boolean {\n    return this.otype === 'ICON';\n  }\n}\n\n@NgModule({\n  declarations: [OButtonComponent],\n  imports: [CommonModule, OSharedModule],\n  exports: [OButtonComponent]\n})\nexport class OButtonModule { }\n"]}
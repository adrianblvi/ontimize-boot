{"version":3,"file":"o-text-input.component.js","sourceRoot":"","sources":["../../../../../tmp/ontimize/components/input/text-input/o-text-input.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, Inject, Injector, forwardRef, ElementRef, Optional, ViewChild, NgModule, ViewEncapsulation } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Validators } from '@angular/forms';\nimport { ValidatorFn } from '@angular/forms';\nimport { MatInput } from '@angular/material';\n\nimport { OSharedModule } from '../../../shared';\nimport { NumberConverter } from '../../../decorators';\nimport { OFormComponent } from '../../form/o-form.component';\nimport { OFormDataComponent, DEFAULT_INPUTS_O_FORM_DATA_COMPONENT, DEFAULT_OUTPUTS_O_FORM_DATA_COMPONENT } from '../../o-form-data-component.class';\n\nexport const DEFAULT_INPUTS_O_TEXT_INPUT = [\n  ...DEFAULT_INPUTS_O_FORM_DATA_COMPONENT,\n  'minLength: min-length',\n  'maxLength: max-length'\n];\n\nexport const DEFAULT_OUTPUTS_O_TEXT_INPUT = [\n  ...DEFAULT_OUTPUTS_O_FORM_DATA_COMPONENT\n];\n\n@Component({\n  moduleId: module.id,\n  selector: 'o-text-input',\n  template: `\n    <div [formGroup]=\"getFormGroup()\" [matTooltip]=\"tooltip\" [matTooltipClass]=\"tooltipClass\"\n      [matTooltipPosition]=\"tooltipPosition\" [matTooltipShowDelay]=\"tooltipShowDelay\"\n      [matTooltipHideDelay]=\"tooltipHideDelay\">\n      <mat-form-field [appearance]=\"appearance\" [floatLabel]=\"floatLabel\" [hideRequiredMarker]=\"hideRequiredMarker\"\n        [class.custom-width]=\"hasCustomWidth\" [class.icon-field]=\"showClearButton\" fxFlexFill>\n        <mat-label *ngIf=\"labelVisible\">{{ olabel | oTranslate }}</mat-label>\n        <input matInput type=\"text\" [id]=\"getAttribute()\" [formControlName]=\"getAttribute()\" [placeholder]=\"placeHolder\"\n          (focus)=\"innerOnFocus($event)\" (blur)=\"innerOnBlur($event)\" [readonly]=\"isReadOnly\"\n          (change)=\"onChangeEvent($event)\" [required]=\"isRequired\" />\n        <button type=\"button\" *ngIf=\"showClearButton\" matSuffix mat-icon-button (click)=\"onClickClearValue($event)\">\n          <mat-icon svgIcon=\"ontimize:close\"></mat-icon>\n        </button>\n        <mat-error *ngIf=\"hasError('required')\" text=\"{{ 'FORM_VALIDATION.REQUIRED' | oTranslate }}\"></mat-error>\n        <mat-error *ngIf=\"hasError('minlength')\"\n          text=\"{{ 'FORM_VALIDATION.MIN_LENGTH' | oTranslate }}: {{ getErrorValue('minlength', 'requiredLength') }}\">\n        </mat-error>\n        <mat-error *ngIf=\"hasError('maxlength')\"\n          text=\"{{ 'FORM_VALIDATION.MAX_LENGTH' | oTranslate }}: {{ getErrorValue('maxlength', 'requiredLength') }}\">\n        </mat-error>\n        <mat-error *ngFor=\"let oError of getActiveOErrors()\" text=\"{{ oError.text | oTranslate }}\"></mat-error>\n      </mat-form-field>\n    </div>\n  `,\n  styles: [`\n\n  `],\n  inputs: DEFAULT_INPUTS_O_TEXT_INPUT,\n  outputs: DEFAULT_OUTPUTS_O_TEXT_INPUT,\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class OTextInputComponent extends OFormDataComponent {\n\n  public static DEFAULT_INPUTS_O_TEXT_INPUT = DEFAULT_INPUTS_O_TEXT_INPUT;\n  public static DEFAULT_OUTPUTS_O_TEXT_INPUT = DEFAULT_OUTPUTS_O_TEXT_INPUT;\n\n  protected _minLength: number = -1;\n  protected _maxLength: number = -1;\n\n  @ViewChild('matInputRef')\n  protected matInputRef: MatInput;\n\n  constructor(\n    @Optional() @Inject(forwardRef(() => OFormComponent)) form: OFormComponent,\n    elRef: ElementRef,\n    injector: Injector) {\n    super(form, elRef, injector);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n\n  resolveValidators(): ValidatorFn[] {\n    let validators: ValidatorFn[] = super.resolveValidators();\n\n    if (this.minLength >= 0) {\n      validators.push(Validators.minLength(this.minLength));\n    }\n    if (this.maxLength >= 0) {\n      validators.push(Validators.maxLength(this.maxLength));\n    }\n\n    return validators;\n  }\n\n  set minLength(val: number) {\n    const old = this._minLength;\n    this._minLength = NumberConverter(val);\n    if (val !== old) {\n      this.updateValidators();\n    }\n  }\n\n  get minLength(): number {\n    return this._minLength;\n  }\n\n  set maxLength(val: number) {\n    const old = this._maxLength;\n    this._maxLength = NumberConverter(val);\n    if (val !== old) {\n      this.updateValidators();\n    }\n  }\n\n  get maxLength(): number {\n    return this._maxLength;\n  }\n}\n\n@NgModule({\n  declarations: [OTextInputComponent],\n  imports: [OSharedModule, CommonModule],\n  exports: [OTextInputComponent]\n})\nexport class OTextInputModule {\n}\n"]}
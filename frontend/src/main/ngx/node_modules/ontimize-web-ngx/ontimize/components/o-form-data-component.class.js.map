{"version":3,"file":"o-form-data-component.class.js","sourceRoot":"","sources":["../../../tmp/ontimize/components/o-form-data-component.class.ts"],"names":[],"mappings":"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","sourcesContent":["import { AfterViewInit, ContentChildren, ElementRef, EventEmitter, HostBinding, Injector, OnChanges, OnDestroy, OnInit, QueryList, SimpleChange, ViewChildren } from '@angular/core';\nimport { FormControl, FormGroup, ValidatorFn, Validators } from '@angular/forms';\nimport { FloatLabelType, MatFormFieldAppearance, MatSuffix } from '@angular/material';\nimport { Subscription } from 'rxjs';\nimport { OInputsOptions, O_INPUTS_OPTIONS } from '../config/app-config';\nimport { BooleanConverter, InputConverter } from '../decorators';\nimport { OPermissions, PermissionsService } from '../services';\nimport { OMatErrorComponent, OMatErrorOptions, O_MAT_ERROR_OPTIONS } from '../shared/material/o-mat-error/o-mat-error';\nimport { PermissionsUtils } from '../util/permissions';\nimport { Codes, SQLTypes, Util } from '../utils';\nimport { OFormComponent } from './form/o-form.component';\nimport { IFormValueOptions, OFormValue } from './form/OFormValue';\nimport { OFormControl } from './input/o-form-control.class';\nimport { OValidatorComponent } from './input/validation/o-validator.component';\nimport { IComponent, OBaseComponent } from './o-component.class';\n\n\nexport interface IMultipleSelection extends IComponent {\n  getSelectedItems(): any[];\n  setSelectedItems(values: any[]): void;\n}\n\nexport interface IFormDataTypeComponent extends IComponent {\n  getSQLType(): number;\n}\n\nexport interface IFormControlComponent extends IComponent {\n  getControl(): FormControl;\n  getFormControl(): FormControl;\n  hasError(error: string): boolean;\n}\n\nexport interface IFormDataComponent extends IFormControlComponent {\n  onChange: EventEmitter<Object>;\n  onValueChange: EventEmitter<OValueChangeEvent>;\n\n  data(value: any): void;\n  isAutomaticBinding(): boolean;\n  isAutomaticRegistering(): boolean;\n  setValue(val: any, options?: IFormValueOptions): void;\n  clearValue(options?: IFormValueOptions): void;\n  getValue(): any;\n}\n\nexport interface IErrorData {\n  name: string;\n  text: string;\n}\n\nexport class OValueChangeEvent {\n  public static USER_CHANGE = 0;\n  public static PROGRAMMATIC_CHANGE = 1;\n\n  constructor(\n    public type: number,\n    public newValue: any,\n    public oldValue: any,\n    public target: any) { }\n\n  public isUserChange(): boolean {\n    return this.type === OValueChangeEvent.USER_CHANGE;\n  }\n\n  public isProgrammaticChange(): boolean {\n    return this.type === OValueChangeEvent.PROGRAMMATIC_CHANGE;\n  }\n}\n\nexport const DEFAULT_INPUTS_O_FORM_DATA_COMPONENT = [\n  'oattr: attr',\n  'olabel: label',\n  'floatLabel: float-label',\n  'oplaceholder: placeholder',\n  'tooltip',\n  'tooltipPosition: tooltip-position',\n  'tooltipShowDelay: tooltip-show-delay',\n  'tooltipHideDelay: tooltip-hide-delay',\n  'data',\n  'autoBinding: automatic-binding',\n  'autoRegistering: automatic-registering',\n  'enabled',\n  'orequired: required',\n  // sqltype[string]: Data type according to Java standard. See SQLType ngClass. Default: 'OTHER'\n  'sqlType: sql-type',\n  'width',\n  'readOnly: read-only',\n  'clearButton: clear-button',\n  'angularValidatorsFn: validators',\n  'appearance',\n  'hideRequiredMarker:hide-required-marker',\n  'labelVisible:label-visible'\n];\n\nexport const DEFAULT_OUTPUTS_O_FORM_DATA_COMPONENT = [\n  'onChange',\n  'onValueChange',\n  'onFocus',\n  'onBlur'\n];\n\nexport class OFormDataComponent extends OBaseComponent implements IFormDataComponent, IFormDataTypeComponent,\n  OnInit, AfterViewInit, OnDestroy, OnChanges {\n\n  /* Inputs */\n  public sqlType: string;\n  @InputConverter()\n  public autoBinding: boolean = true;\n  @InputConverter()\n  public autoRegistering: boolean = true;\n  public width: string;\n  @InputConverter()\n  public clearButton: boolean = false;\n  public angularValidatorsFn: ValidatorFn[] = [];\n  @InputConverter()\n  public hideRequiredMarker: boolean = false;\n  @InputConverter()\n  public labelVisible: boolean = true;\n\n  /* Outputs */\n  public onChange: EventEmitter<Object> = new EventEmitter<Object>();\n  public onValueChange: EventEmitter<OValueChangeEvent> = new EventEmitter<OValueChangeEvent>();\n  public onFocus: EventEmitter<Object> = new EventEmitter<Object>();\n  public onBlur: EventEmitter<Object> = new EventEmitter<Object>();\n\n  @HostBinding('style.width')\n  get hostWidth(): string {\n    return this.width;\n  }\n\n  /* Internal variables */\n  protected value: OFormValue;\n  protected defaultValue: any = void 0;\n  protected _SQLType: number = SQLTypes.OTHER;\n  protected _defaultSQLTypeKey: string = 'OTHER';\n  protected _fControl: OFormControl;\n  protected _fControlSubscription: Subscription;\n  protected _fGroup: FormGroup;\n  protected elRef: ElementRef;\n  protected form: OFormComponent;\n  protected oldValue: any;\n\n  protected _floatLabel: FloatLabelType;\n  protected _appearance: MatFormFieldAppearance;\n\n  protected matSuffixSubscription: Subscription;\n  @ViewChildren(MatSuffix)\n  protected _matSuffixList: QueryList<MatSuffix>;\n\n  protected errorsData: IErrorData[] = [];\n  protected validatorsSubscription: Subscription;\n  @ContentChildren(OValidatorComponent)\n  protected validatorChildren: QueryList<OValidatorComponent>;\n\n  protected permissionsService: PermissionsService;\n  protected mutationObserver: MutationObserver;\n\n  protected errorOptions: OMatErrorOptions;\n  @ViewChildren(OMatErrorComponent)\n  protected oMatErrorChildren: QueryList<OMatErrorComponent>;\n\n  protected oInputsOptions: OInputsOptions;\n\n  constructor(\n    form: OFormComponent,\n    elRef: ElementRef,\n    injector: Injector\n  ) {\n    super(injector);\n    this.form = form;\n    this.elRef = elRef;\n    this.permissionsService = this.injector.get(PermissionsService);\n    try {\n      this.errorOptions = this.injector.get(O_MAT_ERROR_OPTIONS) || {};\n    } catch (e) {\n      this.errorOptions = {};\n    }\n  }\n\n  public ngOnInit(): void {\n    this.initialize();\n  }\n\n  public ngAfterViewInit(): void {\n    const self = this;\n    if (this._matSuffixList) {\n      this.setSuffixClass(this._matSuffixList.length);\n      this.matSuffixSubscription = this._matSuffixList.changes.subscribe(() => {\n        self.setSuffixClass(self._matSuffixList.length);\n      });\n    }\n\n    if (this.validatorChildren) {\n      this.validatorsSubscription = this.validatorChildren.changes.subscribe(() => {\n        self.updateValidators();\n      });\n      if (this.validatorChildren.length > 0) {\n        this.updateValidators();\n      }\n    }\n    if (!this.enabled) {\n      this.mutationObserver = PermissionsUtils.registerDisabledChangesInDom(this.getMutationObserverTarget(), {\n        callback: this.disableFormControl.bind(this)\n      });\n    }\n    this.addOntimizeCustomAppearanceClass();\n    try {\n      this.oInputsOptions = this.injector.get(O_INPUTS_OPTIONS);\n    } catch (e) {\n      this.oInputsOptions = {};\n    }\n\n    Util.parseOInputsOptions(this.elRef, this.oInputsOptions);\n  }\n\n  public ngOnDestroy(): void {\n    this.destroy();\n  }\n\n  public ngOnChanges(changes: { [propName: string]: SimpleChange }): void {\n    if (Util.isDefined(changes['angularValidatorsFn'])) {\n      this.updateValidators();\n    }\n  }\n\n  public hasEnabledPermission(): boolean {\n    return this.permissions ? this.permissions.enabled : true;\n  }\n\n  public hasVisiblePermission(): boolean {\n    return this.permissions ? this.permissions.visible : true;\n  }\n\n  public getFormGroup(): FormGroup {\n    if (this._fGroup) {\n      return this._fGroup;\n    }\n    let formGroup = this.form ? this.form.formGroup : undefined;\n    if ((!this.hasEnabledPermission() || !this.hasVisiblePermission()) && !this._fGroup) {\n      const group = {};\n      group[this.oattr] = this._fControl;\n      this._fGroup = new FormGroup(group);\n      formGroup = this._fGroup;\n    }\n    return formGroup;\n  }\n\n  public getFormControl(): FormControl {\n    return this._fControl;\n  }\n\n  public hasError(error: string): boolean {\n    return !this.isReadOnly && this._fControl && this._fControl.touched && this._fControl.hasError(error);\n  }\n\n  public getErrorValue(error: string, prop: string): string {\n    return this._fControl && this._fControl.hasError(error) ? this._fControl.getError(error)[prop] || '' : '';\n  }\n\n  public getActiveOErrors(): IErrorData[] {\n    return this.errorsData.filter((item: IErrorData) => this.hasError(item.name));\n  }\n\n  public initialize(): void {\n    super.initialize();\n\n    // ensuring formControl creation\n    this.getControl();\n\n    this.parsePermissions();\n\n    if (!Util.isDefined(this.permissions)) {\n      if (this.form) {\n        this.registerFormListeners();\n        this.isReadOnly = !(this.form.isInUpdateMode() || this.form.isInInsertMode() || this.form.isEditableDetail());\n      } else {\n        this.isReadOnly = !this.enabled;\n      }\n    }\n  }\n\n  public destroy(): void {\n    this.unregisterFormListeners();\n    if (this.matSuffixSubscription) {\n      this.matSuffixSubscription.unsubscribe();\n    }\n    if (this.validatorsSubscription) {\n      this.validatorsSubscription.unsubscribe();\n    }\n    if (this.mutationObserver) {\n      this.mutationObserver.disconnect();\n    }\n    if (this._fControlSubscription) {\n      this._fControlSubscription.unsubscribe();\n    }\n  }\n\n  public registerFormListeners(): void {\n    if (this.form) {\n      this.form.registerFormComponent(this);\n      this.form.registerFormControlComponent(this);\n      this.form.registerSQLTypeFormComponent(this);\n    }\n  }\n\n  public unregisterFormListeners(): void {\n    if (this.form) {\n      this.form.unregisterFormComponent(this);\n      this.form.unregisterFormControlComponent(this);\n      this.form.unregisterSQLTypeFormComponent(this);\n    }\n  }\n\n  set data(value: any) {\n    this.setData(value);\n  }\n\n  public setData(newValue: any): void {\n    // emit OValueChangeEvent.PROGRAMMATIC_CHANGE when assign value to data\n    // this method skips the following permissions checking because the form is\n    // setting its query result using it\n    const previousValue = this.oldValue;\n    this.setFormValue(newValue);\n    this.emitOnValueChange(OValueChangeEvent.PROGRAMMATIC_CHANGE, newValue, previousValue);\n  }\n\n  public isAutomaticBinding(): boolean {\n    return this.autoBinding;\n  }\n\n  public isAutomaticRegistering(): boolean {\n    return this.autoRegistering;\n  }\n\n  public getValue(): any {\n    if (this.value instanceof OFormValue) {\n      if (this.value.value !== undefined) {\n        return this.value.value;\n      }\n    }\n    return this.defaultValue;\n  }\n\n  public setValue(val: any, options: IFormValueOptions = {}, setDirty: boolean = false): void {\n    if (!PermissionsUtils.checkEnabledPermission(this.permissions)) {\n      return;\n    }\n    if (this.oldValue !== val) {\n      const newValue = val;\n      const previousValue = this.oldValue;\n      this.setFormValue(val, options, setDirty);\n      if (options && options.emitModelToViewValueChange !== false) {\n        const changeType: number = (options && options.hasOwnProperty('changeType')) ? options.changeType : OValueChangeEvent.PROGRAMMATIC_CHANGE;\n        this.emitOnValueChange(changeType, newValue, previousValue);\n      }\n    }\n  }\n\n  /**\n   * Clears the component value.\n   */\n  public clearValue(options?: IFormValueOptions, setDirty: boolean = false): void {\n    if (!PermissionsUtils.checkEnabledPermission(this.permissions)) {\n      return;\n    }\n    this.setValue(void 0, options, setDirty);\n  }\n\n  public onClickClearValue(event: Event): void {\n    event.stopPropagation();\n    event.preventDefault();\n    this.clearValue({ changeType: OValueChangeEvent.USER_CHANGE }, true);\n  }\n\n  /* This method is called in output change event, not emit event onValueChange when oldvalue is same than newvalue*/\n  public onChangeEvent(arg: any): void {\n    const value = this.getValue();\n    if (this.oldValue !== value) {\n      const previousValue = this.oldValue;\n      this.oldValue = value;\n      this.emitOnValueChange(OValueChangeEvent.USER_CHANGE, value, previousValue);\n    }\n  }\n\n  get showClearButton(): boolean {\n    return this.clearButton && !this.isReadOnly && this.enabled && this.getValue();\n  }\n\n  public onFormControlChange(value: any): void {\n    // equivalente al innerOnChange\n    if (!this.value) {\n      this.value = new OFormValue();\n    }\n    this.ensureOFormValue(value);\n    this.onChange.emit(value);\n  }\n\n  public ensureOFormValue(arg: any): void {\n    if (arg instanceof OFormValue) {\n      this.value = arg;\n    } else if (Util.isDefined(arg) && !(arg instanceof OFormValue)) {\n      const val: OFormValue = this.value || new OFormValue();\n      val.value = arg;\n      this.value = val;\n    } else {\n      this.value = new OFormValue(this.defaultValue);\n    }\n  }\n\n  /**\n   * This method should overwritten in the child component when it have addicional form control or other oFormDataComponent\n   */\n  public createFormControl(cfg?, validators?): OFormControl {\n    return new OFormControl(cfg, {\n      validators: validators\n    }, null);\n  }\n\n  public getControl(): FormControl {\n    if (!this._fControl) {\n      const validators: ValidatorFn[] = this.resolveValidators();\n      const cfg = {\n        value: this.value ? this.value.value : undefined,\n        disabled: !this.enabled\n      };\n      this._fControl = this.createFormControl(cfg, validators);\n      this.registerOnFormControlChange();\n    }\n    return this._fControl;\n  }\n\n  public resolveValidators(): ValidatorFn[] {\n    const validators: ValidatorFn[] = [];\n    this.angularValidatorsFn.forEach((fn: ValidatorFn) => {\n      validators.push(fn);\n    });\n    if (this.orequired) {\n      validators.push(Validators.required);\n    }\n    return validators;\n  }\n\n  public getSQLType(): number {\n    const sqlt = this.sqlType && this.sqlType.length > 0 ? this.sqlType : this._defaultSQLTypeKey;\n    this._SQLType = SQLTypes.getSQLTypeValue(sqlt);\n    return this._SQLType;\n  }\n\n  get isValid(): boolean {\n    if (this._fControl) {\n      return this._fControl.valid;\n    }\n    return false;\n  }\n\n  public isEmpty(): boolean {\n    if (this.value instanceof OFormValue) {\n      if (this.value.value !== undefined) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  public setEnabled(value: boolean): void {\n    super.setEnabled(value);\n    if (this.hasVisiblePermission()) {\n      if (this._fControl && value) {\n        this._fControl.enable();\n      } else if (this._fControl) {\n        this._fControl.disable();\n      }\n    }\n  }\n\n  get elementRef(): ElementRef {\n    return this.elRef;\n  }\n\n  get hasCustomWidth(): boolean {\n    return this.width !== undefined;\n  }\n\n  get orequired(): boolean {\n    return this._orequired;\n  }\n\n  set orequired(val: boolean) {\n    const old = this._orequired;\n    this._orequired = BooleanConverter(val);\n    if (val !== old) {\n      this.updateValidators();\n    }\n  }\n\n  public innerOnFocus(event: any): void {\n    if (!this.isReadOnly && this.enabled) {\n      this.onFocus.emit(event);\n    }\n  }\n\n  public innerOnBlur(event: any): void {\n    if (!this.isReadOnly && this.enabled) {\n      this.onBlur.emit(event);\n    }\n  }\n\n  get appearance(): MatFormFieldAppearance {\n    return this._appearance;\n  }\n\n  set appearance(value: MatFormFieldAppearance) {\n    const values = ['legacy', 'standard', 'fill', 'outline'];\n    if (values.indexOf(value) === -1) {\n      value = undefined;\n    }\n    this._appearance = value;\n  }\n\n  get floatLabel(): FloatLabelType {\n    if (!this.labelVisible) {\n      this.floatLabel = 'never';\n    }\n    return this._floatLabel;\n  }\n\n  set floatLabel(value: FloatLabelType) {\n    const values = ['always', 'never', 'auto'];\n    if (values.indexOf(value) === -1) {\n      value = 'auto';\n    }\n    this._floatLabel = value;\n  }\n\n  protected registerOnFormControlChange(): void {\n    const self = this;\n    if (this._fControl) {\n      this._fControlSubscription = this._fControl.valueChanges.subscribe(value => {\n        self.onFormControlChange(value);\n      });\n    }\n  }\n\n  protected emitOnValueChange(type, newValue, oldValue): void {\n    const event = new OValueChangeEvent(type, newValue, oldValue, this);\n    this.onValueChange.emit(event);\n  }\n\n  protected setFormValue(val: any, options?: IFormValueOptions, setDirty: boolean = false): void {\n    this.ensureOFormValue(val);\n    if (this._fControl) {\n      this._fControl.setValue(this.value.value, options);\n      if (setDirty) {\n        this._fControl.markAsDirty();\n      }\n      if (this._fControl.invalid && !this.form.isInInsertMode()) {\n        this._fControl.markAsTouched();\n      }\n    }\n    this.oldValue = this.value.value;\n  }\n\n  protected updateValidators(): void {\n    if (!this._fControl) {\n      return;\n    }\n    const self = this;\n    this._fControl.clearValidators();\n    this.errorsData = [];\n    const validators = this.resolveValidators();\n    if (this.validatorChildren) {\n      this.validatorChildren.forEach((oValidator: OValidatorComponent) => {\n        const validatorFunction: ValidatorFn = oValidator.getValidatorFn();\n        if (validatorFunction) {\n          validators.push(validatorFunction);\n        }\n        const errorsData: IErrorData[] = oValidator.getErrorsData();\n        self.errorsData.push(...errorsData);\n      });\n    }\n    this._fControl.setValidators(validators);\n  }\n\n  protected addOntimizeCustomAppearanceClass(): void {\n    try {\n      if (this.elRef) {\n        const matFormFieldEl = this.elRef.nativeElement.getElementsByTagName('mat-form-field');\n        if (matFormFieldEl && matFormFieldEl.length === 1) {\n          matFormFieldEl.item(0).classList.add('mat-form-field-appearance-ontimize');\n        }\n      }\n    } catch (e) {\n      //\n    }\n  }\n\n  protected getTooltipClass(): string {\n    const liteError = this.errorOptions.type === Codes.O_MAT_ERROR_LITE;\n    if (!liteError) {\n      return super.getTooltipClass();\n    }\n    const errorClass = Util.isDefined(this._fControl.errors) ? 'o-mat-error' : '';\n    return `${super.getTooltipClass()} ${errorClass}`;\n  }\n\n  protected getTooltipText(): string {\n    const liteError = this.errorOptions.type === Codes.O_MAT_ERROR_LITE;\n    if (liteError && Util.isDefined(this._fControl.errors) && this.oMatErrorChildren && this.oMatErrorChildren.length > 0) {\n      let result: string = '';\n      this.oMatErrorChildren.forEach((oMatError: OMatErrorComponent) => {\n        result += `${oMatError.text}\\n`;\n      });\n      return result;\n    }\n    return super.getTooltipText();\n  }\n\n  protected parsePermissions(): void {\n    // if oattr in form, it can have permissions\n    if (!this.form || !Util.isDefined(this.form.oattr)) {\n      return;\n    }\n    const permissions: OPermissions = this.form.getFormComponentPermissions(this.oattr);\n    if (!Util.isDefined(permissions)) {\n      return;\n    }\n    if (permissions.visible === false) {\n      /* hide input per permissions */\n      this.elRef.nativeElement.remove();\n      this.destroy();\n    } else if (permissions.enabled === false) {\n      /* disable input per permissions */\n      this.enabled = false;\n      if (this.form) {\n        this.form.registerFormComponent(this);\n      }\n    }\n    this.permissions = permissions;\n  }\n\n  protected getMutationObserverTarget(): any {\n    let result;\n    try {\n      result = this.elementRef.nativeElement.getElementsByTagName('input').item(0);\n    } catch (error) {\n      //\n    }\n    return result;\n  }\n\n  protected setSuffixClass(count: number): void {\n    const iconFieldEl = this.elRef.nativeElement.getElementsByClassName('icon-field');\n    if (iconFieldEl.length === 1) {\n      const classList = [].slice.call(iconFieldEl[0].classList);\n      classList.forEach(className => {\n        if (className.startsWith('icon-field-')) {\n          iconFieldEl[0].classList.remove(className);\n        }\n      });\n      if (count > 0) {\n        const matSuffixClass = `icon-field-${count}-suffix`;\n        iconFieldEl[0].classList.add(matSuffixClass);\n      }\n    }\n  }\n\n  /**\n   * Do not allow the disabled attribute to change by code or by inspector\n   */\n  private disableFormControl(): void {\n    const control = this.getFormControl();\n    control.disable({\n      onlySelf: true,\n      emitEvent: false\n    });\n  }\n\n}\n"]}
{"version":3,"file":"o-password-input.component.js","sourceRoot":"","sources":["../../../../../tmp/ontimize/components/input/password-input/o-password-input.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,EACL,SAAS,EAAE,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,UAAU,EACnD,QAAQ,EACR,QAAQ,EACR,iBAAiB,EAClB,MAAM,eAAe,CAAC;AAEvB,OAAO,EAAE,YAAY,EAAE,MAAM,iBAAiB,CAAC;AAC/C,OAAO,EAAE,aAAa,EAAE,MAAM,iBAAiB,CAAC;AAChD,OAAO,EAAE,cAAc,EAAE,MAAM,6BAA6B,CAAC;AAC7D,OAAO,EACL,gBAAgB,EAChB,mBAAmB,EACnB,2BAA2B,EAC3B,4BAA4B,EAC7B,MAAM,sCAAsC,CAAC;AAE9C,MAAM,CAAC,IAAM,+BAA+B,GACvC,2BAA2B,QAC/B,CAAC;AAEF,MAAM,CAAC,IAAM,gCAAgC,GACxC,4BAA4B,QAChC,CAAC;AAEF;IAmC6C,2CAAmB;IAK9D,iCACwD,IAAoB,EAC1E,KAAiB,EACjB,QAAkB;eAClB,kBAAM,IAAI,EAAE,KAAK,EAAE,QAAQ,CAAC;IAC9B,CAAC;IARa,uDAA+B,GAAG,+BAA+B,CAAC;IAClE,wDAAgC,GAAG,gCAAgC,CAAC;;gBAtCnF,SAAS,SAAC;oBACT,QAAQ,EAAE,MAAM,CAAC,EAAE;oBACnB,QAAQ,EAAE,kBAAkB;oBAC5B,QAAQ,EAAE,60DAwBT;oBACD,MAAM,EAAE,CAAC,QAER,CAAC;oBACF,MAAM,EAAE,+BAA+B;oBACvC,OAAO,EAAE,gCAAgC;oBACzC,aAAa,EAAE,iBAAiB,CAAC,IAAI;iBACtC;;;gBAlDQ,cAAc,uBAyDlB,QAAQ,YAAI,MAAM,SAAC,UAAU,CAAC,cAAM,OAAA,cAAc,EAAd,CAAc,CAAC;gBAjEb,UAAU;gBAAhC,QAAQ;;IAuE7B,8BAAC;CAAA,AA/CD,CAmC6C,mBAAmB,GAY/D;SAZY,uBAAuB;AAcpC;IAAA;IAMA,CAAC;;gBANA,QAAQ,SAAC;oBACR,YAAY,EAAE,CAAC,uBAAuB,CAAC;oBACvC,OAAO,EAAE,CAAC,aAAa,EAAE,YAAY,EAAE,gBAAgB,CAAC;oBACxD,OAAO,EAAE,CAAC,uBAAuB,EAAE,gBAAgB,CAAC;iBACrD;;IAED,2BAAC;CAAA,AAND,IAMC;SADY,oBAAoB","sourcesContent":["import {\n  Component, Inject, Injector, forwardRef, ElementRef, OnInit,\n  Optional,\n  NgModule,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { OSharedModule } from '../../../shared';\nimport { OFormComponent } from '../../form/o-form.component';\nimport {\n  OTextInputModule,\n  OTextInputComponent,\n  DEFAULT_INPUTS_O_TEXT_INPUT,\n  DEFAULT_OUTPUTS_O_TEXT_INPUT\n} from '../text-input/o-text-input.component';\n\nexport const DEFAULT_INPUTS_O_PASSWORD_INPUT = [\n  ...DEFAULT_INPUTS_O_TEXT_INPUT\n];\n\nexport const DEFAULT_OUTPUTS_O_PASSWORD_INPUT = [\n  ...DEFAULT_OUTPUTS_O_TEXT_INPUT\n];\n\n@Component({\n  moduleId: module.id,\n  selector: 'o-password-input',\n  template: `\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" [formGroup]=\"getFormGroup()\" [matTooltip]=\"tooltip\"\n      [matTooltipClass]=\"tooltipClass\" [matTooltipPosition]=\"tooltipPosition\" [matTooltipShowDelay]=\"tooltipShowDelay\"\n      [matTooltipHideDelay]=\"tooltipHideDelay\">\n      <mat-form-field [appearance]=\"appearance\" [floatLabel]=\"floatLabel\" [hideRequiredMarker]=\"hideRequiredMarker\"\n        [class.custom-width]=\"hasCustomWidth\" class=\"icon-field\" fxFlexFill>\n        <mat-label *ngIf=\"labelVisible\">{{ olabel | oTranslate }}</mat-label>\n        <input matInput type=\"password\" [id]=\"getAttribute()\" [formControlName]=\"getAttribute()\" [placeholder]=\"placeHolder\"\n          (focus)=\"innerOnFocus($event)\" (blur)=\"innerOnBlur($event)\" (change)=\"onChangeEvent($event)\"\n          [readonly]=\"isReadOnly\" [required]=\"isRequired\">\n        <button type=\"button\" *ngIf=\"showClearButton\" matSuffix mat-icon-button (click)=\"onClickClearValue($event)\">\n          <mat-icon svgIcon=\"ontimize:close\"></mat-icon>\n        </button>\n        <mat-icon matSuffix [class.mat-disabled]=\"!enabled\" svgIcon=\"ontimize:vpn_key\"></mat-icon>\n        <mat-error *ngIf=\"hasError('required')\" text=\"{{ 'FORM_VALIDATION.REQUIRED' | oTranslate }}\"></mat-error>\n        <mat-error *ngIf=\"hasError('minlength')\"\n          text=\"{{ 'FORM_VALIDATION.MIN_LENGTH' | oTranslate }}: {{ getErrorValue('minlength', 'requiredLength') }}\">\n        </mat-error>\n        <mat-error *ngIf=\"hasError('maxlength')\"\n          text=\"{{ 'FORM_VALIDATION.MAX_LENGTH' | oTranslate }}: {{ getErrorValue('maxlength', 'requiredLength') }}\">\n        </mat-error>\n        <mat-error *ngFor=\"let oError of getActiveOErrors()\" text=\"{{ oError.text | oTranslate }}\"></mat-error>\n      </mat-form-field>\n    </div>\n  `,\n  styles: [`\n\n  `],\n  inputs: DEFAULT_INPUTS_O_PASSWORD_INPUT,\n  outputs: DEFAULT_OUTPUTS_O_PASSWORD_INPUT,\n  encapsulation: ViewEncapsulation.None\n})\nexport class OPasswordInputComponent extends OTextInputComponent implements OnInit {\n\n  public static DEFAULT_INPUTS_O_PASSWORD_INPUT = DEFAULT_INPUTS_O_PASSWORD_INPUT;\n  public static DEFAULT_OUTPUTS_O_PASSWORD_INPUT = DEFAULT_OUTPUTS_O_PASSWORD_INPUT;\n\n  constructor(\n    @Optional() @Inject(forwardRef(() => OFormComponent)) form: OFormComponent,\n    elRef: ElementRef,\n    injector: Injector) {\n    super(form, elRef, injector);\n  }\n\n}\n\n@NgModule({\n  declarations: [OPasswordInputComponent],\n  imports: [OSharedModule, CommonModule, OTextInputModule],\n  exports: [OPasswordInputComponent, OTextInputModule]\n})\nexport class OPasswordInputModule {\n}\n"]}
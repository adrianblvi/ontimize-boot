{"version":3,"file":"o-date-input.component.js","sourceRoot":"","sources":["../../../../../tmp/ontimize/components/input/date-input/o-date-input.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { AfterViewChecked, Component, ElementRef, Inject, Injector, NgModule, OnDestroy, OnInit, Optional, ViewChild, forwardRef } from '@angular/core';\nimport { DEFAULT_INPUTS_O_TEXT_INPUT, DEFAULT_OUTPUTS_O_TEXT_INPUT } from '../text-input/o-text-input.component';\nimport { DateAdapter, MAT_DATE_LOCALE, MatDatepicker, MatDatepickerInput, MatDatepickerInputEvent } from '@angular/material';\nimport { IFormValueOptions, OFormValue } from '../../form/OFormValue';\nimport { MediaChange, ObservableMedia } from '@angular/flex-layout';\nimport { OFormDataComponent, OValueChangeEvent } from '../../o-form-data-component.class';\nimport { OSharedModule, OntimizeMomentDateAdapter } from '../../../shared';\n\nimport { CommonModule } from '@angular/common';\nimport { InputConverter } from '../../../decorators';\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\nimport { MomentService } from '../../../services';\nimport { OFormComponent } from '../../form/o-form.component';\nimport { SQLTypes } from '../../../util/sqltypes';\nimport { Subscription } from 'rxjs';\nimport { Util } from '../../../util/util';\nimport moment from 'moment';\n\nexport type ODateValueType = 'string' | 'date' | 'timestamp' | 'iso-8601';\n\nexport const DEFAULT_OUTPUTS_O_DATE_INPUT = [\n  ...DEFAULT_OUTPUTS_O_TEXT_INPUT\n];\n\nexport const DEFAULT_INPUTS_O_DATE_INPUT = [\n  'oformat: format',\n  'olocale: locale',\n  'oStartView: start-view',\n  'oMinDate: min',\n  'oMaxDate: max',\n  'oTouchUi: touch-ui',\n  'oStartAt: start-at',\n  'filterDate: filter-date',\n  'textInputEnabled: text-input-enabled',\n  'valueType: value-type',\n  ...DEFAULT_INPUTS_O_TEXT_INPUT\n];\n\nexport type DateFilterFunction = (date: Date) => boolean;\n\n@Component({\n  moduleId: module.id,\n  selector: 'o-date-input',\n  template: `\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" [formGroup]=\"getFormGroup()\" [matTooltip]=\"tooltip\"\n      [matTooltipClass]=\"tooltipClass\" [matTooltipPosition]=\"tooltipPosition\" [matTooltipShowDelay]=\"tooltipShowDelay\"\n      [matTooltipHideDelay]=\"tooltipHideDelay\" (click)=\"onClickInput($event)\">\n      <mat-form-field [appearance]=\"appearance\" [floatLabel]=\"floatLabel\" [hideRequiredMarker]=\"hideRequiredMarker\"\n        [class.custom-width]=\"hasCustomWidth\" class=\"icon-field\" fxFlexFill>\n        <mat-label *ngIf=\"labelVisible\">{{ olabel | oTranslate }}</mat-label>\n        <input matInput #matInputRef [matDatepicker]=\"d\" [id]=\"getAttribute()\" [formControlName]=\"getAttribute()\"\n          [placeholder]=\"placeHolder\" [readonly]=\"isReadOnly || !textInputEnabled\" (focus)=\"innerOnFocus($event)\"\n          (blur)=\"innerOnBlur($event)\" [matDatepickerFilter]=\"filterDate\" (dateChange)=\"onChangeEvent($event)\"\n          [required]=\"isRequired\" [value]=\"getValueAsDate()\">\n\n        <button type=\"button\" *ngIf=\"showClearButton\" matSuffix mat-icon-button (click)=\"onClickClearValue($event)\">\n          <mat-icon svgIcon=\"ontimize:close\"></mat-icon>\n        </button>\n        <mat-datepicker-toggle matSuffix [disabled]=\"isReadOnly || !enabled\" [class.read-only]=\"isReadOnly\" [for]=\"d\">\n          <mat-icon matDatepickerToggleIcon>today</mat-icon>\n        </mat-datepicker-toggle>\n        <mat-datepicker #d [disabled]=\"isReadOnly || !enabled\"></mat-datepicker>\n        <mat-error *ngIf=\"hasError('required')\" text=\"{{ 'FORM_VALIDATION.REQUIRED' | oTranslate }}\"></mat-error>\n        <mat-error *ngIf=\"hasError('matDatepickerParse')\"\n          text=\"{{ 'FORM_VALIDATION.DATE_PARSE' | oTranslate }} {{ oformat }}\"></mat-error>\n        <mat-error *ngIf=\"hasError('matDatepickerFilter')\" text=\"{{ 'FORM_VALIDATION.DATE_FILTER' | oTranslate }}\">\n        </mat-error>\n        <mat-error *ngIf=\"hasError('matDatepickerMin')\"\n          text=\"{{ 'FORM_VALIDATION.DATE_MIN' | oTranslate }} {{ minDateString }}\"></mat-error>\n        <mat-error *ngIf=\"hasError('matDatepickerMax')\"\n          text=\"{{ 'FORM_VALIDATION.DATE_MAX' | oTranslate }} {{ maxDateString }}\"></mat-error>\n        <mat-error *ngFor=\"let oError of getActiveOErrors()\" text=\"{{ oError.text | oTranslate }}\"></mat-error>\n      </mat-form-field>\n    </div>\n  `,\n  styles: ['./o-date-input.component.scss'],\n  outputs: DEFAULT_OUTPUTS_O_DATE_INPUT,\n  inputs: DEFAULT_INPUTS_O_DATE_INPUT,\n  providers: [\n    { provide: DateAdapter, useClass: OntimizeMomentDateAdapter, deps: [MAT_DATE_LOCALE] }\n  ]\n})\nexport class ODateInputComponent extends OFormDataComponent implements AfterViewChecked, OnDestroy, OnInit {\n\n  @ViewChild(MatDatepicker)\n  public datepicker: MatDatepicker<Date>;\n\n  @ViewChild(MatDatepickerInput)\n  public datepickerInput: MatDatepickerInput<Date>;\n\n  @InputConverter()\n  public textInputEnabled: boolean = true;\n  protected _oformat: string = 'L';\n  protected olocale: string;\n  protected updateLocaleOnChange: boolean = false;\n  protected oStartView: 'month' | 'year' = 'month';\n  protected oMinDate: string;\n  protected oMaxDate: string;\n  @InputConverter()\n  protected oTouchUi: boolean;\n  protected oStartAt: string;\n  protected _filterDate: DateFilterFunction;\n  protected _valueType: ODateValueType = 'timestamp';\n\n  protected _minDateString: string;\n  protected _maxDateString: string;\n\n  protected media: ObservableMedia;\n  protected mediaSubscription: Subscription;\n  protected onLanguageChangeSubscription: Subscription;\n  protected dateValue: Date;\n\n  @ViewChild('matInputRef')\n  private matInputRef: ElementRef;\n\n  private momentSrv: MomentService;\n  private momentDateAdapter: DateAdapter<MomentDateAdapter>;\n\n  constructor(\n    @Optional() @Inject(forwardRef(() => OFormComponent)) form: OFormComponent,\n    dateAdapter: DateAdapter<OntimizeMomentDateAdapter>,\n    elRef: ElementRef,\n    injector: Injector\n  ) {\n    super(form, elRef, injector);\n    this.momentDateAdapter = dateAdapter;\n    this._defaultSQLTypeKey = 'DATE';\n    this.momentSrv = this.injector.get(MomentService);\n    this.media = this.injector.get(ObservableMedia);\n  }\n\n  public static convertToODateValueType(val: any): ODateValueType {\n    let result: ODateValueType = 'timestamp';\n    const lowerVal = (val || '').toLowerCase();\n    if (lowerVal === 'string' || lowerVal === 'date' || lowerVal === 'timestamp' || lowerVal === 'iso-8601') {\n      result = lowerVal;\n    }\n    return result;\n  }\n\n  public ngOnInit(): void {\n    this.initialize();\n\n    if (!this.olocale) {\n      this.updateLocaleOnChange = true;\n      this.olocale = this.momentSrv.getLocale();\n    }\n\n    if (this.oformat) {\n      (this.momentDateAdapter as any).oFormat = this.oformat;\n    }\n\n    this.momentDateAdapter.setLocale(this.olocale);\n\n    if (this.oStartView) {\n      this.datepicker.startView = this.oStartView;\n    }\n\n    if (this.oStartAt) {\n      this.datepicker.startAt = new Date(this.oStartAt);\n    }\n\n    if (this.oMinDate) {\n      const date = new Date(this.oMinDate);\n      const momentD = moment(date);\n      if (momentD.isValid()) {\n        this.datepickerInput.min = date;\n        this.minDateString = momentD.format(this.oformat);\n      }\n    }\n\n    if (this.oMaxDate) {\n      const date = new Date(this.oMaxDate);\n      const momentD = moment(date);\n      if (momentD.isValid()) {\n        this.datepickerInput.max = date;\n        this.maxDateString = momentD.format(this.oformat);\n      }\n    }\n\n    if (this.updateLocaleOnChange) {\n      this.onLanguageChangeSubscription = this.translateService.onLanguageChanged.subscribe(() => {\n        this.momentDateAdapter.setLocale(this.translateService.getCurrentLang());\n        this.setValue(this.getValue());\n      });\n    }\n  }\n\n  public ngAfterViewChecked(): void {\n    this.mediaSubscription = this.media.subscribe((change: MediaChange) => {\n      if (['xs', 'sm'].indexOf(change.mqAlias) !== -1) {\n        this.touchUi = Util.isDefined(this.oTouchUi) ? this.oTouchUi : true;\n      }\n      if (['md', 'lg', 'xl'].indexOf(change.mqAlias) !== -1) {\n        this.touchUi = Util.isDefined(this.oTouchUi) ? this.oTouchUi : false;\n      }\n    });\n  }\n\n  public ngOnDestroy(): void {\n    super.ngOnDestroy();\n    if (this.mediaSubscription) {\n      this.mediaSubscription.unsubscribe();\n    }\n    if (this.onLanguageChangeSubscription) {\n      this.onLanguageChangeSubscription.unsubscribe();\n    }\n  }\n\n  public getValueAsDate(): any {\n    return this.dateValue;\n  }\n\n  public getValue(): any {\n    let timestampValue = super.getValue();\n    if (timestampValue && timestampValue instanceof Date) {\n      timestampValue = timestampValue.getTime();\n    }\n    return timestampValue;\n  }\n\n  get showClearButton(): boolean {\n    return this.clearButton && !this.isReadOnly && this.enabled && this.matInputRef.nativeElement.value;\n  }\n\n  public open(): void {\n    if (!this.isReadOnly && this.enabled) {\n      this.datepicker.open();\n    }\n  }\n\n  public onChangeEvent(event: MatDatepickerInputEvent<any>): void {\n    const isValid = event.value && event.value.isValid && event.value.isValid();\n    let val = isValid ? event.value.valueOf() : event.value;\n    const m = moment(val);\n    switch (this.valueType) {\n      case 'string':\n        if (val) {\n          val = m.format(this.oformat);\n        }\n        break;\n      case 'date':\n        val = new Date(val);\n        break;\n      case 'iso-8601':\n        val = m.toISOString();\n        break;\n      case 'timestamp':\n      default:\n        break;\n    }\n    this.setValue(val, {\n      changeType: OValueChangeEvent.USER_CHANGE,\n      emitEvent: false,\n      emitModelToViewChange: false\n    });\n  }\n\n  public onClickInput(e: Event): void {\n    if (!this.textInputEnabled) {\n      this.open();\n    }\n  }\n\n  get filterDate(): DateFilterFunction {\n    return this._filterDate;\n  }\n\n  set filterDate(val: DateFilterFunction) {\n    this._filterDate = val;\n  }\n\n  get oformat(): string {\n    return this._oformat;\n  }\n\n  set oformat(val: string) {\n    this._oformat = val;\n  }\n\n  get minDateString(): string {\n    return this._minDateString;\n  }\n\n  set minDateString(val: string) {\n    this._minDateString = val;\n  }\n\n  get maxDateString(): string {\n    return this._maxDateString;\n  }\n\n  set maxDateString(val: string) {\n    this._maxDateString = val;\n  }\n\n  get touchUi(): boolean {\n    return this.oTouchUi || false;\n  }\n\n  set touchUi(val: boolean) {\n    this.oTouchUi = val;\n    this.datepicker.touchUi = this.touchUi;\n  }\n\n  protected ensureODateValueType(val: any): void {\n    if (!Util.isDefined(val)) {\n      return val;\n    }\n    let result = val;\n    switch (this.valueType) {\n      case 'string':\n        if (typeof val === 'string') {\n          const m = moment(val, this.oformat);\n          if (m.isValid()) {\n            this.dateValue = new Date(m.valueOf());\n          }\n        } else {\n          result = undefined;\n        }\n        break;\n      case 'date':\n        if ((val instanceof Date)) {\n          this.dateValue = val;\n        } else {\n          result = undefined;\n        }\n        break;\n      case 'timestamp':\n        if (typeof val === 'number') {\n          this.dateValue = new Date(val);\n        } else {\n          result = undefined;\n        }\n        break;\n      case 'iso-8601':\n        if (typeof val !== 'string') {\n          const acceptTimestamp = typeof val === 'number' && this.getSQLType() === SQLTypes.TIMESTAMP;\n          if (acceptTimestamp) {\n            this.dateValue = new Date(val);\n          } else {\n            result = undefined;\n          }\n        } else {\n          const m = moment(val);\n          if (m.isValid()) {\n            this.dateValue = new Date(m.valueOf());\n          } else {\n            result = undefined;\n          }\n        }\n        break;\n      default:\n        break;\n    }\n    if (!Util.isDefined(result)) {\n      console.warn(`ODateInputComponent value (${val}) is not consistent with value-type (${this.valueType})`);\n    }\n    return result;\n  }\n\n  protected setFormValue(val: any, options?: IFormValueOptions, setDirty: boolean = false): void {\n    let value = val;\n    if (val instanceof OFormValue) {\n      value = val.value;\n    }\n    value = this.ensureODateValueType(value);\n    super.setFormValue(value, options, setDirty);\n  }\n\n  set valueType(val: any) {\n    this._valueType = ODateInputComponent.convertToODateValueType(val);\n  }\n\n  get valueType(): any {\n    return this._valueType;\n  }\n\n}\n\n@NgModule({\n  declarations: [ODateInputComponent],\n  imports: [CommonModule, OSharedModule],\n  exports: [ODateInputComponent]\n})\nexport class ODateInputModule { }\n"]}
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Component, ElementRef, EventEmitter, forwardRef, Inject, Injector, NgModule, Optional, Renderer2, ViewEncapsulation } from '@angular/core';
import { CommonModule } from '@angular/common';
import { Util } from '../../../util/util';
import { OSharedModule } from '../../../shared';
import { InputConverter } from '../../../decorators';
import { OListItemComponent } from '../list-item/o-list-item.component';
import { OListItemCardRenderer } from './o-list-item-card-renderer.class';
export var DEFAULT_INPUTS_O_LIST_ITEM_CARD_IMAGE = OListItemCardRenderer.DEFAULT_INPUTS_O_CARD_RENDERER.concat([
    'avatar'
]);
export var DEFAULT_OUTPUTS_O_LIST_ITEM_CARD_IMAGE = OListItemCardRenderer.DEFAULT_OUTPUTS_O_CARD_RENDERER.slice();
var OListItemCardImageComponent = (function (_super) {
    __extends(OListItemCardImageComponent, _super);
    function OListItemCardImageComponent(elRef, _renderer, _injector, _listItem) {
        var _this = _super.call(this, elRef, _renderer, _injector, _listItem) || this;
        _this._collapsible = false;
        _this._collapsed = true;
        _this.onIconClick = new EventEmitter();
        return _this;
    }
    OListItemCardImageComponent.prototype.ngAfterViewInit = function () {
        this.modifyMatListItemElement();
    };
    OListItemCardImageComponent.prototype.onActionIconClick = function (e) {
        if (Util.isDefined(e)) {
            e.stopPropagation();
        }
        this.onIconClick.emit(event);
    };
    Object.defineProperty(OListItemCardImageComponent.prototype, "content", {
        get: function () {
            return this._content;
        },
        set: function (val) {
            this._content = val;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(OListItemCardImageComponent.prototype, "avatar", {
        get: function () {
            return this._avatar;
        },
        set: function (val) {
            this._avatar = val;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(OListItemCardImageComponent.prototype, "icon", {
        get: function () {
            return this._icon;
        },
        set: function (val) {
            this._icon = val;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(OListItemCardImageComponent.prototype, "collapsible", {
        get: function () {
            return this._collapsible;
        },
        set: function (val) {
            this._collapsible = val;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(OListItemCardImageComponent.prototype, "collapsed", {
        get: function () {
            return this._collapsed;
        },
        set: function (val) {
            this._collapsed = val;
        },
        enumerable: true,
        configurable: true
    });
    OListItemCardImageComponent.decorators = [
        { type: Component, args: [{
                    moduleId: module.id,
                    selector: 'o-list-item-card-image',
                    template: "\n    <mat-card fxLayout=\"column\" fxLayoutAlign=\"center center\" class=\"o-item-card\" [class.small]=\"compareListHeight('small')\"\n      [class.medium]=\"compareListHeight('medium')\" [class.large]=\"compareListHeight('large')\">\n\n      <mat-card-header *ngIf=\"avatar !== undefined\">\n        <img matCardAvatar src=\"{{ avatar }}\">\n        <mat-card-title *ngIf=\"title !== undefined\"> {{ title }}</mat-card-title>\n        <mat-card-subtitle *ngIf=\"subtitle !== undefined\"> {{ subtitle }}</mat-card-subtitle>\n      </mat-card-header>\n\n      <img *ngIf=\"image !== undefined\" matCardImage src=\"{{ image }}\" [class.exists-action-button]=\"icon !== undefined\">\n\n      <button type=\"button\" *ngIf=\"icon !== undefined && compareListHeight('small')\" mat-mini-fab (click)=\"onActionIconClick($event)\" class=\"action-button\">\n        <mat-icon>{{ icon }}</mat-icon>\n      </button>\n\n      <button type=\"button\" *ngIf=\"icon !== undefined && (compareListHeight('medium') || compareListHeight('large'))\" mat-fab (click)=\"onActionIconClick($event)\"\n        class=\"action-button\">\n        <mat-icon>{{ icon }}</mat-icon>\n      </button>\n\n      <mat-card-title *ngIf=\"avatar === undefined && title !== undefined\"> {{ title }}</mat-card-title>\n      <mat-card-subtitle *ngIf=\"avatar === undefined && subtitle !== undefined\"> {{ subtitle }}</mat-card-subtitle>\n\n      <mat-card-content *ngIf=\"!collapsible\">\n        <p>\n          {{ content }}\n        </p>\n      </mat-card-content>\n\n      <mat-card-actions>\n        <button type=\"button\" mat-button *ngIf=\"action1Text !== undefined\" (click)=\"onAction1ButtonClick($event)\">{{ action1Text }}</button>\n        <button type=\"button\" mat-button *ngIf=\"action2Text !== undefined\" (click)=\"onAction2ButtonClick($event)\">{{ action2Text }}</button>\n\n        <div class=\"collapse-button-container\">\n          <button type=\"button\" mat-icon-button *ngIf=\"collapsible\" (click)=\"collapsed = !collapsed\" class=\"collapse-button\">\n            <mat-icon *ngIf=\"collapsed\" svgIcon=\"ontimize:keyboard_arrow_down\"></mat-icon>\n            <mat-icon *ngIf=\"!collapsed\" svgIcon=\"ontimize:keyboard_arrow_up\"></mat-icon>\n          </button>\n        </div>\n      </mat-card-actions>\n\n      <mat-card-content *ngIf=\"collapsible && !collapsed\">\n        <p>\n          {{ content }}\n        </p>\n      </mat-card-content>\n\n    </mat-card>\n  ",
                    styles: ["\n    .mat-list .mat-list-item.o-card-item,.mat-list .mat-list-item.o-card-item .mat-list-item-content{height:auto}.o-list-item-card-image{padding:8px 0}.o-list-item-card-image .mat-card mat-card-actions,.o-list-item-card-image .mat-card mat-card-header,.o-list-item-card-image .mat-card mat-card-subtitle,.o-list-item-card-image .mat-card mat-card-title{width:100%}.o-list-item-card-image .mat-card.large{width:100%}.o-list-item-card-image .mat-card.medium{width:80%;margin-left:auto;margin-right:auto}.o-list-item-card-image .mat-card.small{width:60%;margin-left:auto;margin-right:auto}.o-list-item-card-image .mat-card.small img.exists-action-button{margin-bottom:-20px}.o-list-item-card-image .mat-card:not(.small):not(.medium):not(.large){width:100%}.o-list-item-card-image .mat-card .action-button{margin-left:auto}.o-list-item-card-image .mat-card img.exists-action-button{margin-bottom:-28px}.o-list-item-card-image .mat-card .collapse-button-container{-webkit-flex:1 1 auto;-ms-flex:1 1 auto;flex:1 1 auto;position:relative}.o-list-item-card-image .mat-card .collapse-button-container .collapse-button{margin-left:calc(100% - 40px)}\n  "],
                    inputs: DEFAULT_INPUTS_O_LIST_ITEM_CARD_IMAGE.concat([
                        'content',
                        'avatar',
                        'icon',
                        'collapsible',
                        'collapsed'
                    ]),
                    outputs: DEFAULT_OUTPUTS_O_LIST_ITEM_CARD_IMAGE.concat([
                        'onIconClick : icon-action'
                    ]),
                    encapsulation: ViewEncapsulation.None,
                    host: {
                        '[class.o-custom-list-item]': 'true',
                        '[class.o-list-item-card-image]': 'true'
                    }
                },] },
    ];
    OListItemCardImageComponent.ctorParameters = function () { return [
        { type: ElementRef },
        { type: Renderer2 },
        { type: Injector },
        { type: OListItemComponent, decorators: [{ type: Optional }, { type: Inject, args: [forwardRef(function () { return OListItemComponent; }),] }] }
    ]; };
    __decorate([
        InputConverter(),
        __metadata("design:type", Boolean)
    ], OListItemCardImageComponent.prototype, "_collapsible", void 0);
    __decorate([
        InputConverter(),
        __metadata("design:type", Boolean)
    ], OListItemCardImageComponent.prototype, "_collapsed", void 0);
    return OListItemCardImageComponent;
}(OListItemCardRenderer));
export { OListItemCardImageComponent };
var OListItemCardImageModule = (function () {
    function OListItemCardImageModule() {
    }
    OListItemCardImageModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [OListItemCardImageComponent],
                    imports: [CommonModule, OSharedModule],
                    exports: [OListItemCardImageComponent]
                },] },
    ];
    return OListItemCardImageModule;
}());
export { OListItemCardImageModule };
//# sourceMappingURL=o-list-item-card-image.component.js.map
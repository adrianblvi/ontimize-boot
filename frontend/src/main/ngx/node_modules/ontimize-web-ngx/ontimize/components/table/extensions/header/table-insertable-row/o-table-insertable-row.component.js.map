{"version":3,"file":"o-table-insertable-row.component.js","sourceRoot":"","sources":["../../../../../../../tmp/ontimize/components/table/extensions/header/table-insertable-row/o-table-insertable-row.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { ChangeDetectionStrategy, Component, ComponentFactoryResolver, EventEmitter, Inject, Injector, OnInit, forwardRef } from '@angular/core';\nimport { FormControl, ValidatorFn, Validators } from '@angular/forms';\nimport { OColumn, OTableComponent } from '../../../o-table.component';\nimport { OPermissions, OTranslateService, SnackBarService } from '../../../../../services';\nimport { Observable, ObservableWrapper, Util } from '../../../../../utils';\n\nimport { InputConverter } from '../../../../../decorators';\nimport { OBaseTableCellEditor } from '../../../column/cell-editor/cell-editor';\n\nexport const DEFAULT_INPUTS_O_TABLE_INSERTABLE_ROW = [\n  // columns [string]: columns that can be inserted, separated by ';'. Default: all visible columns.\n  'columns',\n  'requiredColumns : required-columns',\n  // position [first |last ] default: last\n  'position',\n  'showPlaceHolder: show-placeholder',\n  'includeParentKeys: include-parent-keys'\n];\n\nexport const DEFAULT_OUTPUTS_O_TABLE_INSERTABLE_ROW = [\n  'onPostInsertRecord'\n];\n\n@Component({\n  moduleId: module.id,\n  selector: 'o-table-insertable-row',\n  template: ' ',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: DEFAULT_INPUTS_O_TABLE_INSERTABLE_ROW,\n  outputs: DEFAULT_OUTPUTS_O_TABLE_INSERTABLE_ROW\n})\n\nexport class OTableInsertableRowComponent implements OnInit {\n\n  public static DEFAULT_INPUTS_O_TABLE_INSERTABLE_ROW = DEFAULT_INPUTS_O_TABLE_INSERTABLE_ROW;\n  public static DEFAULT_OUTPUTS_O_TABLE_INSERTABLE_ROW = DEFAULT_OUTPUTS_O_TABLE_INSERTABLE_ROW;\n  public static AVAILABLE_ROW_POSITIONS = ['first', 'last'];\n  public static DEFAULT_ROW_POSITION = 'last';\n\n  protected columns: string;\n  protected columnsArray: Array<string> = [];\n\n  protected requiredColumns: string;\n  protected requiredColumnsArray: Array<string> = [];\n\n  onPostInsertRecord: EventEmitter<any> = new EventEmitter();\n  columnEditors: any = {};\n  trWrapper: EventTarget;\n\n  protected position: string = OTableInsertableRowComponent.DEFAULT_ROW_POSITION;\n\n  @InputConverter()\n  showPlaceHolder: boolean = false;\n  @InputConverter()\n  includeParentKeys: boolean = true;\n\n  enabled = true;\n  rowData = {};\n  protected controls: any = {};\n  translateService: OTranslateService;\n  snackBarService: SnackBarService;\n\n  constructor(\n    protected injector: Injector,\n    @Inject(forwardRef(() => OTableComponent)) protected table: OTableComponent,\n    protected resolver: ComponentFactoryResolver\n  ) {\n    this.translateService = this.injector.get(OTranslateService);\n    this.snackBarService = this.injector.get(SnackBarService);\n  }\n\n  ngOnInit() {\n    this.columnsArray = Util.parseArray(this.columns, true);\n    if (this.columnsArray.length === 0) {\n      this.columnsArray = this.table.oTableOptions.visibleColumns;\n    }\n    this.requiredColumnsArray = Util.parseArray(this.requiredColumns, true);\n    if (OTableInsertableRowComponent.AVAILABLE_ROW_POSITIONS.indexOf((this.position || '').toLowerCase()) === -1) {\n      this.position = OTableInsertableRowComponent.DEFAULT_ROW_POSITION;\n    }\n    this.table.setOTableInsertableRow(this);\n  }\n\n  isFirstRow(): boolean {\n    return this.position === 'first';\n  }\n\n  isColumnInsertable(column: OColumn): boolean {\n    return (this.columnsArray.indexOf(column.attr) !== -1);\n  }\n\n  isColumnRequired(column: OColumn): boolean {\n    return (this.requiredColumnsArray.indexOf(column.attr) !== -1);\n  }\n\n  initializeEditors(): void {\n    const self = this;\n    this.table.oTableOptions.columns.forEach((col, i, array) => {\n      if (self.isColumnInsertable(col)) {\n        const columnEditorType = col.editor ? col.editor.type : col.type;\n        if (col.definition) {\n          const editor: OBaseTableCellEditor = col.definition.buildCellEditor(columnEditorType, this.resolver, col.definition.container, col.definition);\n          this.columnEditors[col.attr] = editor;\n          let disabledCol = !this.enabled;\n          if (!disabledCol) {\n            const columnPermissions: OPermissions = this.table.getOColumnPermissions(col.attr);\n            disabledCol = columnPermissions.enabled === false;\n          }\n          editor.enabled = !disabledCol;\n          editor.showPlaceHolder = this.showPlaceHolder || editor.showPlaceHolder;\n          editor.table = self.table;\n          editor.tableColumn = col.editor ? col.editor.tableColumn : col.definition;\n          editor.orequired = this.isColumnRequired(col);\n          editor.formControl = this.getControl(col, disabledCol);\n          editor.controlArgs = { silent: true };\n          editor.rowData = self.rowData;\n          editor.startEdition(self.rowData);\n          editor.formControl.markAsUntouched();\n          col.editor = editor;\n        }\n      }\n      array[i] = col;\n    });\n  }\n\n  useCellEditor(column: OColumn): boolean {\n    return this.isColumnInsertable(column) && Util.isDefined(this.columnEditors[column.attr]);\n  }\n\n  getControl(column: OColumn, disabled: boolean = false): FormControl {\n    if (!this.controls[column.attr]) {\n      const validators: ValidatorFn[] = this.resolveValidators(column);\n      const cfg = {\n        value: undefined,\n        disabled: disabled\n      };\n      this.controls[column.attr] = new FormControl(cfg, validators);\n    }\n    return this.controls[column.attr];\n  }\n\n  resolveValidators(column: OColumn): ValidatorFn[] {\n    let validators: ValidatorFn[] = [];\n    if (this.isColumnRequired(column)) {\n      validators.push(Validators.required);\n    }\n    return validators;\n  }\n\n  getPlaceholder(column: OColumn): string {\n    let showPlaceHolder = this.showPlaceHolder;\n    const cellEditor = this.columnEditors[column.attr];\n    if (cellEditor) {\n      showPlaceHolder = cellEditor.showPlaceHolder;\n    } else if (column.definition) {\n      showPlaceHolder = showPlaceHolder || column.definition.showPlaceHolder;\n    }\n    return showPlaceHolder ? this.translateService.get(column.title) : undefined;\n  }\n\n  handleKeyboardEvent(event: KeyboardEvent) {\n    if (event.keyCode !== 13) {\n      // not intro\n      return;\n    }\n    this.trWrapper = event.currentTarget;\n\n    event.preventDefault();\n    event.stopPropagation();\n    this.insertRecord();\n  }\n\n  insertRecord() {\n    const self = this;\n    if (!this.validateFields()) {\n      // this.table.showDialogError('TABLE.ROW_VALIDATION_ERROR');\n      return;\n    }\n    let values = this.getAttributesValuesToInsert();\n    const insertObservable: Observable<any> = this.table.insertRecord(values);\n    if (insertObservable) {\n      insertObservable.subscribe(res => {\n        self.onInsertSuccess(res);\n      }, error => {\n        self.table.showDialogError(error, 'MESSAGES.ERROR_INSERT');\n      });\n    }\n  }\n\n  protected validateFields(): boolean {\n    let valid = true;\n    // columns with no editor defined\n    Object.keys(this.controls).forEach((controlKey) => {\n      const control = this.controls[controlKey];\n      control.markAsTouched();\n      valid = valid && control.valid;\n    });\n    return valid;\n  }\n\n  protected getAttributesValuesToInsert(): Object {\n    let attrValues = {};\n    if (this.includeParentKeys) {\n      attrValues = this.table.getParentKeysValues();\n    }\n    Object.keys(this.controls).forEach((controlKey) => {\n      attrValues[controlKey] = this.controls[controlKey].value;\n    });\n    return attrValues;\n  }\n\n  protected onInsertSuccess(res: any) {\n    ObservableWrapper.callEmit(this.onPostInsertRecord, res);\n    this.snackBarService.open('MESSAGES.INSERTED', { icon: 'check_circle' });\n    this.cleanFields();\n\n    if (this.table.daoTable.usingStaticData) {\n      this.table.setDataArray(res);\n    } else {\n      this.table.reloadData();\n    }\n  }\n\n  protected cleanFields() {\n    // columns with no editor defined\n    const controlKeys = Object.keys(this.controls);\n    controlKeys.forEach((controlKey) => {\n      this.controls[controlKey].setValue(void 0);\n    });\n    let firstInputEl = (this.trWrapper as any).querySelector('input');\n    if (firstInputEl) {\n      setTimeout(() => {\n        firstInputEl.focus();\n      });\n    }\n  }\n\n  columnHasError(column: OColumn, error: string): boolean {\n    const control = this.controls[column.attr];\n    return control && control.touched && control.hasError(error);\n  }\n\n}\n"]}
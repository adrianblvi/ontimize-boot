{"version":3,"file":"o-file-uploader.class.js","sourceRoot":"","sources":["../../../../../tmp/ontimize/components/input/file-input/o-file-uploader.class.ts"],"names":[],"mappings":"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","sourcesContent":["import { Subscription } from 'rxjs';\n\nimport { OntimizeFileService } from '../../../services';\nimport { Codes } from '../../../utils';\nimport { OFileItem } from './o-file-item.class';\n\nexport class OFileUploader {\n\n  public entity: string;\n  public files: OFileItem[] = [];\n  public isUploading: boolean = false;\n  public progress: number = 0;\n  public nextIndex: number = 0;\n  public splitUpload: boolean = true;\n  public data: Object;\n\n  protected _uploadSuscription: Subscription;\n\n  constructor(\n    protected service: OntimizeFileService,\n    entity: string\n  ) {\n    this.entity = entity;\n  }\n\n  public addFile(fileItem: OFileItem): void {\n    this.files.push(fileItem);\n    this.progress = this._getTotalProgress();\n  }\n\n  /**\n   * Cancels the upload of all files and remove them from the file list.\n   */\n  clear(): void {\n    this.cancel();\n    while (this.files.length) {\n      this.files[0].remove();\n    }\n    this.progress = 0;\n  }\n\n  /**\n   * Removes a file from the file list, it cancels upload if needed.\n   * @param value the file to remove\n   */\n  removeFile(value: any): void {\n    let index = this.getIndexOfItem(value);\n    let item = this.files[index];\n    if (item) {\n      if (item.isUploading) {\n        item.cancel();\n      }\n      this.files.splice(index, 1);\n      this.progress = this._getTotalProgress();\n    }\n  }\n\n  public upload(): void {\n    this.files.map((item: OFileItem) => {\n      if (item.pendingUpload) {\n        item.prepareToUpload();\n      }\n    });\n    if (this.splitUpload) {\n      this.files.map((item: OFileItem) => {\n        if (item.pendingUpload) {\n          this.uploadItem(item);\n        }\n      });\n    } else {\n      this.uploadItems(this.files);\n    }\n  }\n\n  /**\n   * Uploads a single file on a single request.\n   * @param item the file to upload\n   */\n  public uploadItem(item: OFileItem): void {\n    item.prepareToUpload();\n    if (this.isUploading || item.isUploading) {\n      return;\n    }\n    this.isUploading = true;\n    item.isUploading = true;\n\n    this._onBeforeUploadItem(item);\n\n    if (this.service === undefined) {\n      console.warn('No service configured! aborting upload');\n      return;\n    }\n    if (this._uploadSuscription) {\n      this._uploadSuscription.unsubscribe();\n    }\n\n    var self = this;\n    this._uploadSuscription = item._uploadSuscription = this.service.upload([item], this.entity, this.data).subscribe(\n      resp => {\n        if (resp.loaded && resp.total) {\n          let progress = Math.round(resp.loaded * 100 / resp.total);\n          self._onProgressItem(item, progress);\n        } else if (resp.code === Codes.ONTIMIZE_SUCCESSFUL_CODE) {\n          self._onSuccessItem(item, resp);\n        } else {\n          console.error('uploadItem error');\n          self._onErrorItem(item, 'Unknow error');\n        }\n      },\n      err => self._onErrorItem(item, err),\n      () => self._onCompleteItem(item)\n    );\n  }\n\n  /**\n   * Upload a set of files on a single request.\n   * @param items the array of files to upload\n   */\n  public uploadItems(items: OFileItem[]): void {\n    if (this.isUploading || items.some(item => item.isUploading)) {\n      return;\n    }\n    this.isUploading = true;\n\n    this._onBeforeUploadAll();\n\n    if (this.service === undefined) {\n      console.warn('No service configured! aborting upload');\n      return;\n    }\n    if (this._uploadSuscription) {\n      this._uploadSuscription.unsubscribe();\n    }\n\n    var self = this;\n    this._uploadSuscription = this.service.upload(items, this.entity, this.data).subscribe(resp => {\n      if (resp.loaded && resp.total) {\n        let progress = Math.round(resp.loaded * 100 / resp.total);\n        self._onProgressAll(progress);\n      } else if (resp.code === Codes.ONTIMIZE_SUCCESSFUL_CODE) {\n        self._onSuccessAll(resp);\n      } else {\n        console.error('uploadItems error');\n      }\n    },\n      err => self._onErrorAll(err),\n      () => self._onCompleteAll()\n    );\n  }\n\n  /**\n   * Cancels the upload of all files.\n   */\n  public cancel(): void {\n    if (this.splitUpload) {\n      this.files.map(item => item.cancel());\n    } else {\n      if (this._uploadSuscription) {\n        this._uploadSuscription.unsubscribe();\n      }\n      this._onCancelAll();\n      this._onCompleteAll();\n    }\n  }\n\n  /**\n   * Cancels the the file upload.\n   * @param value the file to cancel its upload\n   */\n  public cancelItem(value: OFileItem): void {\n    let index = this.getIndexOfItem(value);\n    let item = this.files[index];\n    if (item && item.isUploading && this.splitUpload) {\n      item._uploadSuscription.unsubscribe();\n    }\n    this._onCancelItem(item);\n    this._onCompleteItem(item);\n  }\n\n  public getNotUploadedItems(): OFileItem[] {\n    return this.files.filter((item: OFileItem) => !item.isUploaded);\n  }\n\n  public getIndexOfItem(value: any): number {\n    return typeof value === 'number' ? value : this.files.indexOf(value);\n  }\n\n  public onBeforeUploadItem(fileItem: OFileItem): any {\n    return { fileItem };\n  }\n\n  public onBeforeUploadAll(): any {\n    return {};\n  }\n\n  public onProgressItem(fileItem: OFileItem, progress: any): any {\n    return { fileItem, progress };\n  }\n\n  public onProgressAll(progress: any): any {\n    return { progress };\n  }\n\n  public onCancelItem(fileItem: OFileItem): any {\n    return { fileItem };\n  }\n\n  public onCancelAll(): any {\n    return {};\n  }\n\n  public onSuccessItem(fileItem: OFileItem, response: any): any {\n    return { fileItem, response };\n  }\n\n  public onSuccessAll(response: any): any {\n    return { response };\n  }\n\n  public onErrorItem(fileItem: OFileItem, error: any): any {\n    return { fileItem, error };\n  }\n\n  public onErrorAll(error: any): any {\n    return { error };\n  }\n\n  public onCompleteItem(fileItem: OFileItem): any {\n    return { fileItem };\n  }\n\n  public onCompleteAll(): any {\n    return void 0;\n  }\n\n  protected _onBeforeUploadItem(item: OFileItem): void {\n    item._onBeforeUpload();\n    this.onBeforeUploadItem(item);\n  }\n\n  protected _onBeforeUploadAll(): void {\n    this.files.map(item => item._onBeforeUpload(false));\n    this.onBeforeUploadAll();\n  }\n\n  protected _onProgressItem(item: OFileItem, progress: number): void {\n    let total = this._getTotalProgress(progress);\n    this.progress = total;\n    item._onProgress(progress);\n    this.onProgressItem(item, progress);\n    this.onProgressAll(total);\n  }\n\n  protected _onProgressAll(progress: number): void {\n    let total = this._getTotalProgress(progress);\n    this.progress = total;\n    this.onProgressAll(total);\n  }\n\n  protected _onSuccessItem(item: OFileItem, response: any): void {\n    item._onSuccess(response);\n    this.onSuccessItem(item, response);\n  }\n\n  protected _onSuccessAll(response: any): void {\n    this.files.map(item => item._onSuccess(response, false));\n    this.onSuccessAll(response);\n  }\n\n  protected _onErrorItem(item: OFileItem, error: any): void {\n    item._onError(error);\n    this.onErrorItem(item, error);\n  }\n\n  protected _onErrorAll(error: any): void {\n    this.files.map(item => item._onError(error, false));\n    this.onErrorAll(error);\n  }\n\n  protected _onCancelItem(item: OFileItem): void {\n    item._onCancel();\n    this.onCancelItem(item);\n  }\n\n  protected _onCancelAll(): void {\n    this.files.map(item => item._onCancel(false));\n    this.onCancelAll();\n  }\n\n  protected _onCompleteItem(item: OFileItem): void {\n    item._onComplete();\n    this.onCompleteItem(item);\n    let nextItem = this._getReadyItems()[0];\n    this.isUploading = false;\n    if (nextItem) {\n      nextItem.upload();\n      return;\n    }\n    this.onCompleteAll();\n    this.progress = this._getTotalProgress();\n  }\n\n  protected _onCompleteAll(): void {\n    this.files.map(item => item._onComplete(false));\n    this.isUploading = false;\n    this.onCompleteAll();\n    this.progress = this._getTotalProgress();\n  }\n\n  protected _getReadyItems(): OFileItem[] {\n    return this.files\n      .filter((item: OFileItem) => (item.isReady && !item.isUploading))\n      .sort((item1: OFileItem, item2: OFileItem) => item1.index - item2.index);\n  }\n\n  protected _getTotalProgress(value: number = 0): number {\n    let notUploaded = this.getNotUploadedItems().length;\n    let uploaded = notUploaded ? this.files.length - notUploaded : this.files.length;\n    let ratio = this.splitUpload ? 100 / this.files.length : 100;\n    let current = value * ratio / 100;\n    return Math.round(uploaded * ratio + current);\n  }\n\n}\n"]}
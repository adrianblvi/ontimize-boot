import { InjectionToken } from '@angular/core';
import { MenuRootItem } from '../services';
import { ORemoteConfiguration } from '../types';
export declare const O_INPUTS_OPTIONS: InjectionToken<OInputsOptions>;
export declare type OInputsColor = 'primary' | 'accent';
export interface OInputsOptions {
    iconColor?: OInputsColor;
}
export declare const APP_CONFIG: InjectionToken<Config>;
export declare type OntimizePermissionsConfig = {
    entity: string;
    keyColumn: string;
    valueColumn: string;
};
export declare type OntimizeEEPermissionsConfig = {
    service?: string;
};
export interface Config {
    apiEndpoint?: string;
    bundle?: {
        endpoint?: string;
        path?: string;
    };
    remoteConfig?: ORemoteConfiguration;
    startSessionPath?: string;
    uuid?: string;
    title: string;
    locale?: string;
    assets?: {
        i18n?: {
            path?: string;
            extension?: string;
        };
        css?: string;
        images?: string;
        js?: string;
    };
    applicationLocales?: string[];
    serviceType?: any;
    servicesConfiguration?: Object;
    appMenuConfiguration?: MenuRootItem[];
    permissionsConfiguration?: OntimizePermissionsConfig | OntimizeEEPermissionsConfig;
    permissionsServiceType?: any;
}
export declare class AppConfig {
    private _config;
    constructor(config?: any);
    getConfiguration(): Config;
    getServiceConfiguration(): any;
    getMenuConfiguration(): MenuRootItem[];
    useRemoteBundle(): boolean;
    getBundleEndpoint(): string;
    getI18nAssetsConfiguration(): any;
    getCssAssetsConfiguration(): any;
    getImagesAssetsConfiguration(): any;
    getJsAssetsConfiguration(): any;
    getRemoteConfigurationConfig(): ORemoteConfiguration;
    useRemoteConfiguration(): boolean;
    getRemoteConfigurationEndpoint(): string;
}

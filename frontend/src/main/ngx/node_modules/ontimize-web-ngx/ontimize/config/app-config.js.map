{"version":3,"file":"app-config.js","sourceRoot":"","sources":["../../../tmp/ontimize/config/app-config.ts"],"names":[],"mappings":"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","sourcesContent":["import { InjectionToken } from '@angular/core';\n\nimport { MenuRootItem } from '../services';\nimport { ORemoteConfiguration } from '../types';\nimport { Util } from '../utils';\n\nconst DEFAULT_LOCAL_STORAGE_KEY = undefined;\nconst DEFAULT_CONFIG: Config = {\n  uuid: DEFAULT_LOCAL_STORAGE_KEY,\n  title: 'Ontimize Web App'\n};\n\nexport const O_INPUTS_OPTIONS = new InjectionToken<OInputsOptions>('o-inputs-options');\n\nexport type OInputsColor = 'primary' | 'accent';\n\nexport interface OInputsOptions {\n  iconColor?: OInputsColor;\n}\n\nexport const APP_CONFIG = new InjectionToken<Config>('app.config');\n\nexport type OntimizePermissionsConfig = {\n  entity: string;\n  keyColumn: string;\n  valueColumn: string;\n};\n\nexport type OntimizeEEPermissionsConfig = {\n  service?: string;\n};\n\nexport interface Config {\n  // apiEndpoint [string]: The base path of the URL used by app services.\n  apiEndpoint?: string;\n\n  bundle?: {\n    // endpoint [string]: The base path of the URL used by bundle service.\n    endpoint?: string;\n    // path [string]: The path of the URL to remote bundle method.\n    path?: string;\n  };\n\n  /** Remote configuration storage parameter */\n  remoteConfig?: ORemoteConfiguration;\n\n  // startSessionPath [string]: The path of the URL to startsession method.\n  startSessionPath?: string;\n\n  // uuid [string]: Application identifier. Is the unique package identifier of the app. It is used when storing or managing temporal data related with the app. By default is set as 'ontimize-web-uuid'./\n  uuid?: string;\n\n  // title [string]: Title of the app. By default 'Ontimize Web App'.\n  title: string;\n\n  // locale [string][en|es]: Language of the application. By default 'en'\n  locale?: string;\n\n  // locale [string]: Location of application translation assets. Default 'assets/i18n/'\n  assets?: {\n    i18n?: {\n      path?: string;\n      extension?: string;\n    }\n    css?: string;\n    images?: string;\n    js?: string;\n  };\n\n  applicationLocales?: string[];\n\n  // serviceType [ undefined | '' | class ]: The service type used (Ontimize REST standart, Ontimize REST JEE or custom implementation) in the whole application. By default 'undefined', that is, Ontimize REST standard service.\n  serviceType?: any;\n\n  // servicesConfiguration: [Object]: Configuration parameters of application services.\n  servicesConfiguration?: Object;\n\n  // appMenuConfiguration?: MenuGroup[];\n  appMenuConfiguration?: MenuRootItem[];\n\n  // permissionsConfiguration [Object]: Configuration parameters of application permissions.\n  permissionsConfiguration?: OntimizePermissionsConfig | OntimizeEEPermissionsConfig;\n\n  // permissionsServiceType [ undefined | '' | class ]: The permissions service type used (Ontimize REST standart 'OntimizePermissions', Ontimize REST JEE 'OntimizeEEPermissions' or custom implementation) in the whole application. By default 'OntimizePermissions'.\n  permissionsServiceType?: any;\n}\n\nexport class AppConfig {\n  private _config: Config;\n\n  constructor(config?) {\n    this._config = (config && Util.isObject(config) && !Array.isArray(config)) ? config : {};\n  }\n\n  public getConfiguration(): Config {\n    return Object.assign(DEFAULT_CONFIG, this._config);\n  }\n\n  public getServiceConfiguration(): any {\n    return this._config.servicesConfiguration || {};\n  }\n\n  public getMenuConfiguration(): MenuRootItem[] {\n    return this._config.appMenuConfiguration || [];\n  }\n\n  public useRemoteBundle(): boolean {\n    return Util.isDefined(this._config.bundle);\n  }\n\n  public getBundleEndpoint(): string {\n    let result: string;\n    const existsBundleConf = this.useRemoteBundle();\n    if (existsBundleConf && Util.isDefined(this._config.bundle.endpoint)) {\n      result = this._config.bundle.endpoint;\n    } else if (existsBundleConf && Util.isDefined(this._config.bundle.path)) {\n      result = this._config.apiEndpoint + '/' + this._config.bundle.path;\n    }\n    return result;\n  }\n\n  public getI18nAssetsConfiguration(): any {\n    if (Util.isDefined(this._config.assets) && Util.isDefined(this._config.assets.i18n)) {\n      return this._config.assets.i18n;\n    }\n    return undefined;\n  }\n\n  public getCssAssetsConfiguration(): any {\n    if (Util.isDefined(this._config.assets) && Util.isDefined(this._config.assets.css)) {\n      return this._config.assets.css;\n    }\n    return undefined;\n  }\n\n  public getImagesAssetsConfiguration(): any {\n    if (Util.isDefined(this._config.assets) && Util.isDefined(this._config.assets.images)) {\n      return this._config.assets.images;\n    }\n    return undefined;\n  }\n\n  public getJsAssetsConfiguration(): any {\n    if (Util.isDefined(this._config.assets) && Util.isDefined(this._config.assets.js)) {\n      return this._config.assets.js;\n    }\n    return undefined;\n  }\n\n  public getRemoteConfigurationConfig(): ORemoteConfiguration {\n    return this._config.remoteConfig;\n  }\n\n  public useRemoteConfiguration(): boolean {\n    return Util.isDefined(this._config.remoteConfig);\n  }\n\n  public getRemoteConfigurationEndpoint(): string {\n    let result: string;\n    const existsRemoteConf = this.useRemoteConfiguration();\n    if (existsRemoteConf && Util.isDefined(this._config.remoteConfig.endpoint)) {\n      result = this._config.remoteConfig.endpoint;\n    } else if (existsRemoteConf && Util.isDefined(this._config.remoteConfig.path)) {\n      result = this._config.apiEndpoint + '/' + this._config.remoteConfig.path;\n    }\n    return result;\n  }\n\n}\n"]}
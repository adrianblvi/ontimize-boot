{"version":3,"file":"o-percentage.pipe.js","sourceRoot":"","sources":["../../../tmp/ontimize/pipes/o-percentage.pipe.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,EAAE,IAAI,EAAiB,QAAQ,EAAE,MAAM,eAAe,CAAC;AAC9D,OAAO,EAAE,SAAS,EAAE,MAAM,eAAe,CAAC;AAc1C;IAGkC,gCAAS;IAEzC,sBAAsB,QAAkB;QAAxC,YACE,kBAAM,QAAQ,CAAC,SAChB;QAFqB,cAAQ,GAAR,QAAQ,CAAU;;IAExC,CAAC;IAED,gCAAS,GAAT,UAAU,IAAY,EAAE,IAA0B;QAChD,OAAO,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IACxD,CAAC;;gBAXF,IAAI,SAAC;oBACJ,IAAI,EAAE,UAAU;iBACjB;;;gBAjB6B,QAAQ;;IA4BtC,mBAAC;CAAA,AAbD,CAGkC,SAAS,GAU1C;SAVY,YAAY","sourcesContent":["import { Pipe, PipeTransform, Injector } from '@angular/core';\nimport { ORealPipe } from './o-real.pipe';\n\nexport type OPercentageValueBaseType = 1 | 100;\n\nexport interface IPercentPipeArgument {\n  grouping?: boolean;\n  thousandSeparator?: string;\n  locale?: string;\n  decimalSeparator?: string;\n  minDecimalDigits?: number;\n  maxDecimalDigits?: number;\n  valueBase?: OPercentageValueBaseType;\n}\n\n@Pipe({\n  name: 'oPercent'\n})\nexport class OPercentPipe extends ORealPipe implements PipeTransform {\n\n  constructor(protected injector: Injector) {\n    super(injector);\n  }\n\n  transform(text: string, args: IPercentPipeArgument): string {\n    return this.numberService.getPercentValue(text, args);\n  }\n\n}\n"]}
{"version":3,"file":"o-integer.pipe.js","sourceRoot":"","sources":["../../../tmp/ontimize/pipes/o-integer.pipe.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAiB,QAAQ,EAAE,MAAM,eAAe,CAAC;AAC9D,OAAO,EAAE,aAAa,EAAE,MAAM,aAAa,CAAC;AAQ5C;IAQE,sBAAsB,QAAkB;QAAlB,aAAQ,GAAR,QAAQ,CAAU;QACtC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;IACxD,CAAC;IAED,gCAAS,GAAT,UAAU,IAAY,EAAE,IAA0B;QAChD,OAAO,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IACxD,CAAC;;gBAdF,IAAI,SAAC;oBACJ,IAAI,EAAE,UAAU;iBACjB;;;gBAX6B,QAAQ;;IAwBtC,mBAAC;CAAA,AAfD,IAeC;SAXY,YAAY","sourcesContent":["import { Pipe, PipeTransform, Injector } from '@angular/core';\nimport { NumberService } from '../services';\n\nexport interface IIntegerPipeArgument {\n  grouping?: boolean;\n  thousandSeparator?: string;\n  locale?: string;\n}\n\n@Pipe({\n  name: 'oInteger'\n})\n\nexport class OIntegerPipe implements PipeTransform {\n\n  protected numberService: NumberService;\n\n  constructor(protected injector: Injector) {\n    this.numberService = this.injector.get(NumberService);\n  }\n\n  transform(text: string, args: IIntegerPipeArgument): string {\n    return this.numberService.getIntegerValue(text, args);\n  }\n}\n"]}
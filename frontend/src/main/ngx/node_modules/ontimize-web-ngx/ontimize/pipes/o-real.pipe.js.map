{"version":3,"file":"o-real.pipe.js","sourceRoot":"","sources":["../../../tmp/ontimize/pipes/o-real.pipe.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,EAAE,IAAI,EAAiB,QAAQ,EAAE,MAAM,eAAe,CAAC;AAC9D,OAAO,EAAE,YAAY,EAAE,MAAM,kBAAkB,CAAC;AAWhD;IAG+B,6BAAY;IAEzC,mBAAsB,QAAkB;QAAxC,YACE,kBAAM,QAAQ,CAAC,SAChB;QAFqB,cAAQ,GAAR,QAAQ,CAAU;;IAExC,CAAC;IAED,6BAAS,GAAT,UAAU,IAAY,EAAE,IAAuB;QAC7C,OAAO,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IACrD,CAAC;;gBAXF,IAAI,SAAC;oBACJ,IAAI,EAAE,OAAO;iBACd;;;gBAd6B,QAAQ;;IAyBtC,gBAAC;CAAA,AAbD,CAG+B,YAAY,GAU1C;SAVY,SAAS","sourcesContent":["import { Pipe, PipeTransform, Injector } from '@angular/core';\nimport { OIntegerPipe } from './o-integer.pipe';\n\nexport interface IRealPipeArgument {\n  grouping?: boolean;\n  thousandSeparator?: string;\n  locale?: string;\n  decimalSeparator?: string;\n  minDecimalDigits?: number;\n  maxDecimalDigits?: number;\n}\n\n@Pipe({\n  name: 'oReal'\n})\nexport class ORealPipe extends OIntegerPipe implements PipeTransform {\n\n  constructor(protected injector: Injector) {\n    super(injector);\n  }\n\n  transform(text: string, args: IRealPipeArgument): string {\n    return this.numberService.getRealValue(text, args);\n  }\n\n}\n"]}
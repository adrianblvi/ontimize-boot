import { Pipe } from '@angular/core';
var ColumnsFilterPipe = (function () {
    function ColumnsFilterPipe() {
    }
    ColumnsFilterPipe.prototype.transform = function (value, args) {
        var _this = this;
        if (!args || args.length <= 1) {
            return value;
        }
        this.filterValue = args['filtervalue'] ? args['filtervalue'] : '';
        this.filterColumns = args['filtercolumns'];
        if (!this.filterColumns || !this.filterValue || this.filterValue.length === 0) {
            return value;
        }
        if (value === undefined || value === null) {
            return value;
        }
        var that = this;
        return value.filter(function (item) {
            for (var i = 0; i < that.filterColumns.length; i++) {
                var colName = that.filterColumns[i];
                if (_this._isBlank(colName)) {
                    continue;
                }
                var origValue = item[colName];
                if (origValue) {
                    origValue = origValue.toString();
                    if (_this._isBlank(origValue)) {
                        continue;
                    }
                    if (origValue.toUpperCase().indexOf(that.filterValue.toUpperCase()) > -1) {
                        return item;
                    }
                }
            }
        });
    };
    ColumnsFilterPipe.prototype._isBlank = function (value) {
        if (value === undefined || value === null
            || value.length === 0) {
            return true;
        }
        return false;
    };
    ColumnsFilterPipe.decorators = [
        { type: Pipe, args: [{
                    name: 'columnsfilter'
                },] },
    ];
    return ColumnsFilterPipe;
}());
export { ColumnsFilterPipe };
//# sourceMappingURL=columns-filter.pipe.js.map
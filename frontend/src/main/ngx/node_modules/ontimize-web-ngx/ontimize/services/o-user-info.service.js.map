{"version":3,"file":"o-user-info.service.js","sourceRoot":"","sources":["../../../tmp/ontimize/services/o-user-info.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,MAAM,eAAe,CAAC;AACrD,OAAO,EAAc,OAAO,EAAE,MAAM,MAAM,CAAC;AAO3C;IAKE,0BAAsB,QAAkB;QAAlB,aAAQ,GAAR,QAAQ,CAAU;QAFhC,YAAO,GAAG,IAAI,OAAO,EAAO,CAAC;IAGrC,CAAC;IAED,sCAAW,GAAX,UAAY,IAAc;QACxB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC1B,CAAC;IAED,sCAAW,GAAX;QACE,OAAO,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC;IAED,gDAAqB,GAArB;QACE,OAAO,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;IACrC,CAAC;;gBAnBF,UAAU;;;gBARU,QAAQ;;IA6B7B,uBAAC;CAAA,AArBD,IAqBC;SApBY,gBAAgB","sourcesContent":["import { Injectable, Injector } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\nexport interface UserInfo {\n  username?: string;\n  avatar?: string;\n}\n\n@Injectable()\nexport class OUserInfoService {\n  protected storedInfo: UserInfo;\n  private subject = new Subject<any>();\n\n  constructor(protected injector: Injector) {\n  }\n\n  setUserInfo(info: UserInfo) {\n    this.storedInfo = info;\n    this.subject.next(info);\n  }\n\n  getUserInfo(): UserInfo {\n    return this.storedInfo;\n  }\n\n  getUserInfoObservable(): Observable<any> {\n    return this.subject.asObservable();\n  }\n\n}\n"]}
{"version":3,"file":"ontimize-ee-permissions.service.js","sourceRoot":"","sources":["../../../../tmp/ontimize/services/permissions/ontimize-ee-permissions.service.ts"],"names":[],"mappings":"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","sourcesContent":["\nimport { share } from 'rxjs/operators';\nimport { Injector, Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n\nimport { IPermissionsService } from '../../utils';\nimport { LoginService } from '../../services';\nimport { AppConfig, Config, OntimizeEEPermissionsConfig } from '../../config/app-config';\nimport { Codes, Util } from '../../utils';\n\n@Injectable()\nexport class OntimizeEEPermissionsService implements IPermissionsService {\n  public static DEFAULT_PERMISSIONS_PATH = '/loadPermissions';\n  public static PERMISSIONS_KEY = 'permission';\n\n  public path: string = '';\n\n  protected httpClient: HttpClient;\n  protected _sessionid: number = -1;\n  protected _user: string;\n  protected _urlBase: string;\n  protected _appConfig: Config;\n  protected _config: AppConfig;\n\n  constructor(protected injector: Injector) {\n    this.httpClient = this.injector.get(HttpClient);\n    this._config = this.injector.get(AppConfig);\n    this._appConfig = this._config.getConfiguration();\n  }\n\n  getDefaultServiceConfiguration(permissionsConfig: OntimizeEEPermissionsConfig): any {\n    const serviceName: string = permissionsConfig ? permissionsConfig.service : undefined;\n\n    let loginService = this.injector.get(LoginService);\n    let configuration = this._config.getServiceConfiguration();\n\n    let servConfig = {};\n    if (serviceName && configuration.hasOwnProperty(serviceName)) {\n      servConfig = configuration[serviceName];\n    }\n    servConfig[Codes.SESSION_KEY] = loginService.getSessionInfo();\n    return servConfig;\n  }\n\n  configureService(permissionsConfig: OntimizeEEPermissionsConfig): void {\n    const config = this.getDefaultServiceConfiguration(permissionsConfig);\n    this._urlBase = config.urlBase ? config.urlBase : this._appConfig['apiEndpoint'];\n    this._sessionid = config.session ? config.session.id : -1;\n    this._user = config.session ? config.session.user : '';\n    this.path = config.path ? config.path : OntimizeEEPermissionsService.DEFAULT_PERMISSIONS_PATH;\n  }\n\n  loadPermissions(): Observable<any> {\n    const url = this._urlBase + this.path;\n    const options = {\n      headers: this.buildHeaders()\n    };\n    const self = this;\n    const dataObservable: Observable<any> = new Observable(_innerObserver => {\n      self.httpClient.get(url, options).subscribe((res: any) => {\n        let permissions = {};\n        if ((res.code === Codes.ONTIMIZE_SUCCESSFUL_CODE) && Util.isDefined(res.data)) {\n          let response = res.data;\n          if ((response.length === 1) && Util.isObject(response[0])) {\n            try {\n              permissions = JSON.parse(response[0][OntimizeEEPermissionsService.PERMISSIONS_KEY]);\n            } catch (e) {\n              console.warn('[OntimizeEEPermissionsService: permissions parsing failed]');\n            }\n          }\n        }\n        _innerObserver.next(permissions);\n\n      }, error => {\n        _innerObserver.error(error);\n      }, () => _innerObserver.complete());\n    });\n    return dataObservable.pipe(share());\n  }\n\n  protected buildHeaders(): HttpHeaders {\n    return new HttpHeaders({\n      'Access-Control-Allow-Origin': '*',\n      'Content-Type': 'application/json;charset=UTF-8',\n      'Authorization': 'Bearer ' + this._sessionid\n    });\n  }\n\n}\n"]}
{"version":3,"file":"ontimize.service.js","sourceRoot":"","sources":["../../../tmp/ontimize/services/ontimize.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable, Injector } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { share } from 'rxjs/operators';\nimport { AppConfig, Config } from '../config/app-config';\nimport { LoginService } from '../services';\nimport { Codes, IAuthService, IDataService, ServiceUtils, Util } from '../utils';\nimport { OntimizeServiceResponseParser } from './parser/o-service-response.parser';\n\n@Injectable()\nexport class OntimizeService implements IAuthService, IDataService {\n\n  public entity: string = '';\n  public kv: Object = {};\n  public av: Array<string> = [];\n  public sqltypes: Object = {};\n  public pagesize: number = 10;\n  public offset: number = 0;\n  public orderby: Array<Object> = [];\n  public totalsize: number = -1;\n\n  protected httpClient: HttpClient;\n  protected _sessionid: number = -1;\n  protected _user: string;\n  protected _urlBase: string;\n  protected _appConfig: Config;\n  protected _config: AppConfig;\n  protected _startSessionPath: string;\n  protected responseParser: OntimizeServiceResponseParser;\n\n  constructor(protected injector: Injector) {\n    this.httpClient = this.injector.get(HttpClient);\n    this._config = this.injector.get(AppConfig);\n    this._appConfig = this._config.getConfiguration();\n    this.responseParser = this.injector.get(OntimizeServiceResponseParser);\n  }\n\n  public getDefaultServiceConfiguration(serviceName?: string): Object {\n    let loginService = this.injector.get(LoginService);\n    let configuration = this._config.getServiceConfiguration();\n\n    let servConfig = {};\n    if (serviceName && configuration.hasOwnProperty(serviceName)) {\n      servConfig = configuration[serviceName];\n    }\n    servConfig[Codes.SESSION_KEY] = loginService.getSessionInfo();\n    return servConfig;\n  }\n\n  public configureService(config: any): void {\n    this._urlBase = config.urlBase ? config.urlBase : this._appConfig['apiEndpoint'];\n    this._sessionid = config.session ? config.session.id : -1;\n    this._user = config.session ? config.session.user : '';\n    this._startSessionPath = this._appConfig['startSessionPath'] ? this._appConfig['startSessionPath'] : '/startsession';\n\n    if (config.entity !== undefined) {\n      this.entity = config.entity;\n    }\n    //TODO init other params like 'kv', 'av', etc.\n  }\n\n  public get urlBase(): string {\n    return this._urlBase;\n  }\n\n  public set urlBase(value: string) {\n    this._urlBase = value;\n  }\n\n  public startsession(user: string, password: string): Observable<any> {\n    const encodedPassword = encodeURIComponent(password);\n    const url = this._urlBase + this._startSessionPath + '?user=' + user + '&password=' + encodedPassword;\n    const self = this;\n    const dataObservable: Observable<any> = new Observable(_startSessionObserver => {\n      self.httpClient.get(url).subscribe(resp => {\n        if (resp >= 0) {\n          _startSessionObserver.next(resp);\n        } else {\n          //Invalid sessionId...\n          _startSessionObserver.error('Invalid user or password');\n        }\n      }, error => _startSessionObserver.error(error));\n    });\n    return dataObservable.pipe(share());\n  }\n\n  public endsession(user: string, sessionId: number): Observable<any> {\n    const url = this._urlBase + '/endsession?user=' + user + '&sessionid=' + sessionId;\n    const self = this;\n    const dataObservable: Observable<any> = new Observable(_closeSessionObserver => {\n      self.httpClient.get(url).subscribe(resp => {\n        _closeSessionObserver.next(resp);\n      }, error => {\n        if (error.status === 401 || error.status === 0 || !error.ok) {\n          _closeSessionObserver.next(0);\n        } else {\n          _closeSessionObserver.error(error);\n        }\n      });\n    });\n    return dataObservable.pipe(share());\n  }\n\n  public hassession(user: string, sessionId: number): Observable<any> {\n    const url = this._urlBase + '/hassession?user=' + user + '&sessionid=' + sessionId;\n    let _innerObserver: any;\n    const dataObservable: Observable<any> = new Observable(observer => _innerObserver = observer).pipe(share());\n    this.httpClient.get(url).subscribe(resp => {\n      _innerObserver.next(resp);\n    }, error => _innerObserver.error(error));\n    return dataObservable.pipe(share());\n  }\n\n  public query(kv?: Object, av?: Array<string>, entity?: string, sqltypes?: Object): Observable<any> {\n    entity = (Util.isDefined(entity)) ? entity : this.entity;\n    //TODO improve this -> merge between global conf and specific params of method calling\n    kv = (Util.isDefined(kv)) ? kv : this.kv;\n    av = (Util.isDefined(av)) ? av : this.av;\n    sqltypes = (Util.isDefined(sqltypes)) ? sqltypes : this.sqltypes;\n\n    const url = this._urlBase + '/query';\n    const options = {\n      headers: this.buildHeaders()\n    };\n    const body = JSON.stringify({\n      user: this._user,\n      sessionid: this._sessionid,\n      type: 1,\n      entity: entity,\n      kv: kv,\n      av: av,\n      sqltypes: sqltypes\n    });\n    const self = this;\n    const dataObservable: Observable<any> = new Observable(_innerObserver => {\n      self.httpClient.post(url, body, options).subscribe(resp => {\n        self.parseSuccessfulQueryResponse(resp, _innerObserver);\n      }, error => {\n        self.parseUnsuccessfulQueryResponse(error, _innerObserver);\n      }, () => _innerObserver.complete());\n    });\n    return dataObservable.pipe(share());\n  }\n\n  public advancedQuery(kv?: Object, av?: Array<string>, entity?: string, sqltypes?: Object,\n    offset?: number, pagesize?: number, orderby?: Array<Object>): Observable<any> {\n\n    entity = (Util.isDefined(entity)) ? entity : this.entity;\n    //TODO improve this -> merge between global conf and specific params of method calling\n    kv = (Util.isDefined(kv)) ? kv : this.kv;\n    av = (Util.isDefined(av)) ? av : this.av;\n    sqltypes = (Util.isDefined(sqltypes)) ? sqltypes : this.sqltypes;\n    orderby = (Util.isDefined(orderby)) ? orderby : this.orderby;\n    offset = (Util.isDefined(offset)) ? offset : this.offset;\n    pagesize = (Util.isDefined(pagesize)) ? pagesize : this.pagesize;\n\n    const url = this._urlBase + '/advancedquery';\n    const options = {\n      headers: this.buildHeaders()\n    };\n    const body = JSON.stringify({\n      user: this._user,\n      sessionid: this._sessionid,\n      type: 1,\n      entity: entity,\n      kv: kv,\n      av: av,\n      sqltypes: sqltypes,\n      offset: offset,\n      pageSize: pagesize,\n      orderBy: orderby\n    });\n    const self = this;\n    const dataObservable: Observable<any> = new Observable(_innerObserver => {\n      self.httpClient.post(url, body, options).subscribe(resp => {\n        self.parseSuccessfulAdvancedQueryResponse(resp, _innerObserver);\n      }, error => {\n        self.parseUnsuccessfulAdvancedQueryResponse(error, _innerObserver);\n      }, () => _innerObserver.complete());\n    });\n    return dataObservable.pipe(share());\n  }\n\n  public insert(av: Object = {}, entity?: string, sqltypes?: Object): Observable<any> {\n    entity = (Util.isDefined(entity)) ? entity : this.entity;\n    av = (Util.isDefined(av)) ? av : this.av;\n    sqltypes = (Util.isDefined(sqltypes)) ? sqltypes : this.sqltypes;\n\n    const url = this._urlBase + '/insert';\n    const options = {\n      headers: this.buildHeaders()\n    };\n    const body = JSON.stringify({\n      user: this._user,\n      sessionid: this._sessionid,\n      entity: entity,\n      av: av,\n      sqltypes: sqltypes\n    });\n    const self = this;\n    const dataObservable: Observable<any> = new Observable(_innerObserver => {\n      self.httpClient.post(url, body, options).subscribe(resp => {\n        self.parseSuccessfulInsertResponse(resp, _innerObserver);\n      }, error => {\n        self.parseUnsuccessfulInsertResponse(error, _innerObserver);\n      }, () => _innerObserver.complete());\n    });\n    return dataObservable.pipe(share());\n  }\n\n  public update(kv: Object = {}, av: Object = {}, entity?: string, sqltypes?: Object): Observable<any> {\n    entity = (Util.isDefined(entity)) ? entity : this.entity;\n    kv = (Util.isDefined(kv)) ? kv : this.kv;\n    av = (Util.isDefined(av)) ? av : this.av;\n    sqltypes = (Util.isDefined(sqltypes)) ? sqltypes : this.sqltypes;\n\n    const url = this._urlBase + '/update';\n    const options = {\n      headers: this.buildHeaders()\n    };\n    const body = JSON.stringify({\n      user: this._user,\n      sessionid: this._sessionid,\n      entity: entity,\n      kv: kv,\n      av: av,\n      sqltypes: sqltypes\n    });\n    const self = this;\n    const dataObservable: Observable<any> = new Observable(_innerObserver => {\n      self.httpClient.post(url, body, options).subscribe(resp => {\n        self.parseSuccessfulUpdateResponse(resp, _innerObserver);\n      }, error => {\n        self.parseUnsuccessfulUpdateResponse(error, _innerObserver);\n      }, () => _innerObserver.complete());\n    });\n    return dataObservable.pipe(share());\n  }\n\n  public delete(kv: Object = {}, entity?: string, sqltypes?: Object): Observable<any> {\n    entity = (Util.isDefined(entity)) ? entity : this.entity;\n    kv = (Util.isDefined(kv)) ? kv : this.kv;\n    sqltypes = (Util.isDefined(sqltypes)) ? sqltypes : this.sqltypes;\n\n    const url = this._urlBase + '/delete';\n    const options = {\n      headers: this.buildHeaders()\n    };\n    const body = JSON.stringify({\n      user: this._user,\n      sessionid: this._sessionid,\n      entity: entity,\n      kv: kv,\n      sqltypes: sqltypes\n    });\n    const self = this;\n    const dataObservable: Observable<any> = new Observable(_innerObserver => {\n      self.httpClient.post(url, body, options).subscribe(resp => {\n        self.parseSuccessfulDeleteResponse(resp, _innerObserver);\n      }, error => {\n        self.parseUnsuccessfulDeleteResponse(error, _innerObserver);\n      }, () => _innerObserver.complete());\n    });\n    return dataObservable.pipe(share());\n  }\n\n  redirectLogin(sessionExpired: boolean = false) {\n    let router = this.injector.get(Router);\n    const loginService = this.injector.get(LoginService);\n    if (sessionExpired) {\n      loginService.sessionExpired();\n    }\n    ServiceUtils.redirectLogin(router, sessionExpired);\n  }\n\n  protected buildHeaders(): HttpHeaders {\n    return new HttpHeaders({\n      'Access-Control-Allow-Origin': '*',\n      'Content-Type': 'application/json;charset=UTF-8'\n    });\n  }\n\n  /*\n   * Successful response parsers, there is one parser for each CRUD method which calls to the common parser.\n   * User can overwrite the chosen methods parsers or the common parser\n   */\n  protected parseSuccessfulResponse(resp: any, _innerObserver: any) {\n    this.responseParser.parseSuccessfulResponse(resp, _innerObserver, this);\n  }\n\n  protected parseSuccessfulQueryResponse(resp: any, _innerObserver: any) {\n    this.parseSuccessfulResponse(resp, _innerObserver);\n  }\n\n  protected parseSuccessfulAdvancedQueryResponse(resp: any, _innerObserver: any) {\n    this.parseSuccessfulResponse(resp, _innerObserver);\n  }\n\n  protected parseSuccessfulInsertResponse(resp: any, _innerObserver: any) {\n    this.parseSuccessfulResponse(resp, _innerObserver);\n  }\n\n  protected parseSuccessfulUpdateResponse(resp: any, _innerObserver: any) {\n    this.parseSuccessfulResponse(resp, _innerObserver);\n  }\n\n  protected parseSuccessfulDeleteResponse(resp: any, _innerObserver: any) {\n    this.parseSuccessfulResponse(resp, _innerObserver);\n  }\n\n  /*\n   * Unsuccessful response parsers, there is one parser for each CRUD method which calls to the common parser.\n   * User can overwrite the chosen methods parsers or the common parser\n   */\n  protected parseUnsuccessfulResponse(error: any, _innerObserver: any) {\n    this.responseParser.parseUnsuccessfulResponse(error, _innerObserver, this);\n  }\n\n  protected parseUnsuccessfulQueryResponse(resp: any, _innerObserver: any) {\n    this.parseUnsuccessfulResponse(resp, _innerObserver);\n  }\n\n  protected parseUnsuccessfulAdvancedQueryResponse(resp: any, _innerObserver: any) {\n    this.parseUnsuccessfulResponse(resp, _innerObserver);\n  }\n\n  protected parseUnsuccessfulInsertResponse(resp: any, _innerObserver: any) {\n    this.parseUnsuccessfulResponse(resp, _innerObserver);\n  }\n\n  protected parseUnsuccessfulUpdateResponse(resp: any, _innerObserver: any) {\n    this.parseUnsuccessfulResponse(resp, _innerObserver);\n  }\n\n  protected parseUnsuccessfulDeleteResponse(resp: any, _innerObserver: any) {\n    this.parseUnsuccessfulResponse(resp, _innerObserver);\n  }\n\n}\n"]}
import { Injector } from '@angular/core';
import { Observable } from 'rxjs';
import { ActivatedRoute } from '@angular/router';
export declare type OPermissions = {
    attr: string;
    visible: boolean;
    enabled: boolean;
};
export declare type OFormPermissions = {
    attr: string;
    selector: string;
    components?: OPermissions[];
    actions?: OPermissions[];
};
export declare type OTableMenuPermissions = {
    visible: boolean;
    enabled: boolean;
    items?: OPermissions[];
};
export declare type OTablePermissions = {
    attr: string;
    selector: string;
    menu?: OTableMenuPermissions;
    columns?: OPermissions[];
    actions?: OPermissions[];
    contextMenu?: OPermissions[];
};
export declare type OComponentPermissions = OFormPermissions | OTablePermissions;
export declare type ORoutePermissions = {
    permissionId: string;
    enabled?: boolean;
    components?: OComponentPermissions[];
};
export declare type OPermissionsDefinition = {
    routes?: ORoutePermissions[];
    components?: OComponentPermissions[];
    menu?: OPermissions[];
};
export declare class PermissionsService {
    protected injector: Injector;
    protected permissionsService: any;
    protected ontimizePermissionsConfig: any;
    protected permissions: OPermissionsDefinition;
    constructor(injector: Injector);
    protected configureService(): void;
    restart(): void;
    hasPermissions(): boolean;
    getUserPermissionsAsPromise(): Promise<boolean>;
    protected queryPermissions(): Observable<any>;
    protected getPermissionIdFromActRoute(actRoute: ActivatedRoute): string;
    protected getComponentPermissionsUsingRoute(attr: string, actRoute: ActivatedRoute): OComponentPermissions;
    protected getOComponentPermissions(attr: string, actRoute: ActivatedRoute, selector: string): any;
    getTablePermissions(attr: string, actRoute: ActivatedRoute): OTablePermissions;
    getFormPermissions(attr: string, actRoute: ActivatedRoute): OFormPermissions;
    getMenuPermissions(attr: string): OPermissions;
    protected mergeOPermissionsArrays(permissionsA: OPermissions[], permissionsB: OPermissions[]): OPermissions[];
    protected mergeOTableMenuPermissions(permissionsA: OTableMenuPermissions, permissionsB: OTableMenuPermissions): OTableMenuPermissions;
    isPermissionIdRouteRestricted(permissionId: string): boolean;
}

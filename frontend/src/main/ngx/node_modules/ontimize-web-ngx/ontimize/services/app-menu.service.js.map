{"version":3,"file":"app-menu.service.js","sourceRoot":"","sources":["../../../tmp/ontimize/services/app-menu.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injector, Injectable } from '@angular/core';\nimport { Codes } from '../utils';\nimport { AppConfig } from '../config/app-config';\n\nexport type MenuRootItem = (MenuGroup | MenuItemRoute | MenuItemAction | MenuItemLocale | MenuItemLogout | MenuItemUserInfo | MenuItem);\n\nexport interface MenuGroup {\n  id: string;\n  name: string;\n  icon?: string;\n  items: (MenuItemRoute | MenuItemAction | MenuItemLocale | MenuItemLogout | MenuItemUserInfo | MenuGroup | MenuItem)[];\n  opened?: boolean;\n  tooltip?: string;\n  class?:string;\n}\n\nexport interface MenuItem {\n  id: string;\n  name: string;\n  tooltip?: string;\n  icon?: string;\n  image?: string;\n  component?: any;\n  class?:string;\n  'component-inputs'?: Object;\n  'show-in-card-menu'?: boolean;\n}\n\nexport interface MenuItemRoute extends MenuItem {\n  route: string;\n}\n\nexport interface MenuItemAction extends MenuItem {\n  confirm?: string;\n  confirmText?: string;\n  action(): any;\n}\n\nexport interface MenuItemLocale extends MenuItem {\n  locale: string;\n}\n\nexport interface MenuItemLogout extends MenuItem {\n  route: string;\n  confirm: string;\n}\n\nexport interface MenuItemUserInfo extends MenuItem {\n  user: string;\n  avatar: string;\n}\n\n@Injectable()\nexport class AppMenuService {\n\n  protected _config: AppConfig;\n  protected MENU_ROOTS: MenuRootItem[];\n  protected ALL_MENU_ITEMS: MenuItem[];\n\n  constructor(protected injector: Injector) {\n    this._config = this.injector.get(AppConfig);\n    this.MENU_ROOTS = this._config.getMenuConfiguration();\n\n    this.ALL_MENU_ITEMS = [];\n    for (let i = 0, len = this.MENU_ROOTS.length; i < len; i++) {\n      let item: MenuRootItem = this.MENU_ROOTS[i];\n      this.ALL_MENU_ITEMS = this.ALL_MENU_ITEMS.concat(this.getMenuItems(item));\n    }\n    //this.ALL_MENU_ITEMS = this.MENU_ROOTS.reduce((result, category) => result.concat(category.items), []);\n  }\n\n  getMenuRoots(): MenuRootItem[] {\n    return this.MENU_ROOTS;\n  }\n\n  getMenuRootById(id: string): MenuRootItem {\n    return this.MENU_ROOTS.find(c => c.id === id);\n  }\n\n  getAllMenuItems(): MenuItem[] {\n    return this.ALL_MENU_ITEMS;\n  }\n\n  getMenuItemById(id: string): MenuItem {\n    return this.ALL_MENU_ITEMS.find(i => i.id === id);\n  }\n\n  getMenuItemType(item: MenuRootItem): string {\n    let type: string;\n    switch (true) {\n      case ((item as MenuItemLogout).route === Codes.LOGIN_ROUTE):\n        type = 'logout';\n        break;\n      case ((item as MenuItemRoute).route !== undefined):\n        type = 'route';\n        break;\n      case ((item as MenuItemAction).action !== undefined):\n        type = 'action';\n        break;\n      case ((item as MenuItemLocale).locale !== undefined):\n        type = 'locale';\n        break;\n      case ((item as MenuItemUserInfo).user !== undefined):\n        type = 'user-info';\n        break;\n      case ((item as MenuGroup).items !== undefined):\n        type = 'group';\n        break;\n      default:\n        type = 'default';\n        break;\n    }\n    return type;\n  }\n\n  isMenuGroup(item: MenuRootItem): boolean {\n    return this.getMenuItemType(item) === 'group';\n  }\n\n  private getMenuItems(item: MenuRootItem): MenuItem[] {\n    if ((item as MenuGroup).items !== undefined) {\n      return (item as MenuGroup).items;\n    }\n    return [item];\n  }\n\n}\n"]}
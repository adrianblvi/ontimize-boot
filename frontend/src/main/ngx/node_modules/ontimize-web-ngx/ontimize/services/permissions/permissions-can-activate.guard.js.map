{"version":3,"file":"permissions-can-activate.guard.js","sourceRoot":"","sources":["../../../../tmp/ontimize/services/permissions/permissions-can-activate.guard.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AACrD,OAAO,EAAiE,MAAM,EAAE,MAAM,iBAAiB,CAAC;AACxG,OAAO,EAAE,IAAI,EAAE,MAAM,aAAa,CAAC;AACnC,OAAO,EAAE,eAAe,EAAE,MAAM,qBAAqB,CAAC;AACtD,OAAO,EAAE,4BAA4B,EAAE,MAAM,qCAAqC,CAAC;AACnF,OAAO,EAAE,kBAAkB,EAAE,MAAM,uBAAuB,CAAC;AAE3D;IAQE,iCAAsB,QAAkB;QAAlB,aAAQ,GAAR,QAAQ,CAAU;QACtC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACxC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;QAChE,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;QAC1D,IAAI,CAAC,4BAA4B,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC;QACpF,IAAI,CAAC,4BAA4B,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;IAC9D,CAAC;IAED,kDAAgB,GAAhB,UAAiB,UAAkC,EAAE,KAA0B;QAC7E,IAAI,UAAU,GAAY,KAAK,CAAC;QAChC,IAAM,WAAW,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;QACjF,IAAM,YAAY,GAAW,CAAC,WAAW,IAAI,EAAE,CAAC,CAAC,cAAc,CAAC,CAAC;QACjE,IAAI,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,EAAE;YAChC,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,6BAA6B,CAAC,YAAY,CAAC,CAAC;YACjF,IAAI,UAAU,EAAE;gBACd,IAAI,GAAG,GAAG,4CAA4C,CAAC;gBACvD,IAAM,KAAK,GAAW,WAAW,CAAC,+BAA+B,CAAC,CAAC;gBACnE,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;oBACzB,GAAG,GAAG,2CAA2C,CAAC;oBAClD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;iBAC/B;gBACD,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aAChC;SACF;QACD,OAAO,CAAC,UAAU,CAAC;IACrB,CAAC;;gBAjCF,UAAU;;;gBAPF,QAAQ;;IA0CjB,8BAAC;CAAA,AAnCD,IAmCC;SAlCY,uBAAuB","sourcesContent":["import { Injector, Injectable } from '@angular/core';\nimport { CanActivateChild, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Util } from '../../utils';\nimport { SnackBarService } from '../snackbar.service';\nimport { ShareCanActivateChildService } from '../share-can-activate-child.service';\nimport { PermissionsService } from './permissions.service';\n\n@Injectable()\nexport class PermissionsGuardService implements CanActivateChild {\n\n  protected router: Router;\n  protected permissionsService: PermissionsService;\n  protected snackBarService: SnackBarService;\n  protected shareCanActivateChildService: ShareCanActivateChildService;\n\n  constructor(protected injector: Injector) {\n    this.router = this.injector.get(Router);\n    this.permissionsService = this.injector.get(PermissionsService);\n    this.snackBarService = this.injector.get(SnackBarService);\n    this.shareCanActivateChildService = this.injector.get(ShareCanActivateChildService);\n    this.shareCanActivateChildService.setPermissionsGuard(this);\n  }\n\n  canActivateChild(childRoute: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    let restricted: boolean = false;\n    const oPermission = childRoute.data ? childRoute.data['oPermission'] : undefined;\n    const permissionId: string = (oPermission || {})['permissionId'];\n    if (Util.isDefined(permissionId)) {\n      restricted = this.permissionsService.isPermissionIdRouteRestricted(permissionId);\n      if (restricted) {\n        let msg = 'MESSAGES.NAVIGATION_NOT_ALLOWED_PERMISSION';\n        const route: string = oPermission['restrictedPermissionsRedirect'];\n        if (Util.isDefined(route)) {\n          msg = 'MESSAGES.NAVIGATION_REDIRECTED_PERMISSION';\n          this.router.navigate([route]);\n        }\n        this.snackBarService.open(msg);\n      }\n    }\n    return !restricted;\n  }\n\n}\n"]}
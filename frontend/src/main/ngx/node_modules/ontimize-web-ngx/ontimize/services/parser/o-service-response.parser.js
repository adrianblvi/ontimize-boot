import { Injectable, Injector } from '@angular/core';
import { Codes } from '../../utils';
var OntimizeServiceResponseParser = (function () {
    function OntimizeServiceResponseParser(injector) {
        this.injector = injector;
    }
    OntimizeServiceResponseParser.prototype.parseSuccessfulResponse = function (resp, subscriber, service) {
        if (resp && resp.code === Codes.ONTIMIZE_UNAUTHORIZED_CODE) {
            service.redirectLogin(true);
        }
        else if (resp && resp.code === Codes.ONTIMIZE_FAILED_CODE) {
            subscriber.error(resp.message);
        }
        else if (resp && resp.code === Codes.ONTIMIZE_SUCCESSFUL_CODE) {
            subscriber.next(resp);
        }
        else {
            subscriber.error('Service unavailable');
        }
    };
    OntimizeServiceResponseParser.prototype.parseUnsuccessfulResponse = function (error, subscriber, service) {
        if (error.status !== 500 && (error.status === 401 || error.status === 0) && !error.ok) {
            service.redirectLogin(true);
        }
        else {
            subscriber.error(error);
        }
    };
    OntimizeServiceResponseParser.decorators = [
        { type: Injectable },
    ];
    OntimizeServiceResponseParser.ctorParameters = function () { return [
        { type: Injector }
    ]; };
    return OntimizeServiceResponseParser;
}());
export { OntimizeServiceResponseParser };
//# sourceMappingURL=o-service-response.parser.js.map
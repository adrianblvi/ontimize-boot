{"version":3,"file":"ontimize-export.service.js","sourceRoot":"","sources":["../../../tmp/ontimize/services/ontimize-export.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable, Injector } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { share } from 'rxjs/operators';\nimport { AppConfig, Config } from '../config/app-config';\nimport { LoginService } from '../services';\nimport { Codes, ServiceUtils } from '../utils';\n\nexport const EXPORT_PATH_DEFAULT: string = '/export';\nexport const DOWNLOAD_PATH_DEFAULT: string = EXPORT_PATH_DEFAULT + '/download';\n\nexport class OExportExtension {\n  public static Excel: string = 'xlsx';\n  public static HTML: string = 'html';\n  public static PDF: string = 'pdf';\n}\n\n@Injectable()\nexport class OntimizeExportService {\n\n  public EXPORT_PATH_DEFAULT: string = EXPORT_PATH_DEFAULT;\n  public DOWNLOAD_PATH_DEFAULT: string = DOWNLOAD_PATH_DEFAULT;\n\n  public exportPath: string = EXPORT_PATH_DEFAULT;\n  public downloadPath: string = DOWNLOAD_PATH_DEFAULT;\n\n  protected httpClient: HttpClient;\n  protected _sessionid: string;\n  protected _urlBase: string;\n  protected _appConfig: Config;\n  protected _config: AppConfig;\n\n  constructor(protected injector: Injector) {\n    this.httpClient = this.injector.get(HttpClient);\n    this._config = this.injector.get(AppConfig);\n    this._appConfig = this._config.getConfiguration();\n  }\n\n  public getDefaultServiceConfiguration(serviceName?: string): Object {\n    let loginService: LoginService = this.injector.get(LoginService);\n    let configuration = this._config.getServiceConfiguration();\n\n    let servConfig = {};\n    if (serviceName && configuration.hasOwnProperty(serviceName)) {\n      servConfig = configuration[serviceName];\n    }\n    servConfig[Codes.SESSION_KEY] = loginService.getSessionInfo();\n    return servConfig;\n  }\n\n  public configureService(config: any): void {\n    this._urlBase = config.urlBase ? config.urlBase : this._appConfig['apiEndpoint'];\n    this._sessionid = config.session ? config.session.id : -1;\n    if (config.exportPath) {\n      this.exportPath = config.exportPath;\n    }\n    if (config.downloadPath) {\n      this.downloadPath = config.downloadPath;\n    }\n  }\n\n  public get urlBase(): string {\n    return this._urlBase;\n  }\n\n  public set urlBase(value: string) {\n    this._urlBase = value;\n  }\n\n  public exportData(data: any, format: string): Observable<any> {\n    const url = this._urlBase + this.exportPath + '/' + format;\n    const options = {\n      headers: new HttpHeaders({\n        'Access-Control-Allow-Origin': '*',\n        'Content-Type': 'application/json;charset=UTF-8',\n        'Authorization': 'Bearer ' + this._sessionid\n      })\n    };\n    const body = JSON.stringify(data);\n    let _innerObserver: any;\n    const dataObservable = new Observable(observer => _innerObserver = observer).pipe(share());\n\n    const self = this;\n    // TODO: try multipart\n    this.httpClient.post(url, body, options).subscribe((resp: any) => {\n      if (resp && resp.code === Codes.ONTIMIZE_UNAUTHORIZED_CODE) {\n        self.redirectLogin(true);\n      } else if (resp.code === Codes.ONTIMIZE_FAILED_CODE) {\n        _innerObserver.error(resp.message);\n      } else if (resp.code === Codes.ONTIMIZE_SUCCESSFUL_CODE) {\n        _innerObserver.next(resp);\n      } else {\n        // Unknow state -> error\n        _innerObserver.error('Service unavailable');\n      }\n    }, error => _innerObserver.error(error),\n      () => _innerObserver.complete());\n\n    return dataObservable;\n  }\n\n  public downloadFile(fileId: string, fileExtension: string): Observable<any> {\n    const url = this._urlBase + this.downloadPath + '/' + fileExtension + '/' + fileId;\n\n    let _innerObserver: any;\n    const dataObservable = new Observable(observer => _innerObserver = observer).pipe(share());\n    // let responseType: string;\n    // if (OExportExtension.Excel === fileExtension) {\n    //   responseType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet';\n    // } else if (OExportExtension.HTML === fileExtension) {\n    //   responseType = 'text/html';\n    // } else if (OExportExtension.PDF === fileExtension) {\n    //   responseType = 'application/pdf';\n    // }\n    const options: any = {\n      headers: new HttpHeaders({\n        'Access-Control-Allow-Origin': '*',\n        'Authorization': 'Bearer ' + this._sessionid\n      }),\n      'observe': 'response',\n      'responseType': 'blob'\n    };\n    // .map((res: any) => new Blob([res.blob()], { type: responseType }))\n    this.httpClient.get(url, options).subscribe((resp: any) => {\n      let fileData = resp.body;\n      let fileURL = URL.createObjectURL(fileData);\n      let a = document.createElement('a');\n      document.body.appendChild(a);\n      a.href = fileURL;\n      a.download = fileId + '.' + fileExtension;\n      a.click();\n      document.body.removeChild(a);\n      _innerObserver.next(fileData);\n      URL.revokeObjectURL(fileURL);\n    }, error => _innerObserver.error(error),\n      () => _innerObserver.complete());\n\n    return dataObservable;\n  }\n\n  protected redirectLogin(sessionExpired: boolean = false): void {\n    let router = this.injector.get(Router);\n    const loginService = this.injector.get(LoginService);\n    if (sessionExpired) {\n      loginService.sessionExpired();\n    }\n    ServiceUtils.redirectLogin(router, sessionExpired);\n  }\n\n}\n"]}
{"version":3,"file":"currency.service.js","sourceRoot":"","sources":["../../../tmp/ontimize/services/currency.service.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,IAAI,EAAE,MAAM,UAAU,CAAC;AAChC,OAAO,EAAE,aAAa,EAAE,MAAM,kBAAkB,CAAC;AAEjD;IAUE,yBAAsB,QAAkB;QAAlB,aAAQ,GAAR,QAAQ,CAAU;QACtC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QAEvD,IAAI,CAAC,OAAO,GAAG,eAAe,CAAC,uBAAuB,CAAC;QACvD,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC,gCAAgC,CAAC;IAC1E,CAAC;IAED,sBAAI,mCAAM;aAAV;YACE,OAAO,IAAI,CAAC,OAAO,CAAC;QACtB,CAAC;aAED,UAAW,KAAa;YACtB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACvB,CAAC;;;OAJA;IAMD,sBAAI,2CAAc;aAAlB;YACE,OAAO,IAAI,CAAC,eAAe,CAAC;QAC9B,CAAC;aAED,UAAmB,KAAa;YAC9B,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC/B,CAAC;;;OAJA;IAMD,0CAAgB,GAAhB,UAAiB,KAAU,EAAE,IAAS;QACpC,IAAI,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,SAAS,CAAC;QACpD,IAAI,cAAc,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC,SAAS,CAAC;QAEpE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAC3B,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;SACvB;QACD,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,EAAE;YACnC,cAAc,GAAG,IAAI,CAAC,eAAe,CAAC;SACvC;QACD,IAAI,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;QAClE,QAAQ,cAAc,EAAE;YACtB,KAAK,MAAM;gBACT,aAAa,GAAG,MAAM,GAAG,GAAG,GAAG,aAAa,CAAC;gBAC7C,MAAM;YACR,KAAK,OAAO;gBACV,aAAa,GAAG,aAAa,GAAG,GAAG,GAAG,MAAM,CAAC;gBAC7C,MAAM;SACT;QACD,OAAO,aAAa,CAAC;IACvB,CAAC;IAnDa,uCAAuB,GAAG,GAAG,CAAC;IAC9B,gDAAgC,GAAG,MAAM,CAAC;IAoD1D,sBAAC;CAAA,AAvDD,IAuDC;SAvDY,eAAe","sourcesContent":["import { Injector } from '@angular/core';\nimport { Util } from '../utils';\nimport { NumberService } from './number.service';\n\nexport class CurrencyService {\n\n  public static DEFAULT_CURRENCY_SYMBOL = '$';\n  public static DEFAULT_CURRENCY_SYMBOL_POSITION = 'left';\n\n  protected _numberService: NumberService;\n\n  protected _symbol: string;\n  protected _symbolPosition: string;\n\n  constructor(protected injector: Injector) {\n    this._numberService = this.injector.get(NumberService);\n    //TODO: initialize from config\n    this._symbol = CurrencyService.DEFAULT_CURRENCY_SYMBOL;\n    this._symbolPosition = CurrencyService.DEFAULT_CURRENCY_SYMBOL_POSITION;\n  }\n\n  get symbol(): string {\n    return this._symbol;\n  }\n\n  set symbol(value: string) {\n    this._symbol = value;\n  }\n\n  get symbolPosition(): string {\n    return this._symbolPosition;\n  }\n\n  set symbolPosition(value: string) {\n    this._symbolPosition = value;\n  }\n\n  getCurrencyValue(value: any, args: any) {\n    let symbol = args ? args.currencySimbol : undefined;\n    let symbolPosition = args ? args.currencySymbolPosition : undefined;\n\n    if (!Util.isDefined(symbol)) {\n      symbol = this._symbol;\n    }\n    if (!Util.isDefined(symbolPosition)) {\n      symbolPosition = this._symbolPosition;\n    }\n    let currencyValue = this._numberService.getRealValue(value, args);\n    switch (symbolPosition) {\n      case 'left':\n        currencyValue = symbol + ' ' + currencyValue;\n        break;\n      case 'right':\n        currencyValue = currencyValue + ' ' + symbol;\n        break;\n    }\n    return currencyValue;\n  }\n\n}\n"]}
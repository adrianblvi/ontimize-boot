{"version":3,"file":"o-translate-http-loader.js","sourceRoot":"","sources":["../../../../tmp/ontimize/services/translate/o-translate-http-loader.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injector } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { Observable, combineLatest } from 'rxjs';\nimport { share } from 'rxjs/operators';\n\nimport { AppConfig } from '../../config/app-config';\nimport { Codes } from '../../utils';\nimport { OTranslateService } from './o-translate.service';\n\nexport class OTranslateHttpLoader extends TranslateHttpLoader {\n  protected appConfig: AppConfig;\n  protected httpClient: HttpClient;\n\n  static BUNDLE_KEY = 'key';\n  static BUNDLE_VALUE = 'value';\n\n  constructor(\n    httpClient: HttpClient,\n    prefix: string = OTranslateService.ASSETS_PATH,\n    suffix: string = OTranslateService.ASSETS_EXTENSION,\n    protected injector: Injector\n  ) {\n    super(httpClient, prefix, suffix);\n    this.appConfig = this.injector.get(AppConfig);\n    this.httpClient = httpClient;\n  }\n\n  getAssetsPath(): string {\n    return this.prefix;\n  }\n\n  getAssetsExtension(): string {\n    return this.suffix;\n  }\n\n  getLocalTranslation(lang: string): Observable<any> {\n    let innerObserver: any;\n    const dataObservable = new Observable(observer => innerObserver = observer).pipe(share());\n    super.getTranslation(lang)\n      .subscribe((res) => {\n        innerObserver.next(res);\n        innerObserver.complete();\n      }, error => {\n        innerObserver.next(undefined);\n      },\n        () => innerObserver.complete());\n    return dataObservable;\n  }\n\n  getTranslation(lang: string): any {\n    let translationOrigins: any[] = [];\n\n    translationOrigins.push(this.getLocalTranslation(lang));\n\n    if (this.appConfig.useRemoteBundle()) {\n      translationOrigins.push(this.getRemoteBundle(lang));\n    }\n\n    let innerObserver: any;\n    const dataObservable = new Observable(observer => innerObserver = observer).pipe(share());\n\n    combineLatest(...translationOrigins).subscribe((res: any[]) => {\n      const staticBundle = res[0] || {};\n      const remoteBundle = res[1] || {};\n      const allBundles = Object.assign(staticBundle, remoteBundle);\n      innerObserver.next(allBundles);\n    });\n    return dataObservable;\n  }\n\n  getRemoteBundle(lang: string): Observable<any> {\n    const bundleEndpoint = this.appConfig.getBundleEndpoint();\n    let innerObserver: any;\n    let dataObservable = new Observable(observer => innerObserver = observer).pipe(share());\n    if (!bundleEndpoint) {\n      innerObserver.next([]);\n    }\n    const url = bundleEndpoint + '?lang=' + lang;\n\n    this.httpClient.get(url).subscribe((resp: any) => {\n      let response = {};\n      if (resp.code === Codes.ONTIMIZE_SUCCESSFUL_CODE) {\n        response = this.parseBundleResponse(resp.data);\n      }\n      innerObserver.next(response);\n    },\n      error => {\n        console.log('Remote Bundle service is not available');\n        innerObserver.next(error);\n      },\n      () => innerObserver.complete()\n    );\n\n    return dataObservable;\n  }\n\n  protected parseBundleResponse(data: any[]): any {\n    let result = {};\n    data.forEach((item) => {\n      result[item[OTranslateHttpLoader.BUNDLE_KEY]] = item[OTranslateHttpLoader.BUNDLE_VALUE];\n    });\n    return result;\n  }\n}\n"]}
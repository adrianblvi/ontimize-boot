{"version":3,"file":"ontimize-permissions.service.js","sourceRoot":"","sources":["../../../../tmp/ontimize/services/permissions/ontimize-permissions.service.ts"],"names":[],"mappings":"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","sourcesContent":["\nimport {share} from 'rxjs/operators';\nimport { Injector, Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n\nimport { IPermissionsService } from '../../utils';\nimport { LoginService } from '../../services';\nimport { AppConfig, Config, OntimizePermissionsConfig } from '../../config/app-config';\nimport { Util, Codes } from '../../utils';\n\n@Injectable()\nexport class OntimizePermissionsService implements IPermissionsService {\n\n  public entity: string = '';\n  public keyColumn: string;\n  public valueColumn: string;\n\n  protected httpClient: HttpClient;\n  protected _sessionid: number = -1;\n  protected _user: string;\n  protected _urlBase: string;\n  protected _appConfig: Config;\n  protected _config: AppConfig;\n\n  constructor(protected injector: Injector) {\n    this.httpClient = this.injector.get(HttpClient);\n    this._config = this.injector.get(AppConfig);\n    this._appConfig = this._config.getConfiguration();\n  }\n\n  getDefaultServiceConfiguration(): any {\n    let loginService = this.injector.get(LoginService);\n    let servConfig = {};\n    servConfig[Codes.SESSION_KEY] = loginService.getSessionInfo();\n    return servConfig;\n  }\n\n  configureService(permissionsConfig: OntimizePermissionsConfig): void {\n    const config = this.getDefaultServiceConfiguration();\n    this._urlBase = config.urlBase ? config.urlBase : this._appConfig['apiEndpoint'];\n    this._sessionid = config.session ? config.session.id : -1;\n    this._user = config.session ? config.session.user : '';\n\n    if (Util.isDefined(permissionsConfig)) {\n      if (permissionsConfig.entity !== undefined) {\n        this.entity = permissionsConfig.entity;\n      }\n      if (permissionsConfig.keyColumn !== undefined) {\n        this.keyColumn = permissionsConfig.keyColumn;\n      }\n      if (permissionsConfig.valueColumn !== undefined) {\n        this.valueColumn = permissionsConfig.valueColumn;\n      }\n    }\n  }\n\n  loadPermissions(): Observable<any> {\n    let kv: Object = {};\n    kv[this.keyColumn] = this._user;\n\n    let av = [this.valueColumn];\n\n    const url = this._urlBase + '/query';\n    const options = {\n      headers: this.buildHeaders()\n    };\n    const body = JSON.stringify({\n      user: this._user,\n      sessionid: this._sessionid,\n      type: 1,\n      entity: this.entity,\n      kv: kv,\n      av: av\n    });\n    const self = this;\n    const dataObservable: Observable<any> = new Observable(_innerObserver => {\n      self.httpClient.post(url, body, options).subscribe((res: any) => {\n        let permissions = {};\n        if ((res.code === Codes.ONTIMIZE_SUCCESSFUL_CODE) && Util.isDefined(res.data)) {\n          const response = res.data;\n          if ((response.length === 1) && Util.isObject(response[0])) {\n            const permissionsResp = response[0];\n            try {\n              permissions = permissionsResp.hasOwnProperty(self.valueColumn) ? JSON.parse(permissionsResp[self.valueColumn]) : {};\n            } catch (e) {\n              console.warn('[OntimizePermissionsService: permissions parsing failed]');\n            }\n          }\n        }\n        _innerObserver.next(permissions);\n      }, error => {\n        _innerObserver.error(error);\n      }, () => _innerObserver.complete());\n    });\n    return dataObservable.pipe(share());\n  }\n\n  protected buildHeaders(): HttpHeaders {\n    return new HttpHeaders({\n      'Access-Control-Allow-Origin': '*',\n      'Content-Type': 'application/json;charset=UTF-8'\n    });\n  }\n}\n"]}
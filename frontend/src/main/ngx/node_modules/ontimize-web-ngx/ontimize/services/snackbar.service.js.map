{"version":3,"file":"snackbar.service.js","sourceRoot":"","sources":["../../../tmp/ontimize/services/snackbar.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,MAAM,eAAe,CAAC;AACrD,OAAO,EAAE,WAAW,EAAqC,MAAM,mBAAmB,CAAC;AACnF,OAAO,EAAE,UAAU,EAAE,MAAM,MAAM,CAAC;AAElC,OAAO,EAAE,kBAAkB,EAAmB,MAAM,6CAA6C,CAAC;AAElG;IASE,yBACY,QAAkB;QAAlB,aAAQ,GAAR,QAAQ,CAAU;QAE5B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;IACpD,CAAC;IAEM,8BAAI,GAAX,UAAY,OAAe,EAAE,MAAwB;QACnD,IAAM,IAAI,GAAG,IAAI,CAAC;QAClB,IAAM,UAAU,GAAoB,UAAU,CAAC,MAAM,CACnD,UAAA,QAAQ;YACN,IAAM,gBAAgB,GAAa,CAAC,eAAe,CAAC,uBAAuB,CAAC,CAAC;YAC7E,IAAI,MAAM,IAAI,MAAM,CAAC,QAAQ,EAAE;gBAC7B,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;aACxC;YAED,IAAM,SAAS,GAAsB;gBACnC,QAAQ,EAAE,MAAM,IAAI,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,eAAe,CAAC,gBAAgB;gBAChG,UAAU,EAAE,gBAAgB;aAC7B,CAAC;YACF,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,kBAAkB,EAAE,SAAS,CAAC,CAAC;YAErF,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,UAAA,GAAG;gBACvC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACrB,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC;gBAC1C,QAAQ,CAAC,QAAQ,EAAE,CAAC;gBACpB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YAC1B,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;QAClD,CAAC,CACF,CAAC;QACF,OAAO,UAAU,CAAC,SAAS,EAAE,CAAC;IAChC,CAAC;IAvCgB,gCAAgB,GAAW,IAAI,CAAC;IAChC,uCAAuB,GAAW,sBAAsB,CAAC;;gBAJ3E,UAAU;;;gBANU,QAAQ;;IAkD7B,sBAAC;CAAA,AA5CD,IA4CC;SA3CY,eAAe","sourcesContent":["import { Injectable, Injector } from '@angular/core';\nimport { MatSnackBar, MatSnackBarRef, MatSnackBarConfig } from '@angular/material';\nimport { Observable } from 'rxjs';\n\nimport { OSnackBarComponent, OSnackBarConfig } from '../components/snackbar/o-snackbar.component';\n\n@Injectable()\nexport class SnackBarService {\n\n  protected static DEFAULT_DURATION: number = 2000;\n  protected static DEFAULT_CONTAINER_CLASS: string = 'o-snackbar-container';\n\n  protected matSnackBar: MatSnackBar;\n  protected snackBarRef: MatSnackBarRef<OSnackBarComponent>;\n\n  constructor(\n    protected injector: Injector\n  ) {\n    this.matSnackBar = this.injector.get(MatSnackBar);\n  }\n\n  public open(message: string, config?: OSnackBarConfig): Promise<any> {\n    const self = this;\n    const observable: Observable<any> = Observable.create(\n      observer => {\n        const containerClasses: string[] = [SnackBarService.DEFAULT_CONTAINER_CLASS];\n        if (config && config.cssClass) {\n          containerClasses.push(config.cssClass);\n        }\n\n        const matConfig: MatSnackBarConfig = {\n          duration: config && config.milliseconds ? config.milliseconds : SnackBarService.DEFAULT_DURATION,\n          panelClass: containerClasses\n        };\n        self.snackBarRef = self.matSnackBar.openFromComponent(OSnackBarComponent, matConfig);\n\n        self.snackBarRef.onAction().subscribe(arg => {\n          observer.next(arg);\n        });\n        self.snackBarRef.afterDismissed().subscribe(() => {\n          observer.complete();\n          self.snackBarRef = null;\n        });\n\n        self.snackBarRef.instance.open(message, config);\n      }\n    );\n    return observable.toPromise();\n  }\n\n}\n"]}
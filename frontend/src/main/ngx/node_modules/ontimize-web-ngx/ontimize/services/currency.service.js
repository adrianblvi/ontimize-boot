import { Util } from '../utils';
import { NumberService } from './number.service';
var CurrencyService = (function () {
    function CurrencyService(injector) {
        this.injector = injector;
        this._numberService = this.injector.get(NumberService);
        this._symbol = CurrencyService.DEFAULT_CURRENCY_SYMBOL;
        this._symbolPosition = CurrencyService.DEFAULT_CURRENCY_SYMBOL_POSITION;
    }
    Object.defineProperty(CurrencyService.prototype, "symbol", {
        get: function () {
            return this._symbol;
        },
        set: function (value) {
            this._symbol = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CurrencyService.prototype, "symbolPosition", {
        get: function () {
            return this._symbolPosition;
        },
        set: function (value) {
            this._symbolPosition = value;
        },
        enumerable: true,
        configurable: true
    });
    CurrencyService.prototype.getCurrencyValue = function (value, args) {
        var symbol = args ? args.currencySimbol : undefined;
        var symbolPosition = args ? args.currencySymbolPosition : undefined;
        if (!Util.isDefined(symbol)) {
            symbol = this._symbol;
        }
        if (!Util.isDefined(symbolPosition)) {
            symbolPosition = this._symbolPosition;
        }
        var currencyValue = this._numberService.getRealValue(value, args);
        switch (symbolPosition) {
            case 'left':
                currencyValue = symbol + ' ' + currencyValue;
                break;
            case 'right':
                currencyValue = currencyValue + ' ' + symbol;
                break;
        }
        return currencyValue;
    };
    CurrencyService.DEFAULT_CURRENCY_SYMBOL = '$';
    CurrencyService.DEFAULT_CURRENCY_SYMBOL_POSITION = 'left';
    return CurrencyService;
}());
export { CurrencyService };
//# sourceMappingURL=currency.service.js.map
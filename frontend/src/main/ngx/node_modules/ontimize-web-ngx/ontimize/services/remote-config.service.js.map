{"version":3,"file":"remote-config.service.js","sourceRoot":"","sources":["../../../tmp/ontimize/services/remote-config.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable, Injector, HostListener } from '@angular/core';\nimport { Observable, Subscriber, timer, Subscription } from 'rxjs';\n\nimport { AppConfig } from '../config/app-config';\nimport { OntimizeServiceResponse, ORemoteConfiguration, ORemoteConfigurationColumns } from '../types';\nimport { Codes } from '../util/codes';\nimport { LoginService, SessionInfo } from './login.service';\nimport { LocalStorageService } from './local-storage.service';\nimport { Util } from '../util/util';\n\n@Injectable()\nexport class ORemoteConfigurationService {\n\n  public static DEFAULT_COLUMN_USER = 'USER_';\n  public static DEFAULT_COLUMN_APPID = 'APP_UUID';\n  public static DEFAULT_COLUMN_CONFIG = 'CONFIGURATION';\n  public static DEFAULT_STORAGE_TIMEOUT = 60000;\n\n  protected localStorageService: LocalStorageService;\n  protected loginService: LoginService;\n  protected httpClient: HttpClient;\n  protected _appConfig: AppConfig;\n  protected _url: string;\n  protected _uuid: string;\n  protected _timeout: number;\n  protected timerSubscription: Subscription;\n  protected storeSubscription: Subscription;\n\n  protected _columns: ORemoteConfigurationColumns = {\n    user: ORemoteConfigurationService.DEFAULT_COLUMN_USER,\n    appId: ORemoteConfigurationService.DEFAULT_COLUMN_APPID,\n    configuration: ORemoteConfigurationService.DEFAULT_COLUMN_CONFIG\n  };\n\n  @HostListener('window:beforeunload', ['$event'])\n  beforeunloadHandler() {\n    this.finalize().subscribe(() => {\n      //\n    });\n  }\n\n  constructor(protected injector: Injector) {\n    this.httpClient = this.injector.get(HttpClient);\n    this._appConfig = this.injector.get(AppConfig);\n    this.loginService = this.injector.get(LoginService);\n    this.localStorageService = this.injector.get(LocalStorageService);\n\n    this.httpClient = this.injector.get(HttpClient);\n    this._uuid = this._appConfig.getConfiguration().uuid;\n\n    if (this._appConfig.useRemoteConfiguration()) {\n      this._url = this._appConfig.getRemoteConfigurationEndpoint();\n\n      const remoteConfig: ORemoteConfiguration = this._appConfig.getRemoteConfigurationConfig();\n      this._columns = (remoteConfig && remoteConfig.columns) ? Object.assign(this._columns, remoteConfig.columns) : this._columns;\n\n      this._timeout = (remoteConfig && remoteConfig.timeout) ? remoteConfig.timeout : ORemoteConfigurationService.DEFAULT_STORAGE_TIMEOUT;\n      const self = this;\n      this.localStorageService.onSetLocalStorage.subscribe(() => {\n        if (self.storeSubscription) {\n          self.storeSubscription.unsubscribe();\n        }\n      });\n    }\n  }\n\n  public getUserConfiguration(): Observable<any> {\n    const self = this;\n    const observable = new Observable((observer: Subscriber<OntimizeServiceResponse>) => {\n      const sessionInfo = self.loginService.getSessionInfo();\n      if (!self.hasSession(sessionInfo)) {\n        observer.error();\n        return;\n      }\n      const url = self._url + '/search';\n      const body: any = {};\n      body[self._columns.user] = sessionInfo.user;\n      body[self._columns.appId] = self._uuid;\n      const options = {\n        headers: self.buildHeaders()\n      };\n      self.httpClient.post(url, body, options).subscribe((resp: OntimizeServiceResponse) => {\n        if (resp && resp.code === Codes.ONTIMIZE_SUCCESSFUL_CODE && Util.isDefined(resp.data)) {\n          let storedConf;\n          if (Util.isArray(resp.data)) {\n            storedConf = resp.data[0][self._columns.configuration];\n          } else {\n            storedConf = resp.data;\n          }\n          if (Util.isDefined(storedConf)) {\n            let componentsData;\n            try {\n              let decoded = atob(storedConf);\n              componentsData = JSON.parse(decoded);\n            } catch (e) {\n              componentsData = {};\n            }\n            self.localStorageService.storeSessionUserComponentsData(componentsData);\n          }\n          observer.next(resp);\n        } else {\n          observer.error();\n        }\n      },\n        (error) => observer.error(error),\n        () => observer.complete());\n    });\n    return observable;\n  }\n\n  public storeUserConfiguration(): Observable<any> {\n    const self = this;\n    if (self.storeSubscription) {\n      self.storeSubscription.unsubscribe();\n    }\n    const observable = new Observable((observer: Subscriber<OntimizeServiceResponse>) => {\n      const sessionInfo = self.loginService.getSessionInfo();\n      if (!self._appConfig.useRemoteConfiguration() || !self.hasSession(sessionInfo)) {\n        observer.next();\n        observer.complete();\n        return;\n      }\n      const url = self._url;\n      const body: any = { filter: {}, data: {} };\n      body.filter[self._columns.user] = sessionInfo.user;\n      body.filter[self._columns.appId] = self._uuid;\n      let userData = self.localStorageService.getSessionUserComponentsData() || {};\n      try {\n        userData = btoa(JSON.stringify(userData));\n      } catch (e) {\n        userData = '';\n      }\n      body.data[self._columns.configuration] = userData;\n      const options = {\n        headers: self.buildHeaders()\n      };\n      self.httpClient.put(url, body, options).subscribe((resp: OntimizeServiceResponse) => {\n        if (resp && resp.code === Codes.ONTIMIZE_SUCCESSFUL_CODE) {\n          observer.next(resp);\n        } else {\n          observer.error();\n        }\n      }, (error) => observer.error(error),\n        () => observer.complete());\n    });\n    return observable;\n  }\n\n  public initialize(): Observable<any> {\n    const self = this;\n    return new Observable(observer => {\n      if (self._appConfig.useRemoteConfiguration()) {\n        self.timerSubscription = timer(self._timeout, self._timeout).subscribe(() => {\n          self.storeSubscription = self.storeUserConfiguration().subscribe(() => {\n            //\n          });\n        });\n\n        self.getUserConfiguration().subscribe(() => {\n          observer.next();\n        }, () => {\n          observer.next();\n        });\n      } else {\n        observer.next();\n      }\n    });\n  }\n\n  public finalize(): Observable<any> {\n    if (this.timerSubscription) {\n      this.timerSubscription.unsubscribe();\n    }\n    return this.storeUserConfiguration();\n  }\n\n  protected hasSession(sessionInfo: SessionInfo): boolean {\n    return Util.isDefined(sessionInfo) && Util.isDefined(sessionInfo.user) && Util.isDefined(sessionInfo.id);\n  }\n\n  protected buildHeaders(): HttpHeaders {\n    const sessionInfo = this.loginService.getSessionInfo();\n    return new HttpHeaders({\n      'Access-Control-Allow-Origin': '*',\n      'Content-Type': 'application/json;charset=UTF-8',\n      'Authorization': 'Bearer ' + sessionInfo.id\n    });\n  }\n\n}\n"]}
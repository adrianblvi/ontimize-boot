import { Injectable, Injector } from '@angular/core';
import { MatDialog } from '@angular/material';
import { Observable } from 'rxjs';
import { ODialogComponent } from '../components';
var DialogService = (function () {
    function DialogService(injector) {
        this.injector = injector;
        this.ng2Dialog = this.injector.get(MatDialog);
    }
    Object.defineProperty(DialogService.prototype, "dialog", {
        get: function () {
            if (this.dialogRef) {
                return this.dialogRef.componentInstance;
            }
            return undefined;
        },
        enumerable: true,
        configurable: true
    });
    DialogService.prototype.alert = function (title, message, config) {
        var self = this;
        var observable = Observable.create(function (observer) {
            self.openDialog(observer);
            self.dialogRef.componentInstance.alert(title, message, config);
        });
        return observable.toPromise();
    };
    DialogService.prototype.info = function (title, message, config) {
        var self = this;
        var observable = Observable.create(function (observer) {
            self.openDialog(observer);
            self.dialogRef.componentInstance.info(title, message, config);
        });
        return observable.toPromise();
    };
    DialogService.prototype.warn = function (title, message, config) {
        var self = this;
        var observable = Observable.create(function (observer) {
            self.openDialog(observer);
            self.dialogRef.componentInstance.warn(title, message, config);
        });
        return observable.toPromise();
    };
    DialogService.prototype.error = function (title, message, config) {
        var self = this;
        var observable = Observable.create(function (observer) {
            self.openDialog(observer);
            self.dialogRef.componentInstance.error(title, message, config);
        });
        return observable.toPromise();
    };
    DialogService.prototype.confirm = function (title, message, config) {
        var self = this;
        var observable = Observable.create(function (observer) {
            self.openDialog(observer);
            self.dialogRef.componentInstance.confirm(title, message, config);
        });
        return observable.toPromise();
    };
    DialogService.prototype.openDialog = function (observer) {
        var _this = this;
        var cfg = {
            role: 'alertdialog',
            disableClose: true,
            panelClass: ['o-dialog-class', 'o-dialog-service']
        };
        this.dialogRef = this.ng2Dialog.open(ODialogComponent, cfg);
        this.dialogRef.afterClosed().subscribe(function (result) {
            result = result === undefined ? false : result;
            observer.next(result);
            observer.complete();
            _this.dialogRef = null;
        });
    };
    DialogService.decorators = [
        { type: Injectable },
    ];
    DialogService.ctorParameters = function () { return [
        { type: Injector }
    ]; };
    return DialogService;
}());
export { DialogService };
//# sourceMappingURL=dialog.service.js.map
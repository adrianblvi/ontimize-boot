{"version":3,"file":"ontimize-ee.service.js","sourceRoot":"","sources":["../../../tmp/ontimize/services/ontimize-ee.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable, Injector } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { share } from 'rxjs/operators';\nimport { AppConfig, Config } from '../config/app-config';\nimport { LoginService } from '../services';\nimport { Codes, IAuthService, IDataService, ServiceUtils, Util } from '../utils';\nimport { OntimizeServiceResponseParser } from './parser/o-service-response.parser';\n\n@Injectable()\nexport class OntimizeEEService implements IAuthService, IDataService {\n\n  public path: string = '';\n  public kv: Object = {};\n  public av: Array<string> = [];\n  public sqltypes: Object = {};\n  public pagesize: number = 10;\n  public offset: number = 0;\n  public orderby: Array<Object> = [];\n  public totalsize: number = -1;\n\n  protected httpClient: HttpClient;\n  protected _sessionid: string;\n  protected _urlBase: string;\n  protected _appConfig: Config;\n  protected _config: AppConfig;\n  protected _startSessionPath: string;\n  protected responseParser: OntimizeServiceResponseParser;\n\n  constructor(protected injector: Injector) {\n    this.httpClient = this.injector.get(HttpClient);\n    this._config = this.injector.get(AppConfig);\n    this._appConfig = this._config.getConfiguration();\n    this.responseParser = this.injector.get(OntimizeServiceResponseParser);\n  }\n\n  public getDefaultServiceConfiguration(serviceName?: string) {\n    let loginService = this.injector.get(LoginService);\n    let configuration = this._config.getServiceConfiguration();\n\n    let servConfig = {};\n    if (serviceName && configuration.hasOwnProperty(serviceName)) {\n      servConfig = configuration[serviceName];\n    }\n    servConfig[Codes.SESSION_KEY] = loginService.getSessionInfo();\n    return servConfig;\n  }\n\n  public configureService(config: any): void {\n    this._urlBase = config.urlBase ? config.urlBase : this._appConfig['apiEndpoint'];\n    this._sessionid = config.session ? config.session.id : -1;\n    this.path = config.path;\n    this._startSessionPath = this._appConfig['startSessionPath'] ? this._appConfig['startSessionPath'] : '/users/login';\n    //TODO init other params\n  }\n\n  public get urlBase(): string {\n    return this._urlBase;\n  }\n\n  public set urlBase(value: string) {\n    this._urlBase = value;\n  }\n\n  public startsession(user: string, password: string) {\n    const url = this.urlBase + this._startSessionPath;\n    const options: any = {\n      headers: new HttpHeaders({\n        'Authorization': 'Basic ' + btoa(user + ':' + password)\n      }),\n      'observe': 'response'\n    };\n    const self = this;\n    const startSessionObservable = new Observable(_startSessionObserver => {\n      self.httpClient.post(url, null, options).subscribe((resp: any) => {\n        if (Util.isDefined(resp) && Util.isDefined(resp.headers) && Util.isDefined(resp.headers.get('X-Auth-Token'))) {\n          _startSessionObserver.next(resp.headers.get('X-Auth-Token'));\n        } else {\n          // Invalid sessionId...\n          _startSessionObserver.error('Invalid user or password');\n        }\n      }, error => _startSessionObserver.error(error));\n    });\n    return startSessionObservable;\n  }\n\n  public endsession(user: string, sessionId: any): Observable<any> {\n    let _closeSessionObserver: any;\n    const closeSessionObservable = new Observable(observer => _closeSessionObserver = observer).pipe(share());\n    setTimeout(() => {\n      _closeSessionObserver.next(0);\n    }, 0);\n    return closeSessionObservable;\n  }\n\n  public hassession(user: string, sessionId: any): Observable<any> {\n    let _observer: any;\n    const observable = new Observable(observer => _observer = observer).pipe(share());\n    return observable;\n  }\n\n  public query(kv?: Object, av?: Array<string>, entity?: string, sqltypes?: Object): Observable<any> {\n    //TODO improve this -> merge between global conf and specific params of method calling\n    kv = (Util.isDefined(kv)) ? kv : this.kv;\n    av = (Util.isDefined(av)) ? av : this.av;\n    sqltypes = (Util.isDefined(sqltypes)) ? sqltypes : this.sqltypes;\n\n    const url = this._urlBase + this.path + '/' + entity + '/search';\n    const options = {\n      headers: this.buildHeaders()\n    };\n    const body = JSON.stringify({\n      filter: kv,\n      columns: av,\n      sqltypes: sqltypes\n    });\n    const self = this;\n    const dataObservable: Observable<any> = new Observable(_innerObserver => {\n      self.httpClient.post(url, body, options).subscribe(resp => {\n        self.parseSuccessfulQueryResponse(resp, _innerObserver);\n      }, error => {\n        self.parseUnsuccessfulQueryResponse(error, _innerObserver);\n      }, () => _innerObserver.complete());\n    });\n    return dataObservable.pipe(share());\n  }\n\n  public advancedQuery(kv?: Object, av?: Array<string>, entity?: string, sqltypes?: Object,\n    offset?: number, pagesize?: number, orderby?: Array<Object>): Observable<any> {\n\n    //TODO improve this -> merge between global conf and specific params of method calling\n    kv = (Util.isDefined(kv)) ? kv : this.kv;\n    av = (Util.isDefined(av)) ? av : this.av;\n    sqltypes = (Util.isDefined(sqltypes)) ? sqltypes : this.sqltypes;\n    orderby = (Util.isDefined(orderby)) ? orderby : this.orderby;\n\n    offset = (Util.isDefined(offset)) ? offset : this.offset;\n    pagesize = (Util.isDefined(pagesize)) ? pagesize : this.pagesize;\n\n    const url = this._urlBase + this.path + '/' + entity + '/advancedsearch';\n    const options = {\n      headers: this.buildHeaders()\n    };\n    const body = JSON.stringify({\n      filter: kv,\n      columns: av,\n      sqltypes: sqltypes,\n      offset: offset,\n      pageSize: pagesize,\n      orderBy: orderby\n    });\n    const self = this;\n    const dataObservable: Observable<any> = new Observable(_innerObserver => {\n      self.httpClient.post(url, body, options).subscribe(resp => {\n        self.parseSuccessfulAdvancedQueryResponse(resp, _innerObserver);\n      }, error => {\n        self.parseUnsuccessfulAdvancedQueryResponse(error, _innerObserver);\n      }, () => _innerObserver.complete());\n    });\n    return dataObservable.pipe(share());\n  }\n\n  public insert(av: Object = {}, entity: string, sqltypes?: Object): Observable<any> {\n    const url = this._urlBase + this.path + '/' + entity;\n    const options = {\n      headers: this.buildHeaders()\n    };\n    const body = JSON.stringify({\n      data: av,\n      sqltypes: sqltypes\n    });\n    const self = this;\n    const dataObservable: Observable<any> = new Observable(_innerObserver => {\n      self.httpClient.post(url, body, options).subscribe(resp => {\n        self.parseSuccessfulInsertResponse(resp, _innerObserver);\n      }, error => {\n        self.parseUnsuccessfulInsertResponse(error, _innerObserver);\n      }, () => _innerObserver.complete());\n    });\n    return dataObservable.pipe(share());\n  }\n\n  public update(kv: Object = {}, av: Object = {}, entity?: string, sqltypes?: Object): Observable<any> {\n    const url = this._urlBase + this.path + '/' + entity;\n    const options = {\n      headers: this.buildHeaders()\n    };\n    const body = JSON.stringify({\n      filter: kv,\n      data: av,\n      sqltypes: sqltypes\n    });\n    const self = this;\n    const dataObservable: Observable<any> = new Observable(_innerObserver => {\n      self.httpClient.put(url, body, options).subscribe(resp => {\n        self.parseSuccessfulUpdateResponse(resp, _innerObserver);\n      }, error => {\n        self.parseUnsuccessfulUpdateResponse(error, _innerObserver);\n      }, () => _innerObserver.complete());\n    });\n    return dataObservable.pipe(share());\n  }\n\n  public delete(kv: Object = {}, entity?: string, sqltypes?: Object): Observable<any> {\n    const url = this._urlBase + this.path + '/' + entity;\n    const headers: HttpHeaders = this.buildHeaders();\n    const options: any = {\n      headers: headers,\n      body: JSON.stringify({\n        filter: kv,\n        sqltypes: sqltypes\n      })\n    };\n    const self = this;\n    const dataObservable: Observable<any> = new Observable(_innerObserver => {\n      self.httpClient.delete(url, options).subscribe(resp => {\n        self.parseSuccessfulDeleteResponse(resp, _innerObserver);\n      }, error => {\n        self.parseUnsuccessfulDeleteResponse(error, _innerObserver);\n      }, () => _innerObserver.complete());\n    });\n    return dataObservable.pipe(share());\n  }\n\n  redirectLogin(sessionExpired: boolean = false) {\n    let router = this.injector.get(Router);\n    const loginService = this.injector.get(LoginService);\n    if (sessionExpired) {\n      loginService.sessionExpired();\n    }\n    ServiceUtils.redirectLogin(router, sessionExpired);\n  }\n\n  protected buildHeaders(): HttpHeaders {\n    return new HttpHeaders({\n      'Access-Control-Allow-Origin': '*',\n      'Content-Type': 'application/json;charset=UTF-8',\n      'Authorization': 'Bearer ' + this._sessionid\n    });\n  }\n\n  /*\n   * Successful response parsers, there is one parser for each CRUD method which calls to the common parser.\n   * User can overwrite the chosen methods parsers or the common parser\n   */\n  protected parseSuccessfulResponse(resp: any, _innerObserver: any) {\n    this.responseParser.parseSuccessfulResponse(resp, _innerObserver, this);\n  }\n\n  protected parseSuccessfulQueryResponse(resp: any, _innerObserver: any) {\n    this.parseSuccessfulResponse(resp, _innerObserver);\n  }\n\n  protected parseSuccessfulAdvancedQueryResponse(resp: any, _innerObserver: any) {\n    this.parseSuccessfulResponse(resp, _innerObserver);\n  }\n\n  protected parseSuccessfulInsertResponse(resp: any, _innerObserver: any) {\n    this.parseSuccessfulResponse(resp, _innerObserver);\n  }\n\n  protected parseSuccessfulUpdateResponse(resp: any, _innerObserver: any) {\n    this.parseSuccessfulResponse(resp, _innerObserver);\n  }\n\n  protected parseSuccessfulDeleteResponse(resp: any, _innerObserver: any) {\n    this.parseSuccessfulResponse(resp, _innerObserver);\n  }\n\n  /*\n   * Unsuccessful response parsers, there is one parser for each CRUD method which calls to the common parser.\n   * User can overwrite the chosen methods parsers or the common parser\n   */\n  protected parseUnsuccessfulResponse(error: any, _innerObserver: any) {\n    this.responseParser.parseUnsuccessfulResponse(error, _innerObserver, this);\n  }\n\n  protected parseUnsuccessfulQueryResponse(resp: any, _innerObserver: any) {\n    this.parseUnsuccessfulResponse(resp, _innerObserver);\n  }\n\n  protected parseUnsuccessfulAdvancedQueryResponse(resp: any, _innerObserver: any) {\n    this.parseUnsuccessfulResponse(resp, _innerObserver);\n  }\n\n  protected parseUnsuccessfulInsertResponse(resp: any, _innerObserver: any) {\n    this.parseUnsuccessfulResponse(resp, _innerObserver);\n  }\n\n  protected parseUnsuccessfulUpdateResponse(resp: any, _innerObserver: any) {\n    this.parseUnsuccessfulResponse(resp, _innerObserver);\n  }\n\n  protected parseUnsuccessfulDeleteResponse(resp: any, _innerObserver: any) {\n    this.parseUnsuccessfulResponse(resp, _innerObserver);\n  }\n\n}\n"]}
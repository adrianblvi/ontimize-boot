{"version":3,"file":"navigation.service.js","sourceRoot":"","sources":["../../../tmp/ontimize/services/navigation.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, Injector, EventEmitter } from '@angular/core';\nimport { ActivatedRoute, NavigationEnd, Router, ActivatedRouteSnapshot, UrlSegment } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map, filter } from 'rxjs/operators';\n\nimport { Codes, Util } from '../utils';\nimport { ObservableWrapper } from '../util/async';\nimport { ILocalStorageComponent, LocalStorageService } from './local-storage.service';\n\nexport type ONavigationRoutes = {\n  mainFormLayoutManagerComponent?: boolean;\n  detailFormRoute: string;\n  editFormRoute: string;\n  insertFormRoute: string;\n};\n\nexport class ONavigationItem {\n  url: string;\n  queryParams: Object;\n  text: string;\n  displayText: string;\n  terminal: boolean;\n  activeFormMode: string;\n  formRoutes: ONavigationRoutes;\n  formLayoutRoutes: ONavigationRoutes;\n  keysValues: any;\n  queryConfiguration: any;\n\n  constructor(value: Object) {\n    this.url = value['url'] ? value['url'] : '';\n    this.queryParams = value[Codes.QUERY_PARAMS] ? value[Codes.QUERY_PARAMS] : {};\n    this.text = value['text'] ? value['text'] : '';\n    this.displayText = value['displayText'] ? value['displayText'] : '';\n    this.formRoutes = value['formRoutes'];\n    this.activeFormMode = value['activeFormMode'];\n    this.keysValues = value['keysValues'];\n    this.queryConfiguration = value['queryConfiguration'];\n  }\n\n  getActiveModePath(): string {\n    let result;\n    if (Util.isDefined(this.activeFormMode)) {\n      result = (this.formRoutes || {})[this.activeFormMode];\n    }\n    return result;\n  }\n\n  findAndMergeNavigationItem(storageData: ONavigationItem[] = []) {\n    const storedItem: ONavigationItem = storageData.find(element => { return element.url === this.url; });\n    if (storedItem) {\n      this[Codes.QUERY_PARAMS] = storedItem[Codes.QUERY_PARAMS];\n      this.displayText = storedItem.displayText;\n      this.formRoutes = storedItem.formRoutes;\n      this.formLayoutRoutes = storedItem.formLayoutRoutes;\n      this.activeFormMode = storedItem.activeFormMode;\n      this.keysValues = storedItem.keysValues;\n      this.queryConfiguration = storedItem.queryConfiguration;\n    }\n  }\n\n  isInsertFormRoute(): boolean {\n    return this.activeFormMode === 'insertFormRoute';\n  }\n\n  getInsertFormRoute(): string {\n    const routes = this.formRoutes;\n    return routes ? (routes.insertFormRoute || Codes.DEFAULT_INSERT_ROUTE) : Codes.DEFAULT_INSERT_ROUTE;\n  }\n\n  getEditFormRoute(): string {\n    const routes = this.formRoutes;\n    return routes ? (routes.editFormRoute || Codes.DEFAULT_EDIT_ROUTE) : Codes.DEFAULT_EDIT_ROUTE;\n  }\n\n  getDetailFormRoute(): string {\n    const routes = this.formRoutes;\n    return routes ? (routes.detailFormRoute || Codes.DEFAULT_DETAIL_ROUTE) : Codes.DEFAULT_DETAIL_ROUTE;\n  }\n\n  isMainFormLayoutManagerComponent(): boolean {\n    return Util.isDefined(this.formLayoutRoutes);\n  }\n\n  getFormRoutes(): ONavigationRoutes {\n    return this.formRoutes;\n  }\n\n  setFormRoutes(arg: ONavigationRoutes) {\n    if (arg && arg.mainFormLayoutManagerComponent) {\n      this.formLayoutRoutes = arg;\n    } else {\n      this.formRoutes = arg;\n    }\n  }\n\n  deleteActiveFormMode() {\n    this.activeFormMode = undefined;\n  }\n}\n\nconst MAXIMIUM_NAVIGATION_HEAP_SIZE = 15;\n\n@Injectable()\nexport class NavigationService implements ILocalStorageComponent {\n\n  public static NAVIGATION_STORAGE_KEY: string = 'nav_service';\n\n  public currentTitle: string = null;\n  public visible: boolean = true;\n\n  protected navigationItems: Array<ONavigationItem> = [];\n  protected allNavigationItems: ONavigationItem[] = [];\n\n  protected router: Router;\n\n  protected localStorageService: LocalStorageService;\n  protected location: Location;\n\n  private navigationEventsSource: ReplaySubject<Array<ONavigationItem>> = new ReplaySubject<Array<ONavigationItem>>(1);\n  public navigationEvents$: Observable<Array<ONavigationItem>> = this.navigationEventsSource.asObservable();\n\n  private _titleEmitter: EventEmitter<any> = new EventEmitter();\n  private _visibleEmitter: EventEmitter<boolean> = new EventEmitter<boolean>();\n  private _sidenavEmitter: EventEmitter<any> = new EventEmitter();\n\n  constructor(\n    protected injector: Injector\n  ) {\n    this.router = this.injector.get(Router);\n    this.localStorageService = this.injector.get(LocalStorageService);\n    this.location = this.injector.get(Location);\n    this.location.subscribe(val => {\n      const previousRoute = this.getPreviousRouteData();\n      const qParams = Object.keys(previousRoute.queryParams);\n      let arr = [];\n      qParams.forEach(function (p) {\n        arr.push(`${p}=${previousRoute.queryParams[p]}`);\n      });\n      let fullUrl = `/${previousRoute.url}`;\n      if (arr.length > 0) {\n        fullUrl = `/${previousRoute.url}?${arr.join('&')}`;\n      }\n      if (fullUrl === val.url) {\n        this.navigationItems.pop();\n      }\n    });\n  }\n\n  initialize(): void {\n    const self = this;\n    const navEndEvents = this.router.events.pipe(filter(event => event instanceof NavigationEnd));\n    navEndEvents\n      .pipe(map(() => this.router.routerState.root))\n      .pipe(map(route => {\n        while (route.firstChild) {\n          route = route.firstChild;\n        }\n        return route;\n      }))\n      .pipe(filter(route => route.outlet === 'primary'))\n      .subscribe(self.parseNavigationItems.bind(self));\n  }\n\n  protected parseNavigationItems(activatedRoute: ActivatedRoute) {\n    let storedNavigation: ONavigationItem[] = this.getStoredData();\n    let route: ActivatedRouteSnapshot = this.router.routerState.root.snapshot;\n    let url = '';\n    let navigationItems: Array<ONavigationItem> = [];\n    while (Util.isDefined(route.firstChild)) {\n      route = route.firstChild;\n      if (!route || !route.url || route.routeConfig === null || !route.routeConfig.path) {\n        continue;\n      }\n      const lastNavData: ONavigationItem = navigationItems[navigationItems.length - 1];\n      const parsedRoute: any = this.parseRoute(url, route.url, lastNavData);\n      url = parsedRoute.url;\n      if (storedNavigation.length > 1 && parsedRoute.routeArr.length > 0) {\n        const lastStored: any = storedNavigation[storedNavigation.length - 1];\n        if (lastStored.url === url) {\n          const newItem = new ONavigationItem(lastStored);\n          const newItemActivePath = newItem.getActiveModePath();\n          if (!newItemActivePath || parsedRoute.routeArr.length > newItemActivePath.split('/').length) {\n            navigationItems.push(newItem);\n            const parsed: any = this.parseRoute(url, parsedRoute.routeArr, newItem);\n            url = parsed.url;\n            parsedRoute.text = parsed.text;\n          }\n        }\n      }\n      let formRoutes = undefined;\n      if (lastNavData && lastNavData.formLayoutRoutes) {\n        formRoutes = Object.assign({}, lastNavData.formLayoutRoutes);\n      }\n      const navigationItem = new ONavigationItem({\n        url: url,\n        queryParams: route.queryParams,\n        text: parsedRoute.text,\n        formRoutes: formRoutes,\n        activeFormMode: formRoutes ? (lastNavData && lastNavData.activeFormMode) : undefined\n      });\n      navigationItem.findAndMergeNavigationItem(storedNavigation);\n      navigationItems.push(navigationItem);\n    }\n    if (navigationItems.length > 1) {\n      navigationItems[navigationItems.length - 1].terminal = true;\n    }\n    const mergedNavigation = this.mergeNavigationItems(navigationItems, storedNavigation);\n    this.setNavigationItems(navigationItems, mergedNavigation);\n  }\n\n  protected parseRoute(url: string, routeSegments: UrlSegment[], navData: ONavigationItem): any {\n    let text = '';\n    let modePathArr = [];\n    let modePath = navData ? navData.getActiveModePath() : undefined;\n    if (modePath && modePath.length > 0) {\n      modePathArr = modePath.split('/');\n      const detailRoute = navData.getDetailFormRoute();\n      if (Util.isDefined(detailRoute)) {\n        url += url.length > 0 ? ('/' + detailRoute) : detailRoute;\n      }\n    }\n    let routeArr = [];\n    for (let i = 0, len = routeSegments.length; i < len; i++) {\n      const s: UrlSegment = routeSegments[i];\n      const notModePath: boolean = modePathArr.indexOf(s.path) === -1;\n      if (notModePath && text.length === 0) {\n        text = text.length > 0 ? ('/' + s.path) : s.path;\n        url += url.length > 0 ? ('/' + s.path) : s.path;\n      } else if (notModePath) {\n        url += url.length > 0 ? ('/' + s.path) : s.path;\n      } else {\n        routeArr.push(s);\n      }\n    }\n    let activeMode = navData ? navData.activeFormMode : undefined;\n    if (modePath && modePath.length > 0 && (activeMode === 'editFormRoute') || (activeMode === 'insertFormRoute')) {\n      url += url.length > 0 ? ('/' + modePath) : modePath;\n    }\n    return {\n      url: url,\n      text: text,\n      routeArr: routeArr\n    };\n  }\n\n  public setNavigationItems(navigationItems: ONavigationItem[], mergedNavigationItems: ONavigationItem[]) {\n    this.navigationItems = mergedNavigationItems;\n    this.storeNavigation();\n    this.navigationEventsSource.next(navigationItems);\n  }\n\n  public getDataToStore(): Object {\n    return this.navigationItems;\n  }\n\n  public getComponentKey(): string {\n    return NavigationService.NAVIGATION_STORAGE_KEY;\n  }\n\n  protected storeNavigation(): void {\n    if (this.localStorageService) {\n      this.localStorageService.updateComponentStorage(this);\n    }\n  }\n\n  public setTitle(title: string): void {\n    this.currentTitle = title;\n    this._emitTitleChanged(this.currentTitle);\n  }\n\n  public setVisible(visible: boolean): void {\n    this.visible = visible;\n    this._emitVisibleChanged(this.visible);\n  }\n\n  public openSidenav() {\n    this._emitOpenSidenav();\n  }\n\n  public closeSidenav() {\n    this._emitCloseSidenav();\n  }\n\n  /**\n * Subscribe to title updates\n */\n  public onTitleChange(onNext: (value: any) => void): Object {\n    return ObservableWrapper.subscribe(this._titleEmitter, onNext);\n  }\n\n  public onVisibleChange(onNext: (value: boolean) => void): Object {\n    return ObservableWrapper.subscribe(this._visibleEmitter, onNext);\n  }\n\n  public onSidenavChange(onNext: (value: any) => void): Object {\n    return ObservableWrapper.subscribe(this._sidenavEmitter, onNext);\n  }\n\n  private _emitTitleChanged(title): void {\n    ObservableWrapper.callEmit(this._titleEmitter, title);\n  }\n\n  private _emitVisibleChanged(visible): void {\n    ObservableWrapper.callEmit(this._visibleEmitter, visible);\n  }\n\n  private _emitOpenSidenav() {\n    ObservableWrapper.callEmit(this._sidenavEmitter, 'open');\n  }\n\n  private _emitCloseSidenav() {\n    ObservableWrapper.callEmit(this._sidenavEmitter, 'close');\n  }\n\n  storeFormRoutes(routes: ONavigationRoutes, activeMode: string, queryConf: any = undefined) {\n    if (this.navigationItems.length > 0) {\n      this.navigationItems[this.navigationItems.length - 1].setFormRoutes(routes);\n      this.navigationItems[this.navigationItems.length - 1].activeFormMode = activeMode;\n      if (queryConf) {\n        this.navigationItems[this.navigationItems.length - 1].keysValues = queryConf.keysValues;\n        delete queryConf.keysValues;\n        if (Object.keys(queryConf).length > 0) {\n          this.navigationItems[this.navigationItems.length - 1].queryConfiguration = queryConf;\n        }\n      }\n      this.storeNavigation();\n    }\n  }\n\n  protected getStoredData(): any[] {\n    let storageData: any = this.localStorageService.getComponentStorage(this);\n    let result = [];\n    Object.keys(storageData).forEach(key => result.push(new ONavigationItem(storageData[key])));\n    return result;\n  }\n\n  getPreviousRouteData(): ONavigationItem {\n    let result: ONavigationItem;\n    const len = this.navigationItems.length;\n    if (len >= 2) {\n      result = this.navigationItems[len - 2];\n      if (result && result.formRoutes && result.formRoutes.mainFormLayoutManagerComponent && this.navigationItems[len - 3]) {\n        const parent = this.navigationItems[len - 3];\n        if (parent.isMainFormLayoutManagerComponent()) {\n          result = parent;\n        }\n      }\n    }\n    return result;\n  }\n\n  removeLastItem() {\n    this.navigationItems.pop();\n    this.storeNavigation();\n  }\n\n  getLastItem(): ONavigationItem {\n    let result;\n    if (this.navigationItems.length > 0) {\n      result = this.navigationItems[this.navigationItems.length - 1];\n    }\n    return result;\n  }\n\n  deleteActiveFormMode(arg: ONavigationItem) {\n    arg.deleteActiveFormMode();\n    this.storeNavigation();\n  }\n\n  protected mergeNavigationItems(navigationItems: ONavigationItem[], storedNavigation: ONavigationItem[]): ONavigationItem[] {\n    if (storedNavigation.length === 0 || storedNavigation.length > MAXIMIUM_NAVIGATION_HEAP_SIZE) {\n      return navigationItems;\n    }\n    let result: ONavigationItem[] = [];\n\n    let lastCommonIndex;\n    for (let i = navigationItems.length - 1; i >= 0; i--) {\n      for (let j = storedNavigation.length - 1; j >= 0; j--) {\n        if (storedNavigation[j].url === navigationItems[i].url && i !== navigationItems.length - 1) {\n          lastCommonIndex = i;\n          break;\n        }\n      }\n      if (lastCommonIndex !== undefined) {\n        break;\n      }\n    }\n\n    storedNavigation.forEach(s => result.push(s));\n\n    if (lastCommonIndex !== undefined) {\n      for (let j = lastCommonIndex + 1, len = navigationItems.length; j < len; j++) {\n        if (storedNavigation[storedNavigation.length - 1].url !== navigationItems[j].url) {\n          result.push(navigationItems[j]);\n        }\n      }\n    }\n    return result;\n  }\n\n}\n"]}
{"version":3,"file":"login.service.js","sourceRoot":"","sources":["../../../tmp/ontimize/services/login.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { EventEmitter, Injectable, Injector } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { combineLatest, Observable } from 'rxjs';\nimport { share } from 'rxjs/operators';\nimport { AppConfig, Config } from '../config/app-config';\nimport { DialogService, OntimizeService, ORemoteConfigurationService, PermissionsService } from '../services';\nimport { Codes, IAuthService, ObservableWrapper, ServiceUtils } from '../utils';\n\nexport interface SessionInfo {\n  id?: number;\n  user?: string;\n}\n\nexport interface ILoginService {\n  login(user: string, password: string): Observable<any>;\n  logout(): void;\n  sessionExpired(): void;\n  isLoggedIn(): boolean;\n}\n\n@Injectable()\nexport class LoginService implements ILoginService {\n\n  public onLogin: EventEmitter<any> = new EventEmitter();\n  public onLogout: EventEmitter<any> = new EventEmitter();\n\n  private _user: string;\n  private _localStorageKey: string;\n  private _config: Config;\n  private router: Router;\n  private ontService: OntimizeService;\n  private dialogService: DialogService;\n\n  constructor(protected injector: Injector) {\n    this._config = this.injector.get(AppConfig).getConfiguration();\n    this.router = this.injector.get(Router);\n    this._localStorageKey = this._config['uuid'];\n    const sessionInfo = this.getSessionInfo();\n    if (sessionInfo && sessionInfo.id && sessionInfo.user && sessionInfo.user.length > 0) {\n      this._user = sessionInfo.user;\n    }\n    this.dialogService = injector.get(DialogService);\n  }\n\n  public get user(): string {\n    return this._user;\n  }\n\n  public get localStorageKey(): string {\n    return this._localStorageKey;\n  }\n\n  public configureOntimizeAuthService(config: Object): void {\n    this.ontService = this.injector.get(OntimizeService);\n    const servConf = {};\n    servConf[Codes.SESSION_KEY] = this.getSessionInfo();\n    this.ontService.configureService(servConf);\n  }\n\n  public retrieveAuthService(): Promise<IAuthService> {\n    return new Promise<IAuthService>(resolve => {\n      if (this.ontService !== undefined) {\n        resolve(this.ontService);\n      } else {\n        this.configureOntimizeAuthService(this._config);\n        resolve(this.ontService);\n      }\n    });\n  }\n\n  public login(user: string, password: string): Observable<any> {\n    this._user = user;\n    const self = this;\n    let innerObserver: any;\n    const dataObservable = new Observable(observer => innerObserver = observer).pipe(share());\n\n    this.retrieveAuthService().then(service => {\n      service.startsession(user, password).subscribe(resp => {\n        self.onLoginSuccess(resp);\n        const permissionsService = self.injector.get(PermissionsService);\n        const remoteConfigService = self.injector.get(ORemoteConfigurationService);\n        const pendingArray = [];\n        pendingArray.push(permissionsService.getUserPermissionsAsPromise());\n        pendingArray.push(remoteConfigService.initialize());\n        combineLatest(pendingArray).subscribe(() => {\n          innerObserver.next();\n          innerObserver.complete();\n        });\n      }, error => {\n        self.onLoginError(error);\n        innerObserver.error(error);\n      });\n    });\n\n    return dataObservable.pipe(share());\n  }\n\n  public onLoginSuccess(sessionId: number): void {\n    // save user and sessionid into local storage\n    const session = {\n      user: this._user,\n      id: sessionId\n    };\n    this.storeSessionInfo(session);\n    ObservableWrapper.callEmit(this.onLogin, session);\n  }\n\n  public onLoginError(error: any): void {\n    this.dialogService.alert('ERROR', 'MESSAGES.ERROR_LOGIN');\n  }\n\n  public logout(): Observable<any> {\n    ObservableWrapper.callEmit(this.onLogout, null);\n    const self = this;\n    const sessionInfo = this.getSessionInfo();\n    const dataObservable: Observable<any> = new Observable(innerObserver => {\n      self.retrieveAuthService().then(service => {\n        service.endsession(sessionInfo.user, sessionInfo.id).subscribe(resp => {\n          const remoteConfigService = self.injector.get(ORemoteConfigurationService);\n          remoteConfigService.finalize().subscribe(() => {\n            self.onLogoutSuccess(resp);\n            innerObserver.next();\n            innerObserver.complete();\n          });\n        }, error => {\n          self.onLogoutError(error);\n          innerObserver.error(error);\n        });\n      });\n    });\n    return dataObservable.pipe(share());\n  }\n\n  public onLogoutSuccess(sessionId: number): void {\n    if (sessionId === 0) {\n      this.sessionExpired();\n    }\n  }\n\n  public onLogoutError(error: any): void {\n    console.error('Error on logout');\n  }\n\n  public sessionExpired(): void {\n    const sessionInfo = this.getSessionInfo();\n    delete sessionInfo.id;\n    delete sessionInfo.user;\n    this.storeSessionInfo(sessionInfo);\n  }\n\n  public isLoggedIn(): boolean {\n    const sessionInfo = this.getSessionInfo();\n    if (sessionInfo && sessionInfo.id && sessionInfo.user && sessionInfo.user.length > 0) {\n      if (isNaN(sessionInfo.id) && sessionInfo.id < 0) {\n        return false;\n      }\n      return true;\n    }\n    return false;\n  }\n\n  public storeSessionInfo(sessionInfo: SessionInfo): void {\n    if (sessionInfo !== undefined) {\n      const info = localStorage.getItem(this._localStorageKey);\n      let stored = null;\n      if (info && info.length > 0) {\n        stored = JSON.parse(info);\n      } else {\n        stored = {};\n      }\n      stored[Codes.SESSION_KEY] = sessionInfo;\n      localStorage.setItem(this._localStorageKey, JSON.stringify(stored));\n    }\n  }\n\n  public getSessionInfo(): SessionInfo {\n    const info = localStorage.getItem(this._localStorageKey);\n    if (!info) {\n      return {};\n    }\n    const stored = JSON.parse(info);\n    return stored[Codes.SESSION_KEY] || {};\n  }\n\n  public logoutAndRedirect(): void {\n    this.logout().subscribe(() => {\n      ServiceUtils.redirectLogin(this.router, false);\n    });\n  }\n\n  public logoutWithConfirmationAndRedirect(): void {\n    this.dialogService.confirm('CONFIRM', 'MESSAGES.CONFIRM_LOGOUT').then(res => {\n      if (res) {\n        this.logoutAndRedirect();\n      }\n    });\n  }\n\n}\n"]}
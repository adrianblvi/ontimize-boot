import { Injectable, Injector } from '@angular/core';
import { MatSnackBar } from '@angular/material';
import { Observable } from 'rxjs';
import { OSnackBarComponent } from '../components/snackbar/o-snackbar.component';
var SnackBarService = (function () {
    function SnackBarService(injector) {
        this.injector = injector;
        this.matSnackBar = this.injector.get(MatSnackBar);
    }
    SnackBarService.prototype.open = function (message, config) {
        var self = this;
        var observable = Observable.create(function (observer) {
            var containerClasses = [SnackBarService.DEFAULT_CONTAINER_CLASS];
            if (config && config.cssClass) {
                containerClasses.push(config.cssClass);
            }
            var matConfig = {
                duration: config && config.milliseconds ? config.milliseconds : SnackBarService.DEFAULT_DURATION,
                panelClass: containerClasses
            };
            self.snackBarRef = self.matSnackBar.openFromComponent(OSnackBarComponent, matConfig);
            self.snackBarRef.onAction().subscribe(function (arg) {
                observer.next(arg);
            });
            self.snackBarRef.afterDismissed().subscribe(function () {
                observer.complete();
                self.snackBarRef = null;
            });
            self.snackBarRef.instance.open(message, config);
        });
        return observable.toPromise();
    };
    SnackBarService.DEFAULT_DURATION = 2000;
    SnackBarService.DEFAULT_CONTAINER_CLASS = 'o-snackbar-container';
    SnackBarService.decorators = [
        { type: Injectable },
    ];
    SnackBarService.ctorParameters = function () { return [
        { type: Injector }
    ]; };
    return SnackBarService;
}());
export { SnackBarService };
//# sourceMappingURL=snackbar.service.js.map